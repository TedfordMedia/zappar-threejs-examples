/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is not neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/@zappar/zappar-cv/lib/deserializer.js":
/*!************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/deserializer.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MessageDeserializer = void 0;\nclass MessageDeserializer {\n    constructor() {\n        this._buffer = new ArrayBuffer(0);\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        this._startOffset = -1;\n        this._processor = {\n            int: () => this._i32View[this._startOffset++],\n            bool: () => (this._i32View[this._startOffset++] === 1),\n            type: () => this._i32View[this._startOffset++],\n            float: () => this._f32View[this._startOffset++],\n            timestamp: () => {\n                if (this._startOffset % 2 === 1)\n                    this._startOffset++;\n                let ret = this._f64View[this._startOffset / 2];\n                this._startOffset += 2;\n                return ret;\n            },\n            string: () => {\n                let len = this._i32View[this._startOffset++];\n                let decoder = new TextDecoder();\n                let res = decoder.decode(new Uint8Array(this._buffer, this._startOffset * 4, len));\n                this._startOffset += (len >> 2);\n                if ((len & 3) !== 0)\n                    this._startOffset++;\n                return res;\n            },\n            dataWithLength: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Uint8Array(len);\n                ret.set(this._u8View.subarray(this._startOffset * 4, this._startOffset * 4 + len));\n                this._startOffset += (ret.byteLength >> 2);\n                if ((ret.byteLength & 3) !== 0)\n                    this._startOffset++;\n                return ret.buffer;\n            },\n            matrix4x4: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 16));\n                this._startOffset += len;\n                return ret;\n            },\n            identityCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 50));\n                this._startOffset += len;\n                return ret;\n            },\n            expressionCoefficients: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 29));\n                this._startOffset += len;\n                return ret;\n            },\n            cameraModel: () => {\n                let len = this._i32View[this._startOffset++];\n                let ret = new Float32Array(len);\n                ret.set(this._f32View.subarray(this._startOffset, this._startOffset + 6));\n                this._startOffset += len;\n                return ret;\n            },\n            barcodeFormat: () => this._i32View[this._startOffset++],\n            faceLandmarkName: () => this._i32View[this._startOffset++],\n            instantTrackerTransformOrientation: () => this._i32View[this._startOffset++],\n        };\n    }\n    setData(data) {\n        this._buffer = data;\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 0;\n        this._length = 0;\n        if (data.byteLength >= 4) {\n            this._offset = 1;\n            this._length = this._i32View[0];\n        }\n        this._startOffset = -1;\n    }\n    hasMessage() {\n        return this._offset + 1 < this._length;\n    }\n    forMessages(cb) {\n        while (this.hasMessage()) {\n            let len = this._i32View[this._offset];\n            let messageId = this._i32View[this._offset + 1];\n            this._startOffset = this._offset + 2;\n            this._offset += len;\n            cb(messageId, this._processor);\n        }\n    }\n}\nexports.MessageDeserializer = MessageDeserializer;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/deserializer.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/event.js":
/*!*****************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/event.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Event5 = exports.Event3 = exports.Event2 = exports.Event1 = exports.Event = void 0;\nclass Event {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit() {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i]();\n        }\n    }\n}\nexports.Event = Event;\nclass Event1 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a);\n        }\n    }\n}\nexports.Event1 = Event1;\nclass Event2 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b);\n        }\n    }\n}\nexports.Event2 = Event2;\nclass Event3 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b, c) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b, c);\n        }\n    }\n}\nexports.Event3 = Event3;\nclass Event5 {\n    constructor() {\n        this._funcs = [];\n    }\n    bind(f) {\n        this._funcs.push(f);\n    }\n    unbind(f) {\n        let indx = this._funcs.indexOf(f);\n        if (indx > -1) {\n            this._funcs.splice(indx, 1);\n        }\n    }\n    emit(a, b, c, d, e) {\n        for (var i = 0, total = this._funcs.length; i < total; i++) {\n            this._funcs[i](a, b, c, d, e);\n        }\n    }\n}\nexports.Event5 = Event5;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/event.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js":
/*!****************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getRuntimeObject = void 0;\nfunction getRuntimeObject(mod) {\n    let analytics_project_id_set_wrapped = mod.cwrap(\"zappar_analytics_project_id_set\", null, [\n        \"string\"\n    ]);\n    let pipeline_create_wrapped = mod.cwrap(\"zappar_pipeline_create\", \"number\", []);\n    let pipeline_destroy_wrapped = mod.cwrap(\"zappar_pipeline_destroy\", null, [\"number\"]);\n    let pipeline_frame_update_wrapped = mod.cwrap(\"zappar_pipeline_frame_update\", null, [\n        \"number\"\n    ]);\n    let pipeline_frame_number_wrapped = mod.cwrap(\"zappar_pipeline_frame_number\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_model_wrapped = mod.cwrap(\"zappar_pipeline_camera_model\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_user_data_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_user_data\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_camera_frame_submit_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_camera_frame_camera_attitude_wrapped = mod.cwrap(\"zappar_pipeline_camera_frame_camera_attitude\", \"number\", [\n        \"number\"\n    ]);\n    let pipeline_motion_accelerometer_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_accelerometer_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_rotation_rate_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_rotation_rate_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let pipeline_motion_attitude_submit_wrapped = mod.cwrap(\"zappar_pipeline_motion_attitude_submit\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let camera_source_create_wrapped = mod.cwrap(\"zappar_camera_source_create\", \"number\", [\"number\", \"string\"]);\n    let camera_source_destroy_wrapped = mod.cwrap(\"zappar_camera_source_destroy\", null, [\"number\"]);\n    let image_tracker_create_wrapped = mod.cwrap(\"zappar_image_tracker_create\", \"number\", [\"number\"]);\n    let image_tracker_destroy_wrapped = mod.cwrap(\"zappar_image_tracker_destroy\", null, [\"number\"]);\n    let image_tracker_target_load_from_memory_wrapped = mod.cwrap(\"zappar_image_tracker_target_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let image_tracker_target_loaded_version_wrapped = mod.cwrap(\"zappar_image_tracker_target_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_target_count_wrapped = mod.cwrap(\"zappar_image_tracker_target_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_wrapped = mod.cwrap(\"zappar_image_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_image_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let image_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let image_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_image_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_create_wrapped = mod.cwrap(\"zappar_face_tracker_create\", \"number\", [\"number\"]);\n    let face_tracker_destroy_wrapped = mod.cwrap(\"zappar_face_tracker_destroy\", null, [\"number\"]);\n    let face_tracker_model_load_from_memory_wrapped = mod.cwrap(\"zappar_face_tracker_model_load_from_memory\", null, [\n        \"number\",\n        \"number\", \"number\"\n    ]);\n    let face_tracker_model_loaded_version_wrapped = mod.cwrap(\"zappar_face_tracker_model_loaded_version\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_face_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_enabled_wrapped = mod.cwrap(\"zappar_face_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_max_faces_set_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_max_faces_wrapped = mod.cwrap(\"zappar_face_tracker_max_faces\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_count_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_count\", \"number\", [\n        \"number\"\n    ]);\n    let face_tracker_anchor_id_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_id\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_pose_raw\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_identity_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_identity_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_tracker_anchor_expression_coefficients_wrapped = mod.cwrap(\"zappar_face_tracker_anchor_expression_coefficients\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let face_mesh_create_wrapped = mod.cwrap(\"zappar_face_mesh_create\", \"number\", []);\n    let face_mesh_destroy_wrapped = mod.cwrap(\"zappar_face_mesh_destroy\", null, [\"number\"]);\n    let face_landmark_create_wrapped = mod.cwrap(\"zappar_face_landmark_create\", \"number\", [\"number\"]);\n    let face_landmark_destroy_wrapped = mod.cwrap(\"zappar_face_landmark_destroy\", null, [\"number\"]);\n    let barcode_finder_create_wrapped = mod.cwrap(\"zappar_barcode_finder_create\", \"number\", [\"number\"]);\n    let barcode_finder_destroy_wrapped = mod.cwrap(\"zappar_barcode_finder_destroy\", null, [\"number\"]);\n    let barcode_finder_enabled_set_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_enabled_wrapped = mod.cwrap(\"zappar_barcode_finder_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_number_wrapped = mod.cwrap(\"zappar_barcode_finder_found_number\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_found_text_wrapped = mod.cwrap(\"zappar_barcode_finder_found_text\", \"string\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_found_format_wrapped = mod.cwrap(\"zappar_barcode_finder_found_format\", \"number\", [\n        \"number\",\n        \"number\"\n    ]);\n    let barcode_finder_formats_wrapped = mod.cwrap(\"zappar_barcode_finder_formats\", \"number\", [\n        \"number\"\n    ]);\n    let barcode_finder_formats_set_wrapped = mod.cwrap(\"zappar_barcode_finder_formats_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_create_wrapped = mod.cwrap(\"zappar_instant_world_tracker_create\", \"number\", [\"number\"]);\n    let instant_world_tracker_destroy_wrapped = mod.cwrap(\"zappar_instant_world_tracker_destroy\", null, [\"number\"]);\n    let instant_world_tracker_enabled_set_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled_set\", null, [\n        \"number\",\n        \"number\"\n    ]);\n    let instant_world_tracker_enabled_wrapped = mod.cwrap(\"zappar_instant_world_tracker_enabled\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_raw_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_raw\", \"number\", [\n        \"number\"\n    ]);\n    let instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped = mod.cwrap(\"zappar_instant_world_tracker_anchor_pose_set_from_camera_offset\", null, [\n        \"number\",\n        \"number\", \"number\", \"number\", \"number\"\n    ]);\n    let dataArrayArgLength = 32;\n    let dataArrayArg = mod._malloc(dataArrayArgLength);\n    let floatDataArrayArgLength = 16 * 4;\n    let floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n    return {\n        analytics_project_id_set: (id) => {\n            let arg_id = id;\n            let ret = analytics_project_id_set_wrapped(arg_id);\n            return ret;\n        },\n        pipeline_create: () => {\n            return pipeline_create_wrapped();\n        },\n        pipeline_destroy: () => {\n            pipeline_destroy_wrapped();\n        },\n        pipeline_frame_update: (o) => {\n            let ret = pipeline_frame_update_wrapped(o);\n            return ret;\n        },\n        pipeline_frame_number: (o) => {\n            let ret = pipeline_frame_number_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_model: (o) => {\n            let ret = pipeline_camera_model_wrapped(o);\n            let ab = new Float32Array(6);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 6 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_camera_frame_user_data: (o) => {\n            let ret = pipeline_camera_frame_user_data_wrapped(o);\n            return ret;\n        },\n        pipeline_camera_frame_submit: (o, data, width, height, user_data, camera_to_device_transform) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let arg_width = width;\n            let arg_height = height;\n            let arg_user_data = user_data;\n            if (floatDataArrayArgLength < camera_to_device_transform.byteLength) {\n                mod._free(floatDataArrayArgLength);\n                floatDataArrayArgLength = camera_to_device_transform.byteLength;\n                floatDataArrayArg = mod._malloc(floatDataArrayArgLength);\n            }\n            let arg_camera_to_device_transform = floatDataArrayArg;\n            mod.HEAPF32.set(camera_to_device_transform, floatDataArrayArg / 4);\n            let ret = pipeline_camera_frame_submit_wrapped(o, arg_data, arg_len_data, arg_width, arg_height, arg_user_data, arg_camera_to_device_transform);\n            return ret;\n        },\n        pipeline_camera_frame_camera_attitude: (o) => {\n            let ret = pipeline_camera_frame_camera_attitude_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        pipeline_motion_accelerometer_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_accelerometer_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_rotation_rate_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_rotation_rate_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        pipeline_motion_attitude_submit: (o, time, x, y, z) => {\n            let arg_time = time;\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let ret = pipeline_motion_attitude_submit_wrapped(o, arg_time, arg_x, arg_y, arg_z);\n            return ret;\n        },\n        camera_source_create: (pipeline, device_id) => {\n            let arg_pipeline = pipeline;\n            let arg_device_id = device_id;\n            return camera_source_create_wrapped(arg_pipeline, arg_device_id);\n        },\n        camera_source_destroy: () => {\n            camera_source_destroy_wrapped();\n        },\n        image_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return image_tracker_create_wrapped(arg_pipeline);\n        },\n        image_tracker_destroy: () => {\n            image_tracker_destroy_wrapped();\n        },\n        image_tracker_target_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = image_tracker_target_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        image_tracker_target_loaded_version: (o) => {\n            let ret = image_tracker_target_loaded_version_wrapped(o);\n            return ret;\n        },\n        image_tracker_target_count: (o) => {\n            let ret = image_tracker_target_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_enabled: (o) => {\n            let ret = image_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        image_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = image_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        image_tracker_anchor_count: (o) => {\n            let ret = image_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        image_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        image_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = image_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return face_tracker_create_wrapped(arg_pipeline);\n        },\n        face_tracker_destroy: () => {\n            face_tracker_destroy_wrapped();\n        },\n        face_tracker_model_load_from_memory: (o, data) => {\n            if (dataArrayArgLength < data.byteLength) {\n                mod._free(dataArrayArg);\n                dataArrayArgLength = data.byteLength;\n                dataArrayArg = mod._malloc(dataArrayArgLength);\n            }\n            let arg_data = dataArrayArg;\n            let arg_len_data = data.byteLength;\n            mod.HEAPU8.set(new Uint8Array(data), dataArrayArg);\n            let ret = face_tracker_model_load_from_memory_wrapped(o, arg_data, arg_len_data);\n            return ret;\n        },\n        face_tracker_model_loaded_version: (o) => {\n            let ret = face_tracker_model_loaded_version_wrapped(o);\n            return ret;\n        },\n        face_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = face_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        face_tracker_enabled: (o) => {\n            let ret = face_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        face_tracker_max_faces_set: (o, num) => {\n            let arg_num = num;\n            let ret = face_tracker_max_faces_set_wrapped(o, arg_num);\n            return ret;\n        },\n        face_tracker_max_faces: (o) => {\n            let ret = face_tracker_max_faces_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_count: (o) => {\n            let ret = face_tracker_anchor_count_wrapped(o);\n            return ret;\n        },\n        face_tracker_anchor_id: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_id_wrapped(o, arg_indx);\n            return ret;\n        },\n        face_tracker_anchor_pose_raw: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_pose_raw_wrapped(o, arg_indx);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_identity_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_identity_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(50);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 50 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_tracker_anchor_expression_coefficients: (o, indx) => {\n            let arg_indx = indx;\n            let ret = face_tracker_anchor_expression_coefficients_wrapped(o, arg_indx);\n            let ab = new Float32Array(29);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 29 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        face_mesh_create: () => {\n            return face_mesh_create_wrapped();\n        },\n        face_mesh_destroy: () => {\n            face_mesh_destroy_wrapped();\n        },\n        face_landmark_create: (landmark) => {\n            let arg_landmark = landmark;\n            return face_landmark_create_wrapped(arg_landmark);\n        },\n        face_landmark_destroy: () => {\n            face_landmark_destroy_wrapped();\n        },\n        barcode_finder_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return barcode_finder_create_wrapped(arg_pipeline);\n        },\n        barcode_finder_destroy: () => {\n            barcode_finder_destroy_wrapped();\n        },\n        barcode_finder_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = barcode_finder_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        barcode_finder_enabled: (o) => {\n            let ret = barcode_finder_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        barcode_finder_found_number: (o) => {\n            let ret = barcode_finder_found_number_wrapped(o);\n            return ret;\n        },\n        barcode_finder_found_text: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_text_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_found_format: (o, indx) => {\n            let arg_indx = indx;\n            let ret = barcode_finder_found_format_wrapped(o, arg_indx);\n            return ret;\n        },\n        barcode_finder_formats: (o) => {\n            let ret = barcode_finder_formats_wrapped(o);\n            return ret;\n        },\n        barcode_finder_formats_set: (o, f) => {\n            let arg_f = f;\n            let ret = barcode_finder_formats_set_wrapped(o, arg_f);\n            return ret;\n        },\n        instant_world_tracker_create: (pipeline) => {\n            let arg_pipeline = pipeline;\n            return instant_world_tracker_create_wrapped(arg_pipeline);\n        },\n        instant_world_tracker_destroy: () => {\n            instant_world_tracker_destroy_wrapped();\n        },\n        instant_world_tracker_enabled_set: (o, enabled) => {\n            let arg_enabled = enabled ? 1 : 0;\n            let ret = instant_world_tracker_enabled_set_wrapped(o, arg_enabled);\n            return ret;\n        },\n        instant_world_tracker_enabled: (o) => {\n            let ret = instant_world_tracker_enabled_wrapped(o);\n            ret = ret === 1;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_raw: (o) => {\n            let ret = instant_world_tracker_anchor_pose_raw_wrapped(o);\n            let ab = new Float32Array(16);\n            ab.set(mod.HEAPF32.subarray(ret / 4, 16 + ret / 4));\n            ret = ab;\n            return ret;\n        },\n        instant_world_tracker_anchor_pose_set_from_camera_offset: (o, x, y, z, orientation) => {\n            let arg_x = x;\n            let arg_y = y;\n            let arg_z = z;\n            let arg_orientation = orientation;\n            let ret = instant_world_tracker_anchor_pose_set_from_camera_offset_wrapped(o, arg_x, arg_y, arg_z, arg_orientation);\n            return ret;\n        },\n    };\n}\nexports.getRuntimeObject = getRuntimeObject;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.zappar_server = void 0;\nconst serializer_1 = __webpack_require__(/*! ../serializer */ \"./node_modules/@zappar/zappar-cv/lib/serializer.js\");\nconst deserializer_1 = __webpack_require__(/*! ../deserializer */ \"./node_modules/@zappar/zappar-cv/lib/deserializer.js\");\nclass zappar_server {\n    constructor(_impl, _sender) {\n        this._impl = _impl;\n        this._sender = _sender;\n        this._deserializer = new deserializer_1.MessageDeserializer();\n        this.serializersByPipelineId = new Map();\n        this._pipeline_id_by_pipeline_id = new Map();\n        this._pipeline_by_instance = new Map();\n        this._pipeline_id_by_camera_source_id = new Map();\n        this._camera_source_by_instance = new Map();\n        this._pipeline_id_by_image_tracker_id = new Map();\n        this._image_tracker_by_instance = new Map();\n        this._pipeline_id_by_face_tracker_id = new Map();\n        this._face_tracker_by_instance = new Map();\n        this._pipeline_id_by_face_mesh_id = new Map();\n        this._face_mesh_by_instance = new Map();\n        this._pipeline_id_by_face_landmark_id = new Map();\n        this._face_landmark_by_instance = new Map();\n        this._pipeline_id_by_barcode_finder_id = new Map();\n        this._barcode_finder_by_instance = new Map();\n        this._pipeline_id_by_instant_world_tracker_id = new Map();\n        this._instant_world_tracker_by_instance = new Map();\n    }\n    processBuffer(b) {\n        this._deserializer.setData(b);\n        this._deserializer.forMessages((messageId, msg) => {\n            switch (messageId) {\n                case 30: {\n                    this._impl.analytics_project_id_set(msg.string());\n                    break;\n                }\n                case 26: {\n                    let clientId = msg.type();\n                    let handle = this._impl.pipeline_create();\n                    this._pipeline_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_pipeline_id.set(clientId, clientId);\n                    this.serializersByPipelineId.set(clientId, new serializer_1.MessageSerializer(ab => {\n                        this._sender(clientId, ab);\n                    }));\n                    break;\n                }\n                case 27: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_destroy(obj);\n                    this._pipeline_by_instance.delete(clientId);\n                    break;\n                }\n                case 9: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_frame_update(obj);\n                    break;\n                }\n                case 8: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_camera_frame_submit(obj, msg.dataWithLength(), msg.int(), msg.int(), msg.int(), msg.matrix4x4());\n                    break;\n                }\n                case 10: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_accelerometer_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 11: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_rotation_rate_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 12: {\n                    let clientId = msg.type();\n                    let obj = this._pipeline_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.pipeline_motion_attitude_submit(obj, msg.timestamp(), msg.float(), msg.float(), msg.float());\n                    break;\n                }\n                case 28: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let arg_device_id = msg.string();\n                    let handle = this._impl.camera_source_create(arg_pipeline, arg_device_id);\n                    this._camera_source_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_camera_source_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 29: {\n                    let clientId = msg.type();\n                    let obj = this._camera_source_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.camera_source_destroy(obj);\n                    this._camera_source_by_instance.delete(clientId);\n                    break;\n                }\n                case 2: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.image_tracker_create(arg_pipeline);\n                    this._image_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_image_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 13: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_destroy(obj);\n                    this._image_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 4: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_target_load_from_memory(obj, msg.dataWithLength());\n                    break;\n                }\n                case 3: {\n                    let clientId = msg.type();\n                    let obj = this._image_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.image_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 19: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.face_tracker_create(arg_pipeline);\n                    this._face_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_face_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 20: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_destroy(obj);\n                    this._face_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 21: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_model_load_from_memory(obj, msg.dataWithLength());\n                    break;\n                }\n                case 22: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 23: {\n                    let clientId = msg.type();\n                    let obj = this._face_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_tracker_max_faces_set(obj, msg.int());\n                    break;\n                }\n                case 24: {\n                    let clientId = msg.type();\n                    let handle = this._impl.face_mesh_create();\n                    this._face_mesh_by_instance.set(clientId, handle);\n                    break;\n                }\n                case 25: {\n                    let clientId = msg.type();\n                    let obj = this._face_mesh_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_mesh_destroy(obj);\n                    this._face_mesh_by_instance.delete(clientId);\n                    break;\n                }\n                case 31: {\n                    let clientId = msg.type();\n                    let arg_landmark = msg.faceLandmarkName();\n                    let handle = this._impl.face_landmark_create(arg_landmark);\n                    this._face_landmark_by_instance.set(clientId, handle);\n                    break;\n                }\n                case 32: {\n                    let clientId = msg.type();\n                    let obj = this._face_landmark_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.face_landmark_destroy(obj);\n                    this._face_landmark_by_instance.delete(clientId);\n                    break;\n                }\n                case 15: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.barcode_finder_create(arg_pipeline);\n                    this._barcode_finder_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_barcode_finder_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 16: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_destroy(obj);\n                    this._barcode_finder_by_instance.delete(clientId);\n                    break;\n                }\n                case 17: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 18: {\n                    let clientId = msg.type();\n                    let obj = this._barcode_finder_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.barcode_finder_formats_set(obj, msg.barcodeFormat());\n                    break;\n                }\n                case 5: {\n                    let clientId = msg.type();\n                    let arg_pipeline_id = msg.type();\n                    let arg_pipeline = this._pipeline_by_instance.get(arg_pipeline_id);\n                    let handle = this._impl.instant_world_tracker_create(arg_pipeline);\n                    this._instant_world_tracker_by_instance.set(clientId, handle);\n                    this._pipeline_id_by_instant_world_tracker_id.set(clientId, arg_pipeline_id);\n                    break;\n                }\n                case 14: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_destroy(obj);\n                    this._instant_world_tracker_by_instance.delete(clientId);\n                    break;\n                }\n                case 6: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_enabled_set(obj, msg.bool());\n                    break;\n                }\n                case 7: {\n                    let clientId = msg.type();\n                    let obj = this._instant_world_tracker_by_instance.get(clientId);\n                    if (obj === undefined)\n                        return;\n                    this._impl.instant_world_tracker_anchor_pose_set_from_camera_offset(obj, msg.float(), msg.float(), msg.float(), msg.instantTrackerTransformOrientation());\n                    break;\n                }\n            }\n        });\n    }\n    exploreState() {\n        for (let [k, v] of this._pipeline_by_instance) {\n            let pipeline = this._pipeline_id_by_pipeline_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(7, msg => {\n                msg.type(k);\n                msg.int(this._impl.pipeline_frame_number(v));\n            });\n            serializer.sendMessage(6, msg => {\n                msg.type(k);\n                msg.cameraModel(this._impl.pipeline_camera_model(v));\n            });\n            serializer.sendMessage(5, msg => {\n                msg.type(k);\n                msg.int(this._impl.pipeline_camera_frame_user_data(v));\n            });\n            serializer.sendMessage(11, msg => {\n                msg.type(k);\n                msg.matrix4x4(this._impl.pipeline_camera_frame_camera_attitude(v));\n            });\n        }\n        for (let [k, v] of this._camera_source_by_instance) {\n            let pipeline = this._pipeline_id_by_camera_source_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._image_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_image_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(18, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_target_loaded_version(v));\n            });\n            serializer.sendMessage(20, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_target_count(v));\n            });\n            serializer.sendMessage(1, msg => {\n                msg.type(k);\n                msg.int(this._impl.image_tracker_anchor_count(v));\n            });\n            for (let i = 0; i < this._impl.image_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(2, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.image_tracker_anchor_id(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.image_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(3, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.matrix4x4(this._impl.image_tracker_anchor_pose_raw(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._face_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_face_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(17, msg => {\n                msg.type(k);\n                msg.int(this._impl.face_tracker_model_loaded_version(v));\n            });\n            serializer.sendMessage(12, msg => {\n                msg.type(k);\n                msg.int(this._impl.face_tracker_anchor_count(v));\n            });\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(13, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.face_tracker_anchor_id(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(14, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.matrix4x4(this._impl.face_tracker_anchor_pose_raw(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(15, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.identityCoefficients(this._impl.face_tracker_anchor_identity_coefficients(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.face_tracker_anchor_count(v); i++) {\n                serializer.sendMessage(16, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.expressionCoefficients(this._impl.face_tracker_anchor_expression_coefficients(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._face_mesh_by_instance) {\n            let pipeline = this._pipeline_id_by_face_mesh_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._face_landmark_by_instance) {\n            let pipeline = this._pipeline_id_by_face_landmark_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n        }\n        for (let [k, v] of this._barcode_finder_by_instance) {\n            let pipeline = this._pipeline_id_by_barcode_finder_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(8, msg => {\n                msg.type(k);\n                msg.int(this._impl.barcode_finder_found_number(v));\n            });\n            for (let i = 0; i < this._impl.barcode_finder_found_number(v); i++) {\n                serializer.sendMessage(9, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.string(this._impl.barcode_finder_found_text(v, i));\n                });\n            }\n            for (let i = 0; i < this._impl.barcode_finder_found_number(v); i++) {\n                serializer.sendMessage(10, msg => {\n                    msg.type(k);\n                    msg.int(i);\n                    msg.barcodeFormat(this._impl.barcode_finder_found_format(v, i));\n                });\n            }\n        }\n        for (let [k, v] of this._instant_world_tracker_by_instance) {\n            let pipeline = this._pipeline_id_by_instant_world_tracker_id.get(k);\n            if (!pipeline)\n                continue;\n            let serializer = this.serializersByPipelineId.get(pipeline);\n            if (!serializer)\n                continue;\n            serializer.sendMessage(4, msg => {\n                msg.type(k);\n                msg.matrix4x4(this._impl.instant_world_tracker_anchor_pose_raw(v));\n            });\n        }\n    }\n}\nexports.zappar_server = zappar_server;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/messages.js":
/*!********************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/messages.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MsgManager = void 0;\nconst event_1 = __webpack_require__(/*! ./event */ \"./node_modules/@zappar/zappar-cv/lib/event.js\");\nclass MsgManager {\n    constructor() {\n        this.onOutgoingMessage = new event_1.Event();\n        this.onIncomingMessage = new event_1.Event1();\n        this._outgoingMessages = [];\n    }\n    postIncomingMessage(msg) {\n        this.onIncomingMessage.emit(msg);\n    }\n    postOutgoingMessage(msg, trans) {\n        this._outgoingMessages.push({\n            msg: msg,\n            transferables: trans\n        });\n        this.onOutgoingMessage.emit();\n    }\n    getOutgoingMessages() {\n        let ret = this._outgoingMessages;\n        this._outgoingMessages = [];\n        return ret;\n    }\n}\nexports.MsgManager = MsgManager;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/messages.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/serializer.js":
/*!**********************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/serializer.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.MessageSerializer = void 0;\nclass MessageSerializer {\n    constructor(_messageSender) {\n        this._messageSender = _messageSender;\n        this._freeBufferPool = [];\n        this._buffer = new ArrayBuffer(16);\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 1;\n        this._startOffset = -1;\n        this._timeoutSet = false;\n        this._appender = {\n            int: i => this.int(i),\n            bool: i => this.int(i ? 1 : 0),\n            float: i => this.float(i),\n            string: i => this.string(i),\n            dataWithLength: i => this.arrayBuffer(i),\n            type: i => this.int(i),\n            matrix4x4: i => this.float32ArrayBuffer(i),\n            identityCoefficients: i => this.float32ArrayBuffer(i),\n            expressionCoefficients: i => this.float32ArrayBuffer(i),\n            cameraModel: i => this.float32ArrayBuffer(i),\n            timestamp: i => this.double(i),\n            barcodeFormat: i => this.int(i),\n            faceLandmarkName: i => this.int(i),\n            instantTrackerTransformOrientation: i => this.int(i),\n        };\n        this._freeBufferPool.push(new ArrayBuffer(16));\n        this._freeBufferPool.push(new ArrayBuffer(16));\n    }\n    bufferReturn(ab) {\n        this._freeBufferPool.push(ab);\n    }\n    // public copySerializedData(): ArrayBuffer {\n    //     let data = this._buffer.slice(0, this._offset * Int32Array.BYTES_PER_ELEMENT);\n    //     this._offset = 0;\n    //     this._startOffset = -1;\n    //     return data;\n    // }\n    _ensureArrayBuffer(incremental) {\n        let requirement = (this._offset + incremental + 8) * 4;\n        if (this._buffer && this._buffer.byteLength >= requirement)\n            return;\n        let newBuffer = undefined;\n        // for (let i = 0; i < this._freeBufferPool.length; i++) {\n        //     if (this._freeBufferPool[i].byteLength > requirement) {\n        //         newBuffer = this._freeBufferPool[i];\n        //         this._freeBufferPool.splice(i, 1);\n        //         break;\n        //     }\n        // }\n        if (!newBuffer) {\n            let nextPow2 = requirement;\n            nextPow2--;\n            nextPow2 |= nextPow2 >> 1;\n            nextPow2 |= nextPow2 >> 2;\n            nextPow2 |= nextPow2 >> 4;\n            nextPow2 |= nextPow2 >> 8;\n            nextPow2 |= nextPow2 >> 16;\n            nextPow2++;\n            newBuffer = new ArrayBuffer(nextPow2);\n        }\n        let oldView = this._buffer ? this._i32View : undefined;\n        this._buffer = newBuffer;\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        if (oldView)\n            this._i32View.set(oldView.subarray(0, this._offset));\n        // this._offset = 1; // First int is whole length\n        // this._startOffset = -1;\n    }\n    sendMessage(messageId, cb) {\n        this._ensureArrayBuffer(4);\n        this._startOffset = this._offset;\n        this._i32View[this._offset + 1] = messageId;\n        this._offset += 2;\n        cb(this._appender);\n        this._i32View[this._startOffset] = this._offset - this._startOffset;\n        this._startOffset = -1;\n        this._sendOneTime();\n    }\n    _sendOneTime() {\n        if (this._timeoutSet === false) {\n            this._timeoutSet = true;\n            setTimeout(() => {\n                this._timeoutSet = false;\n                this._send();\n            }, 0);\n        }\n    }\n    _send() {\n        // Continue filling the current buffer unless have a new buffer to fill\n        if (this._freeBufferPool.length === 0) {\n            this._sendOneTime();\n            return;\n        }\n        this._i32View[0] = this._offset;\n        this._messageSender(this._buffer);\n        this._buffer = undefined;\n        this._buffer = this._freeBufferPool.pop();\n        this._i32View = new Int32Array(this._buffer);\n        this._f32View = new Float32Array(this._buffer);\n        this._f64View = new Float64Array(this._buffer);\n        this._u8View = new Uint8Array(this._buffer);\n        this._u8cView = new Uint8ClampedArray(this._buffer);\n        this._u16View = new Uint16Array(this._buffer);\n        this._u32View = new Uint32Array(this._buffer);\n        this._offset = 1;\n        this._startOffset = -1;\n    }\n    int(arg) {\n        this._ensureArrayBuffer(1);\n        this._i32View[this._offset] = arg;\n        this._offset++;\n    }\n    double(arg) {\n        this._ensureArrayBuffer(2);\n        if (this._offset % 2 === 1)\n            this._offset++;\n        this._f64View[this._offset / 2] = arg;\n        this._offset += 2;\n    }\n    float(arg) {\n        this._ensureArrayBuffer(1);\n        this._f32View[this._offset] = arg;\n        this._offset++;\n    }\n    int32Array(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._i32View[this._offset + i] = args[i];\n        }\n        this._offset += args.length;\n    }\n    float32Array(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._f32View[this._offset + i] = args[i];\n        }\n        this._offset += args.length;\n    }\n    booleanArray(args) {\n        this._ensureArrayBuffer(args.length);\n        for (let i = 0; i < args.length; ++i) {\n            this._i32View[this._offset + i] = args[i] ? 1 : 0;\n        }\n        this._offset += args.length;\n    }\n    uint8ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.byteLength;\n        this._offset++;\n        this._u8View.set(data, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (data.byteLength >> 2);\n        if ((data.byteLength & 3) !== 0)\n            this._offset++;\n    }\n    arrayBuffer(data) {\n        let view = new Uint8Array(data);\n        this.uint8ArrayBuffer(view);\n    }\n    uint8ClampedArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.byteLength;\n        this._offset++;\n        this._u8cView.set(data, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (data.byteLength >> 2);\n        if ((data.byteLength & 3) !== 0)\n            this._offset++;\n    }\n    float32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._f32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    uint16ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        let u16Offset = this._offset * 2;\n        this._u16View.set(data, u16Offset);\n        // Update the int32 offset\n        this._offset += (data.length >> 1);\n        if ((data.length & 1) !== 0)\n            this._offset++;\n    }\n    int32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._i32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    uint32ArrayBuffer(data) {\n        this._ensureArrayBuffer(data.byteLength / 4);\n        this._i32View[this._offset] = data.length;\n        this._offset++;\n        this._u32View.set(data, this._offset);\n        this._offset += data.length;\n    }\n    string(data) {\n        let encoder = new TextEncoder();\n        let res = encoder.encode(data);\n        this._ensureArrayBuffer(res.byteLength / 4);\n        this._i32View[this._offset] = res.byteLength;\n        this._offset++;\n        this._u8View.set(res, this._offset * 4);\n        // Update the int32 offset\n        this._offset += (res.byteLength >> 2);\n        if ((res.byteLength & 3) !== 0)\n            this._offset++;\n    }\n}\nexports.MessageSerializer = MessageSerializer;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/serializer.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/worker-server.js":
/*!*************************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/worker-server.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.launchWorkerServer = exports.messageManager = void 0;\nconst ZNM = __webpack_require__(/*! ./zcv */ \"./node_modules/@zappar/zappar-cv/lib/zcv.js\");\nconst zappar_cwrap_1 = __webpack_require__(/*! ./gen/zappar-cwrap */ \"./node_modules/@zappar/zappar-cv/lib/gen/zappar-cwrap.js\");\nconst zappar_server_1 = __webpack_require__(/*! ./gen/zappar-server */ \"./node_modules/@zappar/zappar-cv/lib/gen/zappar-server.js\");\nconst messages_1 = __webpack_require__(/*! ./messages */ \"./node_modules/@zappar/zappar-cv/lib/messages.js\");\nconst gl_matrix_1 = __webpack_require__(/*! gl-matrix */ \"./node_modules/gl-matrix/esm/index.js\");\nexports.messageManager = new messages_1.MsgManager();\nfunction launchWorkerServer(wasmUrl) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let mod = ZNM.default({\n            locateFile: (path, prefix) => {\n                if (path.endsWith(\"zcv.wasm\")) {\n                    return wasmUrl;\n                }\n                return prefix + path;\n            },\n            onRuntimeInitialized: () => {\n                let r = zappar_cwrap_1.getRuntimeObject(mod);\n                let server = new zappar_server_1.zappar_server(r, (pipelineId, ab) => {\n                    exports.messageManager.postOutgoingMessage({\n                        p: pipelineId,\n                        t: \"zappar\",\n                        d: ab\n                    }, [ab]);\n                });\n                exports.messageManager.postOutgoingMessage(\"loaded\", []);\n                exports.messageManager.onIncomingMessage.bind((msg) => {\n                    var _a;\n                    switch (msg.t) {\n                        case \"zappar\":\n                            server.processBuffer(msg.d);\n                            exports.messageManager.postOutgoingMessage({ t: \"buf\", d: msg.d }, [msg.d]);\n                            break;\n                        case \"buf\":\n                            (_a = server.serializersByPipelineId.get(msg.p)) === null || _a === void 0 ? void 0 : _a.bufferReturn(msg.d);\n                            break;\n                        case \"cameraFrameC2S\":\n                            let msgt = msg;\n                            // PROCESS DATA\n                            let cameraToDeviceTransform = gl_matrix_1.mat4.create();\n                            if (msgt.userFacing) {\n                                gl_matrix_1.mat4.fromScaling(cameraToDeviceTransform, [-1, 1, -1]);\n                            }\n                            let pipeline = server._pipeline_by_instance.get(msgt.p);\n                            if (pipeline) {\n                                r.pipeline_camera_frame_submit(pipeline, msgt.d, msgt.width, msgt.height, msgt.token, cameraToDeviceTransform);\n                                r.pipeline_frame_update(pipeline);\n                                server.exploreState();\n                            }\n                            let ret = {\n                                token: msgt.token,\n                                d: msgt.d,\n                                p: msgt.p,\n                                t: \"cameraFrameRecycleS2C\"\n                            };\n                            exports.messageManager.postOutgoingMessage(ret, [msgt.d]);\n                            break;\n                    }\n                });\n            }\n        });\n    });\n}\nexports.launchWorkerServer = launchWorkerServer;\n;\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/worker-server.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/worker.js":
/*!******************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/worker.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst worker_server_1 = __webpack_require__(/*! ./worker-server */ \"./node_modules/@zappar/zappar-cv/lib/worker-server.js\");\nconst ctx = self;\nworker_server_1.messageManager.onOutgoingMessage.bind(() => {\n    let msgs = worker_server_1.messageManager.getOutgoingMessages();\n    for (let msg of msgs) {\n        ctx.postMessage(msg.msg, msg.transferables);\n    }\n});\nlet launchHandler = (evt) => {\n    if (evt && evt.data && evt.data.t === \"wasm\") {\n        let url = location.href.startsWith(\"blob\") ? evt.data.url : __webpack_require__(/*! ./zcv.wasm */ \"./node_modules/@zappar/zappar-cv/lib/zcv.wasm\").default;\n        worker_server_1.launchWorkerServer(url);\n        ctx.removeEventListener(\"message\", launchHandler);\n    }\n};\nctx.addEventListener(\"message\", launchHandler);\nctx.addEventListener(\"message\", evt => {\n    worker_server_1.messageManager.postIncomingMessage(evt.data);\n});\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/worker.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/zcv.js":
/*!***************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/zcv.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n\nvar ZCV = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(ZCV) {\n  ZCV = ZCV || {};\n\nvar c;c||(c=typeof ZCV !== 'undefined' ? ZCV : {});var aa={},l;for(l in c)c.hasOwnProperty(l)&&(aa[l]=c[l]);c.arguments=[];c.thisProgram=\"./this.program\";c.quit=function(a,b){throw b;};c.preRun=[];c.postRun=[];var n=\"\";function ba(a){return c.locateFile?c.locateFile(a,n):n+a}n=self.location.href;_scriptDir&&(n=_scriptDir);0!==n.indexOf(\"blob:\")?n=n.substr(0,n.lastIndexOf(\"/\")+1):n=\"\";c.read=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText};\nc.readBinary=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";b.send(null);return new Uint8Array(b.response)};c.readAsync=function(a,b,d){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):d()};e.onerror=d;e.send(null)};c.setWindowTitle=function(a){document.title=a};\nvar ca=c.print||(\"undefined\"!==typeof console?console.log.bind(console):\"undefined\"!==typeof print?print:null),p=c.printErr||(\"undefined\"!==typeof printErr?printErr:\"undefined\"!==typeof console&&console.warn.bind(console)||ca);for(l in aa)aa.hasOwnProperty(l)&&(c[l]=aa[l]);aa=void 0;function da(a){var b=u;u=u+a+15&-16;return b}function ea(a){var b=v[x>>2];a=b+a+15&-16;v[x>>2]=a;return a>=y&&!fa()?(v[x>>2]=b,0):b}function ha(a){var b;b||(b=16);return Math.ceil(a/b)*b}\nfunction ia(a){ja||(ja={});ja[a]||(ja[a]=1,p(a))}var ja,ka={\"f64-rem\":function(a,b){return a%b},\"debugger\":function(){debugger}},la={};function ma(a){if(a){assert(\"vi\");la.vi||(la.vi={});var b=la.vi;b[a]||(b[a]=function(b){return na(\"vi\",a,[b])});return b[a]}}function na(a,b,d){return d&&d.length?c[\"dynCall_\"+a].apply(null,[b].concat(d)):c[\"dynCall_\"+a].call(null,b)}var pa=!1;function assert(a,b){a||z(\"Assertion failed: \"+b)}\nfunction qa(a){var b=c[\"_\"+a];assert(b,\"Cannot call unknown function \"+a+\", make sure it is exported\");return b}var sa={stackSave:function(){B()},stackRestore:function(){C()},arrayToC:function(a){var b=ra(a.length);D.set(a,b);return b},stringToC:function(a){var b=0;if(null!==a&&void 0!==a&&0!==a){var d=(a.length<<2)+1;b=ra(d);E(a,G,b,d)}return b}},ta={string:sa.stringToC,array:sa.arrayToC};\nfunction H(a){var b;if(0===b||!a)return\"\";for(var d=0,e,f=0;;){e=G[a+f>>0];d|=e;if(0==e&&!b)break;f++;if(b&&f==b)break}b||(b=f);e=\"\";if(128>d){for(;0<b;)d=String.fromCharCode.apply(String,G.subarray(a,a+Math.min(b,1024))),e=e?e+d:d,a+=1024,b-=1024;return e}return ua(a)}var va=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction wa(a,b){for(var d=b;a[d];)++d;if(16<d-b&&a.subarray&&va)return va.decode(a.subarray(b,d));for(d=\"\";;){var e=a[b++];if(!e)return d;if(e&128){var f=a[b++]&63;if(192==(e&224))d+=String.fromCharCode((e&31)<<6|f);else{var g=a[b++]&63;if(224==(e&240))e=(e&15)<<12|f<<6|g;else{var h=a[b++]&63;if(240==(e&248))e=(e&7)<<18|f<<12|g<<6|h;else{var k=a[b++]&63;if(248==(e&252))e=(e&3)<<24|f<<18|g<<12|h<<6|k;else{var m=a[b++]&63;e=(e&1)<<30|f<<24|g<<18|h<<12|k<<6|m}}}65536>e?d+=String.fromCharCode(e):(e-=\n65536,d+=String.fromCharCode(55296|e>>10,56320|e&1023))}}else d+=String.fromCharCode(e)}}function ua(a){return wa(G,a)}\nfunction E(a,b,d,e){if(!(0<e))return 0;var f=d;e=d+e-1;for(var g=0;g<a.length;++g){var h=a.charCodeAt(g);if(55296<=h&&57343>=h){var k=a.charCodeAt(++g);h=65536+((h&1023)<<10)|k&1023}if(127>=h){if(d>=e)break;b[d++]=h}else{if(2047>=h){if(d+1>=e)break;b[d++]=192|h>>6}else{if(65535>=h){if(d+2>=e)break;b[d++]=224|h>>12}else{if(2097151>=h){if(d+3>=e)break;b[d++]=240|h>>18}else{if(67108863>=h){if(d+4>=e)break;b[d++]=248|h>>24}else{if(d+5>=e)break;b[d++]=252|h>>30;b[d++]=128|h>>24&63}b[d++]=128|h>>18&63}b[d++]=\n128|h>>12&63}b[d++]=128|h>>6&63}b[d++]=128|h&63}}b[d]=0;return d-f}function xa(a){for(var b=0,d=0;d<a.length;++d){var e=a.charCodeAt(d);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++d)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:2097151>=e?b+4:67108863>=e?b+5:b+6}return b}\"undefined\"!==typeof TextDecoder&&new TextDecoder(\"utf-16le\");var ya=65536,za=16777216,Aa=16777216;function Ba(a,b){0<a%b&&(a+=b-a%b);return a}var buffer,D,G,Ca,J,v,K,Da,Ea;\nfunction Fa(){c.HEAP8=D=new Int8Array(buffer);c.HEAP16=Ca=new Int16Array(buffer);c.HEAP32=v=new Int32Array(buffer);c.HEAPU8=G=new Uint8Array(buffer);c.HEAPU16=J=new Uint16Array(buffer);c.HEAPU32=K=new Uint32Array(buffer);c.HEAPF32=Da=new Float32Array(buffer);c.HEAPF64=Ea=new Float64Array(buffer)}var Ga,u,Ha,Ia,Ja,Ka,La,x;Ga=u=Ia=Ja=Ka=La=x=0;Ha=!1;c.reallocBuffer||(c.reallocBuffer=function(a){try{var b=D;var d=new ArrayBuffer(a);(new Int8Array(d)).set(b)}catch(e){return!1}return Ma(d)?d:!1});\nfunction fa(){var a=c.usingWasm?ya:za,b=2147483648-a;if(v[x>>2]>b)return!1;var d=y;for(y=Math.max(y,Aa);y<v[x>>2];)536870912>=y?y=Ba(2*y,a):y=Math.min(Ba((3*y+2147483648)/4,a),b);a=c.reallocBuffer(y);if(!a||a.byteLength!=y)return y=d,!1;c.buffer=buffer=a;Fa();return!0}var Na;try{Na=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,\"byteLength\").get),Na(new ArrayBuffer(4))}catch(a){Na=function(b){return b.byteLength}}\nvar Oa=c.TOTAL_STACK||5242880,y=c.TOTAL_MEMORY||16777216;y<Oa&&p(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+y+\"! (TOTAL_STACK=\"+Oa+\")\");c.buffer?buffer=c.buffer:(\"object\"===typeof WebAssembly&&\"function\"===typeof WebAssembly.Memory?(c.wasmMemory=new WebAssembly.Memory({initial:y/ya}),buffer=c.wasmMemory.buffer):buffer=new ArrayBuffer(y),c.buffer=buffer);Fa();\nfunction Pa(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b();else{var d=b.g;\"number\"===typeof d?void 0===b.P?c.dynCall_v(d):c.dynCall_vi(d,b.P):d(void 0===b.P?null:b.P)}}}var Qa=[],Ra=[],Sa=[],Ta=[],Ua=[],Va=!1;function Wa(){var a=c.preRun.shift();Qa.unshift(a)}var Xa=Math.abs,Ya=Math.ceil,Za=Math.floor,$a=Math.min,ab=0,bb=null,cb=null;function db(){ab++;c.monitorRunDependencies&&c.monitorRunDependencies(ab)}\nfunction eb(){ab--;c.monitorRunDependencies&&c.monitorRunDependencies(ab);if(0==ab&&(null!==bb&&(clearInterval(bb),bb=null),cb)){var a=cb;cb=null;a()}}c.preloadedImages={};c.preloadedAudios={};function fb(a){return String.prototype.startsWith?a.startsWith(\"data:application/octet-stream;base64,\"):0===a.indexOf(\"data:application/octet-stream;base64,\")}\n(function(){function a(){try{if(c.wasmBinary)return new Uint8Array(c.wasmBinary);if(c.readBinary)return c.readBinary(f);throw\"both async and sync fetching of the wasm failed\";}catch(r){z(r)}}function b(){return c.wasmBinary||\"function\"!==typeof fetch?new Promise(function(b){b(a())}):fetch(f,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+f+\"'\";return a.arrayBuffer()}).catch(function(){return a()})}function d(a){function d(a){k=a.exports;if(k.memory){a=\nk.memory;var b=c.buffer;a.byteLength<b.byteLength&&p(\"the new buffer in mergeMemory is smaller than the previous one. in native wasm, we should grow memory here\");b=new Int8Array(b);(new Int8Array(a)).set(b);c.buffer=buffer=a;Fa()}c.asm=k;c.usingWasm=!0;eb()}function e(a){d(a.instance)}function g(a){b().then(function(a){return WebAssembly.instantiate(a,h)}).then(a,function(a){p(\"failed to asynchronously prepare wasm: \"+a);z(a)})}if(\"object\"!==typeof WebAssembly)return p(\"no native wasm support detected\"),\n!1;if(!(c.wasmMemory instanceof WebAssembly.Memory))return p(\"no native wasm Memory in use\"),!1;a.memory=c.wasmMemory;h.global={NaN:NaN,Infinity:Infinity};h[\"global.Math\"]=Math;h.env=a;db();if(c.instantiateWasm)try{return c.instantiateWasm(h,d)}catch(F){return p(\"Module.instantiateWasm callback failed with error: \"+F),!1}c.wasmBinary||\"function\"!==typeof WebAssembly.instantiateStreaming||fb(f)||\"function\"!==typeof fetch?g(e):WebAssembly.instantiateStreaming(fetch(f,{credentials:\"same-origin\"}),h).then(e,\nfunction(a){p(\"wasm streaming compile failed: \"+a);p(\"falling back to ArrayBuffer instantiation\");g(e)});return{}}var e=\"zcv.wast\",f=\"zcv.wasm\",g=\"zcv.temp.asm.js\";fb(e)||(e=ba(e));fb(f)||(f=ba(f));fb(g)||(g=ba(g));var h={global:null,env:null,asm2wasm:ka,parent:c},k=null;c.asmPreload=c.asm;var m=c.reallocBuffer;c.reallocBuffer=function(a){if(\"asmjs\"===q)var b=m(a);else a:{a=Ba(a,c.usingWasm?ya:za);var d=c.buffer.byteLength;if(c.usingWasm)try{b=-1!==c.wasmMemory.grow((a-d)/65536)?c.buffer=c.wasmMemory.buffer:\nnull;break a}catch(I){b=null;break a}b=void 0}return b};var q=\"\";c.asm=function(a,b){if(!b.table){a=c.wasmTableSize;void 0===a&&(a=1024);var e=c.wasmMaxTableSize;b.table=\"object\"===typeof WebAssembly&&\"function\"===typeof WebAssembly.Table?void 0!==e?new WebAssembly.Table({initial:a,maximum:e,element:\"anyfunc\"}):new WebAssembly.Table({initial:a,element:\"anyfunc\"}):Array(a);c.wasmTable=b.table}b.__memory_base||(b.__memory_base=c.STATIC_BASE);b.__table_base||(b.__table_base=0);b=d(b);assert(b,\"no binaryen method succeeded.\");\nreturn b}})();var gb=[function(){if(self.crypto&&self.crypto.getRandomValues){var a=new Uint32Array(1);self.crypto.getRandomValues(a);return a[0]}return 9007199254740991*Math.random()}];Ga=1024;u=Ga+432912;\nRa.push({g:function(){hb()}},{g:function(){ib()}},{g:function(){jb()}},{g:function(){kb()}},{g:function(){lb()}},{g:function(){mb()}},{g:function(){nb()}},{g:function(){ob()}},{g:function(){pb()}},{g:function(){qb()}},{g:function(){rb()}},{g:function(){sb()}},{g:function(){tb()}},{g:function(){ub()}},{g:function(){vb()}},{g:function(){wb()}},{g:function(){xb()}},{g:function(){yb()}},{g:function(){zb()}},{g:function(){Ab()}},{g:function(){Bb()}});c.STATIC_BASE=Ga;c.STATIC_BUMP=432912;var Cb=u;u+=16;\nvar L={};\nfunction Db(a){if(Db.Da){var b=v[a>>2];var d=v[b>>2]}else Db.Da=!0,L.USER=L.LOGNAME=\"web_user\",L.PATH=\"/\",L.PWD=\"/\",L.HOME=\"/home/web_user\",L.LANG=\"C.UTF-8\",L._=c.thisProgram,d=Ha?Va?M(1024):ea(1024):da(1024),b=Ha?Va?M(256):ea(256):da(256),v[b>>2]=d,v[a>>2]=b;a=[];var e=0,f;for(f in L)if(\"string\"===typeof L[f]){var g=f+\"=\"+L[f];a.push(g);e+=g.length}if(1024<e)throw Error(\"Environment size exceeded TOTAL_ENV_SIZE!\");for(f=0;f<a.length;f++){e=g=a[f];for(var h=d,k=0;k<e.length;++k)D[h++>>0]=e.charCodeAt(k);\nD[h>>0]=0;v[b+4*f>>2]=d;d+=g.length+1}v[b+4*a.length>>2]=0}function O(){z()}function Eb(){return\"undefined\"!==typeof dateNow||self.performance&&self.performance.now}\nvar P={I:1,u:2,Fc:3,Bb:4,M:5,ja:6,Ua:7,Zb:8,B:9,ib:10,fa:11,Pc:11,ya:12,W:13,ub:14,lc:15,ga:16,ha:17,Qc:18,Y:19,Z:20,N:21,i:22,Ub:23,wa:24,D:25,Mc:26,vb:27,hc:28,O:29,Cc:30,Nb:31,vc:32,rb:33,zc:34,cc:42,yb:43,jb:44,Eb:45,Fb:46,Gb:47,Mb:48,Nc:49,Xb:50,Db:51,ob:35,$b:37,$a:52,cb:53,Rc:54,Vb:55,eb:56,fb:57,pb:35,gb:59,jc:60,Yb:61,Jc:62,ic:63,dc:64,ec:65,Bc:66,ac:67,Xa:68,Gc:69,kb:70,wc:71,Pb:72,sb:73,bb:74,qc:76,ab:77,Ac:78,Hb:79,Ib:80,Lb:81,Kb:82,Jb:83,kc:38,ia:39,Qb:36,X:40,rc:95,uc:96,nb:104,Wb:105,\nYa:97,yc:91,oc:88,fc:92,Dc:108,mb:111,Va:98,lb:103,Tb:101,Rb:100,Kc:110,wb:112,xb:113,Ab:115,Za:114,qb:89,Ob:90,xc:93,Ec:94,Wa:99,Sb:102,Cb:106,mc:107,Lc:109,Oc:87,tb:122,Hc:116,pc:95,bc:123,zb:84,sc:75,hb:125,nc:131,tc:130,Ic:86};function Fb(a){c.___errno_location&&(v[c.___errno_location()>>2]=a);return a}function Gb(a,b){if(0===a)a=Date.now();else if(1===a&&Eb())a=O();else return Fb(P.i),-1;v[b>>2]=a/1E3|0;v[b+4>>2]=a%1E3*1E6|0;return 0}var Hb=0,Ib=[],Q={};\nfunction Jb(a){if(!a||Q[a])return a;for(var b in Q){var d=+b;if(Q[d].ka===a)return d}return a}function Kb(a){if(a){var b=Q[a];assert(0<b.J);b.J--;0!==b.J||b.L||(b.oa&&c.dynCall_vi(b.oa,a),delete Q[a],___cxa_free_exception(a))}}function ___cxa_free_exception(a){try{return Lb(a)}catch(b){}}\nfunction Mb(){var a=Ib.pop();a=Jb(a);Q[a].L||(Ib.push(a),Q[a].L=!0);Hb=a;throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";}\nfunction Nb(){var a=Hb;if(!a)return(Ob(0),0)|0;var b=Q[a],d=b.type;if(!d)return(Ob(0),a)|0;var e=Array.prototype.slice.call(arguments);c.___cxa_is_pointer_type(d);Nb.buffer||(Nb.buffer=M(4));v[Nb.buffer>>2]=a;a=Nb.buffer;for(var f=0;f<e.length;f++)if(e[f]&&c.___cxa_can_catch(e[f],d,a))return a=v[a>>2],b.ka=a,(Ob(e[f]),a)|0;a=v[a>>2];return(Ob(d),a)|0}\nvar Pb={0:\"Success\",1:\"Not super-user\",2:\"No such file or directory\",3:\"No such process\",4:\"Interrupted system call\",5:\"I/O error\",6:\"No such device or address\",7:\"Arg list too long\",8:\"Exec format error\",9:\"Bad file number\",10:\"No children\",11:\"No more processes\",12:\"Not enough core\",13:\"Permission denied\",14:\"Bad address\",15:\"Block device required\",16:\"Mount device busy\",17:\"File exists\",18:\"Cross-device link\",19:\"No such device\",20:\"Not a directory\",21:\"Is a directory\",22:\"Invalid argument\",23:\"Too many open files in system\",\n24:\"Too many open files\",25:\"Not a typewriter\",26:\"Text file busy\",27:\"File too large\",28:\"No space left on device\",29:\"Illegal seek\",30:\"Read only file system\",31:\"Too many links\",32:\"Broken pipe\",33:\"Math arg out of domain of func\",34:\"Math result not representable\",35:\"File locking deadlock error\",36:\"File or path name too long\",37:\"No record locks available\",38:\"Function not implemented\",39:\"Directory not empty\",40:\"Too many symbolic links\",42:\"No message of desired type\",43:\"Identifier removed\",\n44:\"Channel number out of range\",45:\"Level 2 not synchronized\",46:\"Level 3 halted\",47:\"Level 3 reset\",48:\"Link number out of range\",49:\"Protocol driver not attached\",50:\"No CSI structure available\",51:\"Level 2 halted\",52:\"Invalid exchange\",53:\"Invalid request descriptor\",54:\"Exchange full\",55:\"No anode\",56:\"Invalid request code\",57:\"Invalid slot\",59:\"Bad font file fmt\",60:\"Device not a stream\",61:\"No data (for no delay io)\",62:\"Timer expired\",63:\"Out of streams resources\",64:\"Machine is not on the network\",\n65:\"Package not installed\",66:\"The object is remote\",67:\"The link has been severed\",68:\"Advertise error\",69:\"Srmount error\",70:\"Communication error on send\",71:\"Protocol error\",72:\"Multihop attempted\",73:\"Cross mount point (not really error)\",74:\"Trying to read unreadable message\",75:\"Value too large for defined data type\",76:\"Given log. name not unique\",77:\"f.d. invalid for this operation\",78:\"Remote address changed\",79:\"Can   access a needed shared lib\",80:\"Accessing a corrupted shared lib\",81:\".lib section in a.out corrupted\",\n82:\"Attempting to link in too many libs\",83:\"Attempting to exec a shared library\",84:\"Illegal byte sequence\",86:\"Streams pipe error\",87:\"Too many users\",88:\"Socket operation on non-socket\",89:\"Destination address required\",90:\"Message too long\",91:\"Protocol wrong type for socket\",92:\"Protocol not available\",93:\"Unknown protocol\",94:\"Socket type not supported\",95:\"Not supported\",96:\"Protocol family not supported\",97:\"Address family not supported by protocol family\",98:\"Address already in use\",99:\"Address not available\",\n100:\"Network interface is not configured\",101:\"Network is unreachable\",102:\"Connection reset by network\",103:\"Connection aborted\",104:\"Connection reset by peer\",105:\"No buffer space available\",106:\"Socket is already connected\",107:\"Socket is not connected\",108:\"Can't send after socket shutdown\",109:\"Too many references\",110:\"Connection timed out\",111:\"Connection refused\",112:\"Host is down\",113:\"Host is unreachable\",114:\"Socket already connected\",115:\"Connection already in progress\",116:\"Stale file handle\",\n122:\"Quota exceeded\",123:\"No medium (in tape drive)\",125:\"Operation canceled\",130:\"Previous owner died\",131:\"State not recoverable\"};function Qb(a,b){for(var d=0,e=a.length-1;0<=e;e--){var f=a[e];\".\"===f?a.splice(e,1):\"..\"===f?(a.splice(e,1),d++):d&&(a.splice(e,1),d--)}if(b)for(;d;d--)a.unshift(\"..\");return a}function Rb(a){var b=\"/\"===a.charAt(0),d=\"/\"===a.substr(-1);(a=Qb(a.split(\"/\").filter(function(a){return!!a}),!b).join(\"/\"))||b||(a=\".\");a&&d&&(a+=\"/\");return(b?\"/\":\"\")+a}\nfunction Sb(a){var b=/^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return\".\";b&&(b=b.substr(0,b.length-1));return a+b}function Tb(a){if(\"/\"===a)return\"/\";var b=a.lastIndexOf(\"/\");return-1===b?a:a.substr(b+1)}\nfunction Ub(){for(var a=\"\",b=!1,d=arguments.length-1;-1<=d&&!b;d--){b=0<=d?arguments[d]:\"/\";if(\"string\"!==typeof b)throw new TypeError(\"Arguments to path.resolve must be strings\");if(!b)return\"\";a=b+\"/\"+a;b=\"/\"===b.charAt(0)}a=Qb(a.split(\"/\").filter(function(a){return!!a}),!b).join(\"/\");return(b?\"/\":\"\")+a||\".\"}var Vb=[];function Wb(a,b){Vb[a]={input:[],output:[],G:b};Xb(a,Yb)}\nvar Yb={open:function(a){var b=Vb[a.node.rdev];if(!b)throw new R(P.Y);a.tty=b;a.seekable=!1},close:function(a){a.tty.G.flush(a.tty)},flush:function(a){a.tty.G.flush(a.tty)},read:function(a,b,d,e){if(!a.tty||!a.tty.G.ra)throw new R(P.ja);for(var f=0,g=0;g<e;g++){try{var h=a.tty.G.ra(a.tty)}catch(k){throw new R(P.M);}if(void 0===h&&0===f)throw new R(P.fa);if(null===h||void 0===h)break;f++;b[d+g]=h}f&&(a.node.timestamp=Date.now());return f},write:function(a,b,d,e){if(!a.tty||!a.tty.G.da)throw new R(P.ja);\nvar f=0;try{if(0===d&&0===e)a.tty.G.flush(a.tty);else for(;f<e;)a.tty.G.da(a.tty,b[d+f]),f++}catch(g){throw new R(P.M);}e&&(a.node.timestamp=Date.now());return f}},ac={ra:function(a){if(!a.input.length){var b=null;\"undefined\"!=typeof window&&\"function\"==typeof window.prompt?(b=window.prompt(\"Input: \"),null!==b&&(b+=\"\\n\")):\"function\"==typeof readline&&(b=readline(),null!==b&&(b+=\"\\n\"));if(!b)return null;a.input=Zb(b,!0)}return a.input.shift()},da:function(a,b){null===b||10===b?(ca(wa(a.output,0)),\na.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(ca(wa(a.output,0)),a.output=[])}},bc={da:function(a,b){null===b||10===b?(p(wa(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(p(wa(a.output,0)),a.output=[])}},S={o:null,A:function(){return S.createNode(null,\"/\",16895,0)},createNode:function(a,b,d,e){if(24576===(d&61440)||4096===(d&61440))throw new R(P.I);S.o||(S.o={dir:{node:{m:S.c.m,s:S.c.s,lookup:S.c.lookup,R:S.c.R,\nrename:S.c.rename,unlink:S.c.unlink,rmdir:S.c.rmdir,readdir:S.c.readdir,symlink:S.c.symlink},stream:{F:S.f.F}},file:{node:{m:S.c.m,s:S.c.s},stream:{F:S.f.F,read:S.f.read,write:S.f.write,la:S.f.la,sa:S.f.sa,T:S.f.T}},link:{node:{m:S.c.m,s:S.c.s,readlink:S.c.readlink},stream:{}},na:{node:{m:S.c.m,s:S.c.s},stream:cc}});d=dc(a,b,d,e);16384===(d.mode&61440)?(d.c=S.o.dir.node,d.f=S.o.dir.stream,d.b={}):32768===(d.mode&61440)?(d.c=S.o.file.node,d.f=S.o.file.stream,d.h=0,d.b=null):40960===(d.mode&61440)?\n(d.c=S.o.link.node,d.f=S.o.link.stream):8192===(d.mode&61440)&&(d.c=S.o.na.node,d.f=S.o.na.stream);d.timestamp=Date.now();a&&(a.b[b]=d);return d},Ea:function(a){if(a.b&&a.b.subarray){for(var b=[],d=0;d<a.h;++d)b.push(a.b[d]);return b}return a.b},Wc:function(a){return a.b?a.b.subarray?a.b.subarray(0,a.h):new Uint8Array(a.b):new Uint8Array},pa:function(a,b){a.b&&a.b.subarray&&b>a.b.length&&(a.b=S.Ea(a),a.h=a.b.length);if(!a.b||a.b.subarray){var d=a.b?a.b.length:0;d>=b||(b=Math.max(b,d*(1048576>d?2:\n1.125)|0),0!=d&&(b=Math.max(b,256)),d=a.b,a.b=new Uint8Array(b),0<a.h&&a.b.set(d.subarray(0,a.h),0))}else for(!a.b&&0<b&&(a.b=[]);a.b.length<b;)a.b.push(0)},Ma:function(a,b){if(a.h!=b)if(0==b)a.b=null,a.h=0;else{if(!a.b||a.b.subarray){var d=a.b;a.b=new Uint8Array(new ArrayBuffer(b));d&&a.b.set(d.subarray(0,Math.min(b,a.h)))}else if(a.b||(a.b=[]),a.b.length>b)a.b.length=b;else for(;a.b.length<b;)a.b.push(0);a.h=b}},c:{m:function(a){var b={};b.dev=8192===(a.mode&61440)?a.id:1;b.ino=a.id;b.mode=a.mode;\nb.nlink=1;b.uid=0;b.gid=0;b.rdev=a.rdev;16384===(a.mode&61440)?b.size=4096:32768===(a.mode&61440)?b.size=a.h:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.atime=new Date(a.timestamp);b.mtime=new Date(a.timestamp);b.ctime=new Date(a.timestamp);b.Ca=4096;b.blocks=Math.ceil(b.size/b.Ca);return b},s:function(a,b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);void 0!==b.size&&S.Ma(a,b.size)},lookup:function(){throw fc[P.u];},R:function(a,b,d,e){return S.createNode(a,\nb,d,e)},rename:function(a,b,d){if(16384===(a.mode&61440)){try{var e=hc(b,d)}catch(g){}if(e)for(var f in e.b)throw new R(P.ia);}delete a.parent.b[a.name];a.name=d;b.b[d]=a;a.parent=b},unlink:function(a,b){delete a.b[b]},rmdir:function(a,b){var d=hc(a,b),e;for(e in d.b)throw new R(P.ia);delete a.b[b]},readdir:function(a){var b=[\".\",\"..\"],d;for(d in a.b)a.b.hasOwnProperty(d)&&b.push(d);return b},symlink:function(a,b,d){a=S.createNode(a,b,41471,0);a.link=d;return a},readlink:function(a){if(40960!==(a.mode&\n61440))throw new R(P.i);return a.link}},f:{read:function(a,b,d,e,f){var g=a.node.b;if(f>=a.node.h)return 0;a=Math.min(a.node.h-f,e);assert(0<=a);if(8<a&&g.subarray)b.set(g.subarray(f,f+a),d);else for(e=0;e<a;e++)b[d+e]=g[f+e];return a},write:function(a,b,d,e,f,g){g=!1;if(!e)return 0;a=a.node;a.timestamp=Date.now();if(b.subarray&&(!a.b||a.b.subarray)){if(g)return a.b=b.subarray(d,d+e),a.h=e;if(0===a.h&&0===f)return a.b=new Uint8Array(b.subarray(d,d+e)),a.h=e;if(f+e<=a.h)return a.b.set(b.subarray(d,\nd+e),f),e}S.pa(a,f+e);if(a.b.subarray&&b.subarray)a.b.set(b.subarray(d,d+e),f);else for(g=0;g<e;g++)a.b[f+g]=b[d+g];a.h=Math.max(a.h,f+e);return e},F:function(a,b,d){1===d?b+=a.position:2===d&&32768===(a.node.mode&61440)&&(b+=a.node.h);if(0>b)throw new R(P.i);return b},la:function(a,b,d){S.pa(a.node,b+d);a.node.h=Math.max(a.node.h,b+d)},sa:function(a,b,d,e,f,g,h){if(32768!==(a.node.mode&61440))throw new R(P.Y);d=a.node.b;if(h&2||d.buffer!==b&&d.buffer!==b.buffer){if(0<f||f+e<a.node.h)d.subarray?d=\nd.subarray(f,f+e):d=Array.prototype.slice.call(d,f,f+e);a=!0;e=M(e);if(!e)throw new R(P.ya);b.set(d,e)}else a=!1,e=d.byteOffset;return{Ka:e,za:a}},T:function(a,b,d,e,f){if(32768!==(a.node.mode&61440))throw new R(P.Y);if(f&2)return 0;S.f.write(a,b,0,e,d,!1);return 0}}};u+=16;u+=16;u+=16;var ic=null,jc={},T=[],kc=1,lc=null,mc=!0,nc={},R=null,fc={};\nfunction oc(a,b){a=Ub(\"/\",a);b=b||{};if(!a)return{path:\"\",node:null};var d={qa:!0,ea:0},e;for(e in d)void 0===b[e]&&(b[e]=d[e]);if(8<b.ea)throw new R(P.X);a=Qb(a.split(\"/\").filter(function(a){return!!a}),!1);var f=ic;d=\"/\";for(e=0;e<a.length;e++){var g=e===a.length-1;if(g&&b.parent)break;f=hc(f,a[e]);d=Rb(d+\"/\"+a[e]);f.S&&(!g||g&&b.qa)&&(f=f.S.root);if(!g||b.aa)for(g=0;40960===(f.mode&61440);)if(f=pc(d),d=Ub(Sb(d),f),f=oc(d,{ea:b.ea}).node,40<g++)throw new R(P.X);}return{path:d,node:f}}\nfunction qc(a){for(var b;;){if(a===a.parent)return a=a.A.ta,b?\"/\"!==a[a.length-1]?a+\"/\"+b:a+b:a;b=b?a.name+\"/\"+b:a.name;a=a.parent}}function rc(a,b){for(var d=0,e=0;e<b.length;e++)d=(d<<5)-d+b.charCodeAt(e)|0;return(a+d>>>0)%lc.length}function sc(a){var b=rc(a.parent.id,a.name);a.Ja=lc[b];lc[b]=a}function hc(a,b){var d;if(d=(d=tc(a,\"x\"))?d:a.c.lookup?0:P.W)throw new R(d,a);for(d=lc[rc(a.id,b)];d;d=d.Ja){var e=d.name;if(d.parent.id===a.id&&e===b)return d}return a.c.lookup(a,b)}\nfunction dc(a,b,d,e){uc||(uc=function(a,b,d,e){a||(a=this);this.parent=a;this.A=a.A;this.S=null;this.id=kc++;this.name=b;this.mode=d;this.c={};this.f={};this.rdev=e},uc.prototype={},Object.defineProperties(uc.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}}}));a=new uc(a,b,d,e);sc(a);return a}\nvar vc={r:0,rs:1052672,\"r+\":2,w:577,wx:705,xw:705,\"w+\":578,\"wx+\":706,\"xw+\":706,a:1089,ax:1217,xa:1217,\"a+\":1090,\"ax+\":1218,\"xa+\":1218};function wc(a){var b=[\"r\",\"w\",\"rw\"][a&3];a&512&&(b+=\"w\");return b}function tc(a,b){if(mc)return 0;if(-1===b.indexOf(\"r\")||a.mode&292){if(-1!==b.indexOf(\"w\")&&!(a.mode&146)||-1!==b.indexOf(\"x\")&&!(a.mode&73))return P.W}else return P.W;return 0}function xc(a,b){try{return hc(a,b),P.ha}catch(d){}return tc(a,\"wx\")}\nfunction yc(a){var b=4096;for(a=a||0;a<=b;a++)if(!T[a])return a;throw new R(P.wa);}function zc(a,b){Ac||(Ac=function(){},Ac.prototype={},Object.defineProperties(Ac.prototype,{object:{get:function(){return this.node},set:function(a){this.node=a}}}));var d=new Ac,e;for(e in a)d[e]=a[e];a=d;b=yc(b);a.fd=b;return T[b]=a}var cc={open:function(a){a.f=jc[a.node.rdev].f;a.f.open&&a.f.open(a)},F:function(){throw new R(P.O);}};function Xb(a,b){jc[a]={f:b}}\nfunction Bc(a,b){var d=\"/\"===b,e=!b;if(d&&ic)throw new R(P.ga);if(!d&&!e){var f=oc(b,{qa:!1});b=f.path;f=f.node;if(f.S)throw new R(P.ga);if(16384!==(f.mode&61440))throw new R(P.Z);}b={type:a,$c:{},ta:b,Ia:[]};a=a.A(b);a.A=b;b.root=a;d?ic=a:f&&(f.S=b,f.A&&f.A.Ia.push(b))}function Cc(a,b,d){var e=oc(a,{parent:!0}).node;a=Tb(a);if(!a||\".\"===a||\"..\"===a)throw new R(P.i);var f=xc(e,a);if(f)throw new R(f);if(!e.c.R)throw new R(P.I);return e.c.R(e,a,b,d)}function U(a){Cc(a,16895,0)}\nfunction Dc(a,b,d){\"undefined\"===typeof d&&(d=b,b=438);Cc(a,b|8192,d)}function Ec(a,b){if(!Ub(a))throw new R(P.u);var d=oc(b,{parent:!0}).node;if(!d)throw new R(P.u);b=Tb(b);var e=xc(d,b);if(e)throw new R(e);if(!d.c.symlink)throw new R(P.I);d.c.symlink(d,b,a)}function pc(a){a=oc(a).node;if(!a)throw new R(P.u);if(!a.c.readlink)throw new R(P.i);return Ub(qc(a.parent),a.c.readlink(a))}\nfunction Fc(a,b,d,e){if(\"\"===a)throw new R(P.u);if(\"string\"===typeof b){var f=vc[b];if(\"undefined\"===typeof f)throw Error(\"Unknown file open mode: \"+b);b=f}d=b&64?(\"undefined\"===typeof d?438:d)&4095|32768:0;if(\"object\"===typeof a)var g=a;else{a=Rb(a);try{g=oc(a,{aa:!(b&131072)}).node}catch(k){}}f=!1;if(b&64)if(g){if(b&128)throw new R(P.ha);}else g=Cc(a,d,0),f=!0;if(!g)throw new R(P.u);8192===(g.mode&61440)&&(b&=-513);if(b&65536&&16384!==(g.mode&61440))throw new R(P.Z);if(!f&&(d=g?40960===(g.mode&\n61440)?P.X:16384===(g.mode&61440)&&(\"r\"!==wc(b)||b&512)?P.N:tc(g,wc(b)):P.u))throw new R(d);if(b&512){d=g;var h;\"string\"===typeof d?h=oc(d,{aa:!0}).node:h=d;if(!h.c.s)throw new R(P.I);if(16384===(h.mode&61440))throw new R(P.N);if(32768!==(h.mode&61440))throw new R(P.i);if(d=tc(h,\"w\"))throw new R(d);h.c.s(h,{size:0,timestamp:Date.now()})}b&=-641;e=zc({node:g,path:qc(g),flags:b,seekable:!0,position:0,f:g.f,Sa:[],error:!1},e);e.f.open&&e.f.open(e);!c.logReadFiles||b&1||(Gc||(Gc={}),a in Gc||(Gc[a]=1,\nconsole.log(\"FS.trackingDelegate error on read file: \"+a)));try{nc.onOpenFile&&(g=0,1!==(b&2097155)&&(g|=1),0!==(b&2097155)&&(g|=2),nc.onOpenFile(a,g))}catch(k){console.log(\"FS.trackingDelegate['onOpenFile']('\"+a+\"', flags) threw an exception: \"+k.message)}return e}function Hc(a){if(null===a.fd)throw new R(P.B);a.ba&&(a.ba=null);try{a.f.close&&a.f.close(a)}catch(b){throw b;}finally{T[a.fd]=null}a.fd=null}\nfunction Ic(a,b,d){if(null===a.fd)throw new R(P.B);if(!a.seekable||!a.f.F)throw new R(P.O);a.position=a.f.F(a,b,d);a.Sa=[]}function Jc(){R||(R=function(a,b){this.node=b;this.Na=function(a){this.v=a;for(var b in P)if(P[b]===a){this.code=b;break}};this.Na(a);this.message=Pb[a];this.stack&&Object.defineProperty(this,\"stack\",{value:Error().stack,writable:!0})},R.prototype=Error(),R.prototype.constructor=R,[P.u].forEach(function(a){fc[a]=new R(a);fc[a].stack=\"<generic error, no stack>\"}))}var Kc;\nfunction Lc(a,b){var d=0;a&&(d|=365);b&&(d|=146);return d}\nfunction Mc(a,b,d){a=Rb(\"/dev/\"+a);var e=Lc(!!b,!!d);Nc||(Nc=64);var f=Nc++<<8|0;Xb(f,{open:function(a){a.seekable=!1},close:function(){d&&d.buffer&&d.buffer.length&&d(10)},read:function(a,d,e,f){for(var g=0,h=0;h<f;h++){try{var k=b()}catch(A){throw new R(P.M);}if(void 0===k&&0===g)throw new R(P.fa);if(null===k||void 0===k)break;g++;d[e+h]=k}g&&(a.node.timestamp=Date.now());return g},write:function(a,b,e,f){for(var g=0;g<f;g++)try{d(b[e+g])}catch(r){throw new R(P.M);}f&&(a.node.timestamp=Date.now());\nreturn g}});Dc(a,e,f)}var Nc,FS={},uc,Ac,Gc,Oc={},V=0;function X(){V+=4;return v[V-4>>2]}function Pc(){var a=T[X()];if(!a)throw new R(P.B);return a}\nfunction Qc(a,b){Rc=a;Sc=b;if(!Tc)return 1;if(0==a)Uc=function(){var a=Math.max(0,Vc+b-O())|0;setTimeout(Wc,a)},Xc=\"timeout\";else if(1==a)Uc=function(){Yc(Wc)},Xc=\"rAF\";else if(2==a){if(\"undefined\"===typeof setImmediate){var d=[];addEventListener(\"message\",function(a){if(\"setimmediate\"===a.data||\"setimmediate\"===a.data.target)a.stopPropagation(),d.shift()()},!0);setImmediate=function(a){d.push(a);void 0===c.setImmediates&&(c.setImmediates=[]);c.setImmediates.push(a);postMessage({target:\"setimmediate\"})}}Uc=\nfunction(){setImmediate(Wc)};Xc=\"immediate\"}return 0}\nfunction Zc(a,b,d,e,f){c.noExitRuntime=!0;assert(!Tc,\"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.\");Tc=a;$c=e;var g=\"undefined\"!==typeof e?function(){c.dynCall_vi(a,e)}:function(){c.dynCall_v(a)};var h=ad;Wc=function(){if(!pa)if(0<bd.length){var a=Date.now(),b=bd.shift();b.g(b.P);if(cd){var d=cd,e=0==d%1?d-1:Math.floor(d);cd=b.Tc?e:(8*d+(e+.5))/9}console.log('main loop blocker \"'+\nb.name+'\" took '+(Date.now()-a)+\" ms\");c.setStatus&&(a=c.statusMessage||\"Please wait...\",b=cd,d=dd.Vc,b?b<d?c.setStatus(a+\" (\"+(d-b)+\"/\"+d+\")\"):c.setStatus(a):c.setStatus(\"\"));h<ad||setTimeout(Wc,0)}else if(!(h<ad))if(ed=ed+1|0,1==Rc&&1<Sc&&0!=ed%Sc)Uc();else{0==Rc&&(Vc=O());\"timeout\"===Xc&&c.K&&(p(\"Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!\"),\nXc=\"\");if(!(pa||c.preMainLoop&&!1===c.preMainLoop())){try{g()}catch(w){throw w&&\"object\"===typeof w&&w.stack&&p(\"exception thrown: \"+[w,w.stack]),w;}c.postMainLoop&&c.postMainLoop()}h<ad||(\"object\"===typeof SDL&&SDL.audio&&SDL.audio.La&&SDL.audio.La(),Uc())}};f||(b&&0<b?Qc(0,1E3/b):Qc(1,1),Uc());if(d)throw\"SimulateInfiniteLoop\";}var Uc=null,Xc=\"\",ad=0,Tc=null,$c=0,Rc=0,Sc=0,ed=0,bd=[],dd={},Vc,Wc,cd,fd=!1,gd=!1,hd=[];\nfunction id(){function a(){gd=document.pointerLockElement===c.canvas||document.mozPointerLockElement===c.canvas||document.webkitPointerLockElement===c.canvas||document.msPointerLockElement===c.canvas}c.preloadPlugins||(c.preloadPlugins=[]);if(!jd){jd=!0;try{kd=!0}catch(d){kd=!1,console.log(\"warning: no blob constructor, cannot create blobs with mimetypes\")}ld=\"undefined\"!=typeof MozBlobBuilder?MozBlobBuilder:\"undefined\"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:kd?null:console.log(\"warning: no BlobBuilder\");\nmd=\"undefined\"!=typeof window?window.URL?window.URL:window.webkitURL:void 0;c.ua||\"undefined\"!==typeof md||(console.log(\"warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available.\"),c.ua=!0);c.preloadPlugins.push({canHandle:function(a){return!c.ua&&/\\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,f,g){var d=null;if(kd)try{d=new Blob([a],{type:nd(b)}),d.size!==a.length&&(d=new Blob([(new Uint8Array(a)).buffer],{type:nd(b)}))}catch(q){ia(\"Blob constructor present but fails: \"+\nq+\"; falling back to blob builder\")}d||(d=new ld,d.append((new Uint8Array(a)).buffer),d=d.getBlob());var e=md.createObjectURL(d),m=new Image;m.onload=function(){assert(m.complete,\"Image \"+b+\" could not be decoded\");var d=document.createElement(\"canvas\");d.width=m.width;d.height=m.height;d.getContext(\"2d\").drawImage(m,0,0);c.preloadedImages[b]=d;md.revokeObjectURL(e);f&&f(a)};m.onerror=function(){console.log(\"Image \"+e+\" could not be decoded\");g&&g()};m.src=e}});c.preloadPlugins.push({canHandle:function(a){return!c.Zc&&\na.substr(-4)in{\".ogg\":1,\".wav\":1,\".mp3\":1}},handle:function(a,b,f,g){function d(d){m||(m=!0,c.preloadedAudios[b]=d,f&&f(a))}function e(){m||(m=!0,c.preloadedAudios[b]=new Audio,g&&g())}var m=!1;if(kd){try{var q=new Blob([a],{type:nd(b)})}catch(w){return e()}q=md.createObjectURL(q);var r=new Audio;r.addEventListener(\"canplaythrough\",function(){d(r)},!1);r.onerror=function(){if(!m){console.log(\"warning: browser could not fully decode audio \"+b+\", trying slower base64 approach\");for(var e=\"\",f=0,g=0,\nh=0;h<a.length;h++)for(f=f<<8|a[h],g+=8;6<=g;){var k=f>>g-6&63;g-=6;e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[k]}2==g?(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&3)<<4],e+=\"==\"):4==g&&(e+=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\"[(f&15)<<2],e+=\"=\");r.src=\"data:audio/x-\"+b.substr(-3)+\";base64,\"+e;d(r)}};r.src=q;od(function(){d(r)},1E4)}else return e()}});var b=c.canvas;b&&(b.requestPointerLock=b.requestPointerLock||\nb.mozRequestPointerLock||b.webkitRequestPointerLock||b.msRequestPointerLock||function(){},b.exitPointerLock=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||document.msExitPointerLock||function(){},b.exitPointerLock=b.exitPointerLock.bind(document),document.addEventListener(\"pointerlockchange\",a,!1),document.addEventListener(\"mozpointerlockchange\",a,!1),document.addEventListener(\"webkitpointerlockchange\",a,!1),document.addEventListener(\"mspointerlockchange\",a,\n!1),c.elementPointerLock&&b.addEventListener(\"click\",function(a){!gd&&c.canvas.requestPointerLock&&(c.canvas.requestPointerLock(),a.preventDefault())},!1))}}\nfunction pd(a,b,d,e){if(b&&c.K&&a==c.canvas)return c.K;if(b){var f={antialias:!1,alpha:!1};if(e)for(var g in e)f[g]=e[g];if(f=qd(a,f))var h=rd[f].GLctx}else h=a.getContext(\"2d\");if(!h)return null;d&&(b||assert(\"undefined\"===typeof GLctx,\"cannot set in module if GLctx is used, but we are a non-GL context that would replace it\"),c.K=h,b&&sd(f),c.bd=b,hd.forEach(function(a){a()}),id());return h}var td=!1,ud=void 0,vd=void 0;\nfunction wd(a,b,d){function e(){fd=!1;var a=f.parentNode;(document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a?(f.exitFullscreen=document.exitFullscreen||document.cancelFullScreen||document.mozCancelFullScreen||document.msExitFullscreen||document.webkitCancelFullScreen||function(){},f.exitFullscreen=f.exitFullscreen.bind(document),ud&&f.requestPointerLock(),fd=!0,vd?(\"undefined\"!=typeof SDL&&\n(v[SDL.screen>>2]=K[SDL.screen>>2]|8388608),xd(c.canvas),yd()):xd(f)):(a.parentNode.insertBefore(f,a),a.parentNode.removeChild(a),vd?(\"undefined\"!=typeof SDL&&(v[SDL.screen>>2]=K[SDL.screen>>2]&-8388609),xd(c.canvas),yd()):xd(f));if(c.onFullScreen)c.onFullScreen(fd);if(c.onFullscreen)c.onFullscreen(fd)}ud=a;vd=b;zd=d;\"undefined\"===typeof ud&&(ud=!0);\"undefined\"===typeof vd&&(vd=!1);\"undefined\"===typeof zd&&(zd=null);var f=c.canvas;td||(td=!0,document.addEventListener(\"fullscreenchange\",e,!1),document.addEventListener(\"mozfullscreenchange\",\ne,!1),document.addEventListener(\"webkitfullscreenchange\",e,!1),document.addEventListener(\"MSFullscreenChange\",e,!1));var g=document.createElement(\"div\");f.parentNode.insertBefore(g,f);g.appendChild(f);g.requestFullscreen=g.requestFullscreen||g.mozRequestFullScreen||g.msRequestFullscreen||(g.webkitRequestFullscreen?function(){g.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT)}:null)||(g.webkitRequestFullScreen?function(){g.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);d?g.requestFullscreen({cd:d}):\ng.requestFullscreen()}function Ad(a,b,d){p(\"Browser.requestFullScreen() is deprecated. Please call Browser.requestFullscreen instead.\");Ad=function(a,b,d){return wd(a,b,d)};return wd(a,b,d)}var Bd=0;function Cd(a){var b=Date.now();if(0===Bd)Bd=b+1E3/60;else for(;b+2>=Bd;)Bd+=1E3/60;setTimeout(a,Math.max(Bd-b,0))}\nfunction Yc(a){\"undefined\"===typeof window?Cd(a):(window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||Cd),window.requestAnimationFrame(a))}function Dd(a){Yc(function(){pa||a()})}function od(a,b){c.noExitRuntime=!0;setTimeout(function(){pa||a()},b)}\nfunction nd(a){return{jpg:\"image/jpeg\",jpeg:\"image/jpeg\",png:\"image/png\",bmp:\"image/bmp\",ogg:\"audio/ogg\",wav:\"audio/wav\",mp3:\"audio/mpeg\"}[a.substr(a.lastIndexOf(\".\")+1)]}var Ed=[];function yd(){var a=c.canvas;Ed.forEach(function(b){b(a.width,a.height)})}\nfunction xd(a,b,d){b&&d?(a.Ta=b,a.Fa=d):(b=a.Ta,d=a.Fa);var e=b,f=d;c.forcedAspectRatio&&0<c.forcedAspectRatio&&(e/f<c.forcedAspectRatio?e=Math.round(f*c.forcedAspectRatio):f=Math.round(e/c.forcedAspectRatio));if((document.fullscreenElement||document.mozFullScreenElement||document.msFullscreenElement||document.webkitFullscreenElement||document.webkitCurrentFullScreenElement)===a.parentNode&&\"undefined\"!=typeof screen){var g=Math.min(screen.width/e,screen.height/f);e=Math.round(e*g);f=Math.round(f*\ng)}vd?(a.width!=e&&(a.width=e),a.height!=f&&(a.height=f),\"undefined\"!=typeof a.style&&(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))):(a.width!=b&&(a.width=b),a.height!=d&&(a.height=d),\"undefined\"!=typeof a.style&&(e!=b||f!=d?(a.style.setProperty(\"width\",e+\"px\",\"important\"),a.style.setProperty(\"height\",f+\"px\",\"important\")):(a.style.removeProperty(\"width\"),a.style.removeProperty(\"height\"))))}var jd,kd,ld,md,zd,Fd=[],Y=void 0;function Z(a,b){K[a>>2]=b;K[a+4>>2]=b/4294967296|0}\nfunction Gd(a,b){try{var d=indexedDB.open(\"emscripten_filesystem\",1)}catch(e){b(e);return}d.onupgradeneeded=function(a){a=a.target.result;a.objectStoreNames.contains(\"FILES\")&&a.deleteObjectStore(\"FILES\");a.createObjectStore(\"FILES\")};d.onsuccess=function(b){a(b.target.result)};d.onerror=function(a){b(a)}}\nfunction Hd(a,b,d,e){var f=K[a+8>>2];if(f){var g=H(f),h=a+112,k=H(h);k||(k=\"GET\");var m=K[h+48>>2],q=K[h+52>>2],r=!!K[h+56>>2],w=K[h+64>>2],A=K[h+68>>2];f=K[h+72>>2];var I=K[h+76>>2],F=K[h+80>>2];h=K[h+84>>2];var N=!!(m&1),W=!!(m&2);m=!!(m&64);w=w?H(w):void 0;A=A?H(A):void 0;var oa=I?H(I):void 0,t=new XMLHttpRequest;t.withCredentials=r;t.open(k,g,!m,w,A);m||(t.timeout=q);t.l=g;t.responseType=W?\"moz-chunked-arraybuffer\":\"arraybuffer\";I&&t.overrideMimeType(oa);if(f)for(;;){k=K[f>>2];if(!k)break;g=K[f+\n4>>2];if(!g)break;f+=8;k=H(k);g=H(g);t.setRequestHeader(k,g)}Fd.push(t);K[a+0>>2]=Fd.length;f=F&&h?G.slice(F,F+h):null;t.onload=function(e){var f=t.response?t.response.byteLength:0,g=0,h=0;N&&!W&&(h=f,g=M(h),G.set(new Uint8Array(t.response),g));K[a+12>>2]=g;Z(a+16,h);Z(a+24,0);f&&Z(a+32,f);J[a+40>>1]=t.readyState;4===t.readyState&&0===t.status&&(t.status=0<f?200:404);J[a+42>>1]=t.status;t.statusText&&E(t.statusText,G,a+44,64);200==t.status?b&&b(a,t,e):d&&d(a,t,e)};t.onerror=function(b){var e=t.status;\n4==t.readyState&&0==e&&(e=404);K[a+12>>2]=0;Z(a+16,0);Z(a+24,0);Z(a+32,0);J[a+40>>1]=t.readyState;J[a+42>>1]=e;d&&d(a,t,b)};t.ontimeout=function(b){d&&d(a,t,b)};t.onprogress=function(b){var d=N&&W&&t.response?t.response.byteLength:0,f=0;N&&W&&(f=M(d),G.set(new Uint8Array(t.response),f));K[a+12>>2]=f;Z(a+16,d);Z(a+24,b.loaded-d);Z(a+32,b.total);J[a+40>>1]=t.readyState;3<=t.readyState&&0===t.status&&0<b.loaded&&(t.status=200);J[a+42>>1]=t.status;t.statusText&&E(t.statusText,G,a+44,64);e&&e(a,t,b)};\ntry{t.send(f)}catch($b){d&&d(a,t,$b)}}else d(a,0,\"no url specified!\")}function Id(a,b,d,e,f){if(a){var g=K[b+112+60>>2];g||(g=K[b+8>>2]);var h=H(g);try{var k=a.transaction([\"FILES\"],\"readwrite\").objectStore(\"FILES\").put(d,h);k.onsuccess=function(){J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);e(b,0,h)};k.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=413;E(\"Payload Too Large\",G,b+44,64);f(b,0,a)}}catch(m){f(b,0,m)}}else f(b,0,\"IndexedDB not available!\")}\nfunction Jd(a,b,d,e){if(a){var f=K[b+112+60>>2];f||(f=K[b+8>>2]);f=H(f);try{var g=a.transaction([\"FILES\"],\"readonly\").objectStore(\"FILES\").get(f);g.onsuccess=function(a){if(a.target.result){a=a.target.result;var f=a.byteLength||a.length,g=M(f);G.set(new Uint8Array(a),g);K[b+12>>2]=g;Z(b+16,f);Z(b+24,0);Z(b+32,f);J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);d(b,0,a)}else J[b+40>>1]=4,J[b+42>>1]=404,E(\"Not Found\",G,b+44,64),e(b,0,\"no data\")};g.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=404;E(\"Not Found\",\nG,b+44,64);e(b,0,a)}}catch(h){e(b,0,h)}}else e(b,0,\"IndexedDB not available!\")}\nfunction Kd(a,b,d,e){if(a){var f=K[b+112+60>>2];f||(f=K[b+8>>2]);f=H(f);try{var g=a.transaction([\"FILES\"],\"readwrite\").objectStore(\"FILES\").delete(f);g.onsuccess=function(a){a=a.target.result;K[b+12>>2]=0;Z(b+16,0);Z(b+24,0);Z(b+24,0);J[b+40>>1]=4;J[b+42>>1]=200;E(\"OK\",G,b+44,64);d(b,0,a)};g.onerror=function(a){J[b+40>>1]=4;J[b+42>>1]=404;E(\"Not Found\",G,b+44,64);e(b,0,a)}}catch(h){e(b,0,h)}}else e(b,0,\"IndexedDB not available!\")}var Ld=void 0,Md;Md=da(Math.max(12,1));var Nd;Ld=Md;assert(0==(Md&3));\nfor(Nd=Md+12;Ld<Nd;Ld+=4)v[Ld>>2]=0;for(Nd=Md+12;Ld<Nd;)D[Ld++>>0]=0;function Od(a){if(0===a)return 0;a=H(a);if(!L.hasOwnProperty(a))return 0;Od.l&&Lb(Od.l);a=L[a];var b=xa(a)+1,d=M(b);d&&E(a,D,d,b);Od.l=d;return Od.l}var Pd=1,Qd=0,Rd=[],rd=[],Sd=null,Td=[];function Ud(a){for(var b=Pd++,d=a.length;d<b;d++)a[d]=null;return b}\nfunction qd(a,b){function d(){}\"undefined\"===typeof b.majorVersion&&\"undefined\"===typeof b.minorVersion&&(b.majorVersion=1,b.minorVersion=0);try{a.addEventListener(\"webglcontextcreationerror\",d,!1);try{if(1==b.majorVersion&&0==b.minorVersion)var e=a.getContext(\"webgl\",b)||a.getContext(\"experimental-webgl\",b);else if(2==b.majorVersion&&0==b.minorVersion)e=a.getContext(\"webgl2\",b);else throw\"Unsupported WebGL context version \"+majorVersion+\".\"+minorVersion+\"!\";}finally{a.removeEventListener(\"webglcontextcreationerror\",\nd,!1)}if(!e)throw\":(\";}catch(f){return 0}return e?Vd(e,b):0}function Vd(a,b){var d=Ud(rd),e={handle:d,attributes:b,version:b.majorVersion,GLctx:a};a.canvas&&(a.canvas.Sc=e);rd[d]=e;(\"undefined\"===typeof b.enableExtensionsByDefault||b.enableExtensionsByDefault)&&Wd(e);return d}function sd(a){if(a){if(a=rd[a])GLctx=c.K=a.GLctx,Sd=a}else GLctx=c.K=Sd=null}\nfunction Wd(a){a||(a=Sd);if(!a.Ga){a.Ga=!0;var b=a.GLctx;if(2>a.version){var d=b.getExtension(\"ANGLE_instanced_arrays\");d&&(b.vertexAttribDivisor=function(a,b){d.vertexAttribDivisorANGLE(a,b)},b.drawArraysInstanced=function(a,b,e,f){d.drawArraysInstancedANGLE(a,b,e,f)},b.drawElementsInstanced=function(a,b,e,f,g){d.drawElementsInstancedANGLE(a,b,e,f,g)});var e=b.getExtension(\"OES_vertex_array_object\");e&&(b.createVertexArray=function(){return e.createVertexArrayOES()},b.deleteVertexArray=function(a){e.deleteVertexArrayOES(a)},\nb.bindVertexArray=function(a){e.bindVertexArrayOES(a)},b.isVertexArray=function(a){return e.isVertexArrayOES(a)});var f=b.getExtension(\"WEBGL_draw_buffers\");f&&(b.drawBuffers=function(a,b){f.drawBuffersWEBGL(a,b)})}b.Uc=b.getExtension(\"EXT_disjoint_timer_query\");var g=\"OES_texture_float OES_texture_half_float OES_standard_derivatives OES_vertex_array_object WEBGL_compressed_texture_s3tc WEBGL_depth_texture OES_element_index_uint EXT_texture_filter_anisotropic EXT_frag_depth WEBGL_draw_buffers ANGLE_instanced_arrays OES_texture_float_linear OES_texture_half_float_linear EXT_blend_minmax EXT_shader_texture_lod WEBGL_compressed_texture_pvrtc EXT_color_buffer_half_float WEBGL_color_buffer_float EXT_sRGB WEBGL_compressed_texture_etc1 EXT_disjoint_timer_query WEBGL_compressed_texture_etc WEBGL_compressed_texture_astc EXT_color_buffer_float WEBGL_compressed_texture_s3tc_srgb EXT_disjoint_timer_query_webgl2\".split(\" \");\n(a=b.getSupportedExtensions())&&0<a.length&&b.getSupportedExtensions().forEach(function(a){-1!=g.indexOf(a)&&b.getExtension(a)})}}function Xd(a,b,d,e){a*=d;e*=Math.floor((a+e-1)/e);return 0>=b?0:(b-1)*e+a}\nfunction Yd(a,b,d,e,f){switch(b){case 6406:case 6409:case 6402:b=1;break;case 6410:b=2;break;case 6407:case 35904:b=3;break;case 6408:case 35906:b=4;break;default:return Qd||(Qd=1280),null}switch(a){case 5121:b*=1;break;case 5123:case 36193:b*=2;break;case 5125:case 5126:b*=4;break;case 34042:b=4;break;case 33635:case 32819:case 32820:b=2;break;default:return Qd||(Qd=1280),null}d=Xd(d,e,b,4);switch(a){case 5121:return G.subarray(f,f+d);case 5126:return Da.subarray(f>>2,f+d>>2);case 5125:case 34042:return K.subarray(f>>\n2,f+d>>2);case 5123:case 33635:case 32819:case 32820:case 36193:return J.subarray(f>>1,f+d>>1);default:return Qd||(Qd=1280),null}}function Zd(){Zd.l||(Zd.l=[]);Zd.l.push(B());return Zd.l.length-1}var $d={},ae=1;function be(a,b){be.l||(be.l={});a in be.l||(c.dynCall_v(b),be.l[a]=1)}function ce(a){return 0===a%4&&(0!==a%100||0===a%400)}function de(a,b){for(var d=0,e=0;e<=b;d+=a[e++]);return d}var ee=[31,29,31,30,31,30,31,31,30,31,30,31],fe=[31,28,31,30,31,30,31,31,30,31,30,31];\nfunction ge(a,b){for(a=new Date(a.getTime());0<b;){var d=a.getMonth(),e=(ce(a.getFullYear())?ee:fe)[d];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>d?a.setMonth(d+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction he(a,b,d,e){function f(a,b,d){for(a=\"number\"===typeof a?a.toString():a||\"\";a.length<b;)a=d[0]+a;return a}function g(a,b){return f(a,b,\"0\")}function h(a,b){function d(a){return 0>a?-1:0<a?1:0}var e;0===(e=d(a.getFullYear()-b.getFullYear()))&&0===(e=d(a.getMonth()-b.getMonth()))&&(e=d(a.getDate()-b.getDate()));return e}function k(a){switch(a.getDay()){case 0:return new Date(a.getFullYear()-1,11,29);case 1:return a;case 2:return new Date(a.getFullYear(),0,3);case 3:return new Date(a.getFullYear(),\n0,2);case 4:return new Date(a.getFullYear(),0,1);case 5:return new Date(a.getFullYear()-1,11,31);case 6:return new Date(a.getFullYear()-1,11,30)}}function m(a){a=ge(new Date(a.j+1900,0,1),a.V);var b=k(new Date(a.getFullYear()+1,0,4));return 0>=h(k(new Date(a.getFullYear(),0,4)),a)?0>=h(b,a)?a.getFullYear()+1:a.getFullYear():a.getFullYear()-1}var q=v[e+40>>2];e={Qa:v[e>>2],Pa:v[e+4>>2],U:v[e+8>>2],H:v[e+12>>2],C:v[e+16>>2],j:v[e+20>>2],va:v[e+24>>2],V:v[e+28>>2],ad:v[e+32>>2],Oa:v[e+36>>2],Ra:q?H(q):\n\"\"};d=H(d);q={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\"};for(var r in q)d=d.replace(new RegExp(r,\"g\"),q[r]);var w=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),A=\"January February March April May June July August September October November December\".split(\" \");q={\"%a\":function(a){return w[a.va].substring(0,3)},\"%A\":function(a){return w[a.va]},\"%b\":function(a){return A[a.C].substring(0,\n3)},\"%B\":function(a){return A[a.C]},\"%C\":function(a){return g((a.j+1900)/100|0,2)},\"%d\":function(a){return g(a.H,2)},\"%e\":function(a){return f(a.H,2,\" \")},\"%g\":function(a){return m(a).toString().substring(2)},\"%G\":function(a){return m(a)},\"%H\":function(a){return g(a.U,2)},\"%I\":function(a){a=a.U;0==a?a=12:12<a&&(a-=12);return g(a,2)},\"%j\":function(a){return g(a.H+de(ce(a.j+1900)?ee:fe,a.C-1),3)},\"%m\":function(a){return g(a.C+1,2)},\"%M\":function(a){return g(a.Pa,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(a){return 0<=\na.U&&12>a.U?\"AM\":\"PM\"},\"%S\":function(a){return g(a.Qa,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(a){return(new Date(a.j+1900,a.C+1,a.H,0,0,0,0)).getDay()||7},\"%U\":function(a){var b=new Date(a.j+1900,0,1),d=0===b.getDay()?b:ge(b,7-b.getDay());a=new Date(a.j+1900,a.C,a.H);return 0>h(d,a)?g(Math.ceil((31-d.getDate()+(de(ce(a.getFullYear())?ee:fe,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(d,b)?\"01\":\"00\"},\"%V\":function(a){var b=k(new Date(a.j+1900,0,4)),d=k(new Date(a.j+1901,0,4)),e=ge(new Date(a.j+\n1900,0,1),a.V);return 0>h(e,b)?\"53\":0>=h(d,e)?\"01\":g(Math.ceil((b.getFullYear()<a.j+1900?a.V+32-b.getDate():a.V+1-b.getDate())/7),2)},\"%w\":function(a){return(new Date(a.j+1900,a.C+1,a.H,0,0,0,0)).getDay()},\"%W\":function(a){var b=new Date(a.j,0,1),d=1===b.getDay()?b:ge(b,0===b.getDay()?1:7-b.getDay()+1);a=new Date(a.j+1900,a.C,a.H);return 0>h(d,a)?g(Math.ceil((31-d.getDate()+(de(ce(a.getFullYear())?ee:fe,a.getMonth()-1)-31)+a.getDate())/7),2):0===h(d,b)?\"01\":\"00\"},\"%y\":function(a){return(a.j+1900).toString().substring(2)},\n\"%Y\":function(a){return a.j+1900},\"%z\":function(a){a=a.Oa;var b=0<=a;a=Math.abs(a)/60;return(b?\"+\":\"-\")+String(\"0000\"+(a/60*100+a%60)).slice(-4)},\"%Z\":function(a){return a.Ra},\"%%\":function(){return\"%\"}};for(r in q)0<=d.indexOf(r)&&(d=d.replace(new RegExp(r,\"g\"),q[r](e)));r=Zb(d,!1);if(r.length>b)return 0;D.set(r,a);return r.length-1}\n\"undefined\"!==typeof dateNow?O=dateNow:\"object\"===typeof self&&self.performance&&\"function\"===typeof self.performance.now?O=function(){return self.performance.now()}:\"object\"===typeof performance&&\"function\"===typeof performance.now?O=function(){return performance.now()}:O=Date.now;Jc();lc=Array(4096);Bc(S,\"/\");U(\"/tmp\");U(\"/home\");U(\"/home/web_user\");\n(function(){U(\"/dev\");Xb(259,{read:function(){return 0},write:function(a,b,f,g){return g}});Dc(\"/dev/null\",259);Wb(1280,ac);Wb(1536,bc);Dc(\"/dev/tty\",1280);Dc(\"/dev/tty1\",1536);if(\"undefined\"!==typeof crypto){var a=new Uint8Array(1);var b=function(){crypto.getRandomValues(a);return a[0]}}else b=function(){z(\"random_device\")};Mc(\"random\",b);Mc(\"urandom\",b);U(\"/dev/shm\");U(\"/dev/shm/tmp\")})();U(\"/proc\");U(\"/proc/self\");U(\"/proc/self/fd\");\nBc({A:function(){var a=dc(\"/proc/self\",\"fd\",16895,73);a.c={lookup:function(a,d){var b=T[+d];if(!b)throw new R(P.B);a={parent:null,A:{ta:\"fake\"},c:{readlink:function(){return b.path}}};return a.parent=a}};return a}},\"/proc/self/fd\");\nRa.unshift(function(){if(!c.noFSInit&&!Kc){assert(!Kc,\"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)\");Kc=!0;Jc();c.stdin=c.stdin;c.stdout=c.stdout;c.stderr=c.stderr;c.stdin?Mc(\"stdin\",c.stdin):Ec(\"/dev/tty\",\"/dev/stdin\");c.stdout?Mc(\"stdout\",null,c.stdout):Ec(\"/dev/tty\",\"/dev/stdout\");c.stderr?Mc(\"stderr\",null,c.stderr):Ec(\"/dev/tty1\",\"/dev/stderr\");var a=Fc(\"/dev/stdin\",\n\"r\");assert(0===a.fd,\"invalid handle for stdin (\"+a.fd+\")\");a=Fc(\"/dev/stdout\",\"w\");assert(1===a.fd,\"invalid handle for stdout (\"+a.fd+\")\");a=Fc(\"/dev/stderr\",\"w\");assert(2===a.fd,\"invalid handle for stderr (\"+a.fd+\")\")}});Sa.push(function(){mc=!1});Ta.push(function(){Kc=!1;var a=c._fflush;a&&a(0);for(a=0;a<T.length;a++){var b=T[a];b&&Hc(b)}});Ra.unshift(function(){});Ta.push(function(){});\nc.requestFullScreen=function(a,b,d){p(\"Module.requestFullScreen is deprecated. Please call Module.requestFullscreen instead.\");c.requestFullScreen=c.requestFullscreen;Ad(a,b,d)};c.requestFullscreen=function(a,b,d){wd(a,b,d)};c.requestAnimationFrame=function(a){Yc(a)};c.setCanvasSize=function(a,b,d){xd(c.canvas,a,b);d||yd()};c.pauseMainLoop=function(){Uc=null;ad++};c.resumeMainLoop=function(){ad++;var a=Rc,b=Sc,d=Tc;Tc=null;Zc(d,0,!1,$c,!0);Qc(a,b);Uc()};\nc.getUserMedia=function(){window.getUserMedia||(window.getUserMedia=navigator.getUserMedia||navigator.mozGetUserMedia);window.getUserMedia(void 0)};c.createContext=function(a,b,d,e){return pd(a,b,d,e)};(function(){var a=\"undefined\"===typeof ENVIRONMENT_IS_FETCH_WORKER;Gd(function(b){Y=b;a&&eb()},function(){Y=!1;a&&eb()});\"undefined\"!==typeof ENVIRONMENT_IS_FETCH_WORKER&&ENVIRONMENT_IS_FETCH_WORKER||db()})();for(var GLctx,le=0;256>le;le++);for(le=0;32>le;le++)Td.push(Array(le));x=da(4);Ia=Ja=ha(u);\nKa=Ia+Oa;La=ha(Ka);v[x>>2]=La;Ha=!0;function Zb(a,b){var d=Array(xa(a)+1);a=E(a,d,0,d.length);b&&(d.length=a);return d}c.wasmTableSize=2468;c.wasmMaxTableSize=2468;c.Aa={};\nc.Ba={abort:z,assert:assert,enlargeMemory:fa,getTotalMemory:function(){return y},abortOnCannotGrowMemory:function(){z(\"Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value \"+y+\", (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 \")},invoke_i:function(a){var b=B();try{return c.dynCall_i(a)}catch(d){C(b);\nif(\"number\"!==typeof d&&\"longjmp\"!==d)throw d;c.setThrew(1,0)}},invoke_ii:function(a,b){var d=B();try{return c.dynCall_ii(a,b)}catch(e){C(d);if(\"number\"!==typeof e&&\"longjmp\"!==e)throw e;c.setThrew(1,0)}},invoke_iii:function(a,b,d){var e=B();try{return c.dynCall_iii(a,b,d)}catch(f){C(e);if(\"number\"!==typeof f&&\"longjmp\"!==f)throw f;c.setThrew(1,0)}},invoke_iiii:function(a,b,d,e){var f=B();try{return c.dynCall_iiii(a,b,d,e)}catch(g){C(f);if(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},\ninvoke_iiiii:function(a,b,d,e,f){var g=B();try{return c.dynCall_iiiii(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_iiiiid:function(a,b,d,e,f,g){var h=B();try{return c.dynCall_iiiiid(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_iiiiii:function(a,b,d,e,f,g){var h=B();try{return c.dynCall_iiiiii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_iiiiiid:function(a,\nb,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiiid(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiiiiii:function(a,b,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiiii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiiiiiii:function(a,b,d,e,f,g,h,k){var m=B();try{return c.dynCall_iiiiiiii(a,b,d,e,f,g,h,k)}catch(q){C(m);if(\"number\"!==typeof q&&\"longjmp\"!==q)throw q;c.setThrew(1,0)}},invoke_iiiiiiiii:function(a,\nb,d,e,f,g,h,k,m){var q=B();try{return c.dynCall_iiiiiiiii(a,b,d,e,f,g,h,k,m)}catch(r){C(q);if(\"number\"!==typeof r&&\"longjmp\"!==r)throw r;c.setThrew(1,0)}},invoke_iiiiij:function(a,b,d,e,f,g,h){var k=B();try{return c.dynCall_iiiiij(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_iiji:function(a,b,d,e,f){var g=B();try{return c.dynCall_iiji(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_v:function(a){var b=\nB();try{c.dynCall_v(a)}catch(d){C(b);if(\"number\"!==typeof d&&\"longjmp\"!==d)throw d;c.setThrew(1,0)}},invoke_vi:function(a,b){var d=B();try{c.dynCall_vi(a,b)}catch(e){C(d);if(\"number\"!==typeof e&&\"longjmp\"!==e)throw e;c.setThrew(1,0)}},invoke_vii:function(a,b,d){var e=B();try{c.dynCall_vii(a,b,d)}catch(f){C(e);if(\"number\"!==typeof f&&\"longjmp\"!==f)throw f;c.setThrew(1,0)}},invoke_viiffii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viiffii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==\nm)throw m;c.setThrew(1,0)}},invoke_viii:function(a,b,d,e){var f=B();try{c.dynCall_viii(a,b,d,e)}catch(g){C(f);if(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},invoke_viiifffii:function(a,b,d,e,f,g,h,k,m){var q=B();try{c.dynCall_viiifffii(a,b,d,e,f,g,h,k,m)}catch(r){C(q);if(\"number\"!==typeof r&&\"longjmp\"!==r)throw r;c.setThrew(1,0)}},invoke_viiiffii:function(a,b,d,e,f,g,h,k){var m=B();try{c.dynCall_viiiffii(a,b,d,e,f,g,h,k)}catch(q){C(m);if(\"number\"!==typeof q&&\"longjmp\"!==q)throw q;\nc.setThrew(1,0)}},invoke_viiii:function(a,b,d,e,f){var g=B();try{c.dynCall_viiii(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_viiiii:function(a,b,d,e,f,g){var h=B();try{c.dynCall_viiiii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},invoke_viiiiiffffffffffffffff:function(a,b,d,e,f,g,h,k,m,q,r,w,A,I,F,N,W,oa,t,$b,ie,je){var ke=B();try{c.dynCall_viiiiiffffffffffffffff(a,b,d,e,f,g,h,k,m,q,r,w,A,I,F,N,W,oa,\nt,$b,ie,je)}catch(ec){C(ke);if(\"number\"!==typeof ec&&\"longjmp\"!==ec)throw ec;c.setThrew(1,0)}},invoke_viiiiii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viiiiii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_viijii:function(a,b,d,e,f,g,h){var k=B();try{c.dynCall_viijii(a,b,d,e,f,g,h)}catch(m){C(k);if(\"number\"!==typeof m&&\"longjmp\"!==m)throw m;c.setThrew(1,0)}},invoke_vij:function(a,b,d,e){var f=B();try{c.dynCall_vij(a,b,d,e)}catch(g){C(f);\nif(\"number\"!==typeof g&&\"longjmp\"!==g)throw g;c.setThrew(1,0)}},invoke_viji:function(a,b,d,e,f){var g=B();try{c.dynCall_viji(a,b,d,e,f)}catch(h){C(g);if(\"number\"!==typeof h&&\"longjmp\"!==h)throw h;c.setThrew(1,0)}},invoke_vijii:function(a,b,d,e,f,g){var h=B();try{c.dynCall_vijii(a,b,d,e,f,g)}catch(k){C(h);if(\"number\"!==typeof k&&\"longjmp\"!==k)throw k;c.setThrew(1,0)}},___buildEnvironment:Db,___clock_gettime:function(){return Gb.apply(null,arguments)},___cxa_allocate_exception:function(a){return M(a)},\n___cxa_begin_catch:function(a){var b=Q[a];b&&!b.ma&&(b.ma=!0,me.$--);b&&(b.L=!1);Ib.push(a);(b=Jb(a))&&Q[b].J++;return a},___cxa_current_primary_exception:function(){var a=Ib[Ib.length-1]||0;if(a){var b=Jb(a);b&&Q[b].J++}return a},___cxa_decrement_exception_refcount:function(a){Kb(Jb(a))},___cxa_end_catch:function(){c.setThrew(0);var a=Ib.pop();a&&(Kb(Jb(a)),Hb=0)},___cxa_find_matching_catch:Nb,___cxa_free_exception:___cxa_free_exception,___cxa_increment_exception_refcount:function(a){(a=Jb(a))&&\nQ[a].J++},___cxa_pure_virtual:function(){pa=!0;throw\"Pure virtual function called!\";},___cxa_rethrow:Mb,___cxa_rethrow_primary_exception:function(a){a&&(Ib.push(a),Q[a].L=!0,Mb())},___cxa_throw:function(a,b,d){Q[a]={Ka:a,ka:a,type:b,oa:d,J:0,ma:!1,L:!1};Hb=a;\"uncaught_exception\"in me?me.$++:me.$=1;throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";},___cxa_uncaught_exception:function(){return!!me.$},\n___gxx_personality_v0:function(){},___lock:function(){},___map_file:function(){Fb(P.I);return-1},___resumeException:function(a){Hb||(Hb=a);throw a+\" - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.\";},___setErrNo:Fb,___syscall140:function(a,b){V=b;try{var d=Pc();X();var e=X(),f=X(),g=X();Ic(d,e,g);v[f>>2]=d.position;d.ba&&0===e&&0===g&&(d.ba=null);return 0}catch(h){return\"undefined\"!==typeof FS&&\nh instanceof R||z(h),-h.v}},___syscall145:function(a,b){V=b;try{var d=Pc(),e=X();a:{var f=X();for(b=a=0;b<f;b++){var g=v[e+(8*b+4)>>2],h=d,k=v[e+8*b>>2],m=g,q=void 0,r=D;if(0>m||0>q)throw new R(P.i);if(null===h.fd)throw new R(P.B);if(1===(h.flags&2097155))throw new R(P.B);if(16384===(h.node.mode&61440))throw new R(P.N);if(!h.f.read)throw new R(P.i);var w=\"undefined\"!==typeof q;if(!w)q=h.position;else if(!h.seekable)throw new R(P.O);var A=h.f.read(h,r,k,m,q);w||(h.position+=A);var I=A;if(0>I){var F=\n-1;break a}a+=I;if(I<g)break}F=a}return F}catch(N){return\"undefined\"!==typeof FS&&N instanceof R||z(N),-N.v}},___syscall146:function(a,b){V=b;try{var d=Pc(),e=X();a:{var f=X();for(b=a=0;b<f;b++){var g=d,h=v[e+8*b>>2],k=v[e+(8*b+4)>>2],m=D,q=void 0;if(0>k||0>q)throw new R(P.i);if(null===g.fd)throw new R(P.B);if(0===(g.flags&2097155))throw new R(P.B);if(16384===(g.node.mode&61440))throw new R(P.N);if(!g.f.write)throw new R(P.i);g.flags&1024&&Ic(g,0,2);var r=\"undefined\"!==typeof q;if(!r)q=g.position;\nelse if(!g.seekable)throw new R(P.O);var w=g.f.write(g,m,h,k,q,void 0);r||(g.position+=w);try{if(g.path&&nc.onWriteToFile)nc.onWriteToFile(g.path)}catch(F){console.log(\"FS.trackingDelegate['onWriteToFile']('\"+path+\"') threw an exception: \"+F.message)}var A=w;if(0>A){var I=-1;break a}a+=A}I=a}return I}catch(F){return\"undefined\"!==typeof FS&&F instanceof R||z(F),-F.v}},___syscall196:function(a,b){V=b;try{var d=H(X());a:{var e=X();try{var f=oc(d,{aa:!1}).node;if(!f)throw new R(P.u);if(!f.c.m)throw new R(P.I);\nvar g=f.c.m(f)}catch(k){if(k&&k.node&&Rb(d)!==Rb(qc(k.node))){var h=-P.Z;break a}throw k;}v[e>>2]=g.dev;v[e+4>>2]=0;v[e+8>>2]=g.ino;v[e+12>>2]=g.mode;v[e+16>>2]=g.nlink;v[e+20>>2]=g.uid;v[e+24>>2]=g.gid;v[e+28>>2]=g.rdev;v[e+32>>2]=0;v[e+36>>2]=g.size;v[e+40>>2]=4096;v[e+44>>2]=g.blocks;v[e+48>>2]=g.atime.getTime()/1E3|0;v[e+52>>2]=0;v[e+56>>2]=g.mtime.getTime()/1E3|0;v[e+60>>2]=0;v[e+64>>2]=g.ctime.getTime()/1E3|0;v[e+68>>2]=0;v[e+72>>2]=g.ino;h=0}return h}catch(k){return\"undefined\"!==typeof FS&&\nk instanceof R||z(k),-k.v}},___syscall221:function(a,b){V=b;try{var d=Pc();switch(X()){case 0:var e=X();return 0>e?-P.i:Fc(d.path,d.flags,0,e).fd;case 1:case 2:return 0;case 3:return d.flags;case 4:return e=X(),d.flags|=e,0;case 12:case 12:return e=X(),Ca[e+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-P.i;case 9:return Fb(P.i),-1;default:return-P.i}}catch(f){return\"undefined\"!==typeof FS&&f instanceof R||z(f),-f.v}},___syscall5:function(a,b){V=b;try{var d=H(X()),e=X(),\nf=X();return Fc(d,e,f).fd}catch(g){return\"undefined\"!==typeof FS&&g instanceof R||z(g),-g.v}},___syscall54:function(a,b){V=b;try{var d=Pc(),e=X();switch(e){case 21509:case 21505:return d.tty?0:-P.D;case 21510:case 21511:case 21512:case 21506:case 21507:case 21508:return d.tty?0:-P.D;case 21519:if(!d.tty)return-P.D;var f=X();return v[f>>2]=0;case 21520:return d.tty?-P.i:-P.D;case 21531:a=f=X();if(!d.f.Ha)throw new R(P.D);return d.f.Ha(d,e,a);case 21523:return d.tty?0:-P.D;case 21524:return d.tty?0:\n-P.D;default:z(\"bad ioctl syscall \"+e)}}catch(g){return\"undefined\"!==typeof FS&&g instanceof R||z(g),-g.v}},___syscall6:function(a,b){V=b;try{var d=Pc();Hc(d);return 0}catch(e){return\"undefined\"!==typeof FS&&e instanceof R||z(e),-e.v}},___syscall91:function(a,b){V=b;try{var d=X(),e=X(),f=Oc[d];if(!f)return 0;if(e===f.Xc){var g=T[f.fd],h=f.flags,k=new Uint8Array(G.subarray(d,d+e));g&&g.f.T&&g.f.T(g,k,0,e,h);Oc[d]=null;f.za&&Lb(f.Yc)}return 0}catch(m){return\"undefined\"!==typeof FS&&m instanceof R||\nz(m),-m.v}},___unlock:function(){},__addDays:ge,__arraySum:de,__emscripten_fetch_cache_data:Id,__emscripten_fetch_delete_cached_data:Kd,__emscripten_fetch_load_cached_data:Jd,__emscripten_fetch_xhr:Hd,__emscripten_get_fetch_work_queue:function(){return Md},__isLeapYear:ce,_abort:function(){c.abort()},_clock_gettime:Gb,_emidentity:function(){var a=(new URL(location.origin)).hostname;0===a.length&&(a=(new URL(location.href.replace(\"blob:\",\"\"))).hostname);if(/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/.test(a))0===\na.indexOf(\"10.\")&&(a=\"10.*\"),0===a.indexOf(\"192.168.\")&&(a=\"192.168.*\"),0===a.indexOf(\"127.\")&&(a=\"127.*\");else{var b=new RegExp(\"(\"+String.fromCharCode(92)+\".ngrok\"+String.fromCharCode(92)+\".io)$\",\"i\");b.test(a)&&(a=\"*.ngrok.io\");b=new RegExp(\"(\"+String.fromCharCode(92)+\".arweb\"+String.fromCharCode(92)+\".app)$\",\"i\");b.test(a)&&(a=\"*.arweb.app\")}b=xa(a)+1;var d=M(b);E(a,G,d,b+1);return d},_emlicerr:function(){self.postMessage({t:\"licerr\"})},_emscripten_asm_const_i:function(a){return gb[a]()},_emscripten_async_call:function(a,\nb,d){function e(){ma(a)(b)}c.noExitRuntime=!0;0<=d?od(e,d):Dd(e)},_emscripten_get_now:O,_emscripten_get_now_is_monotonic:Eb,_emscripten_is_main_browser_thread:function(){return!1},_emscripten_is_main_runtime_thread:function(){return 1},_emscripten_memcpy_big:function(a,b,d){G.set(G.subarray(b,b+d),a);return a},_emscripten_set_main_loop:Zc,_emscripten_set_main_loop_timing:Qc,_emscripten_start_fetch:function(a,b,d,e){function f(a){Hd(a,m,h,k)}function g(a){Hd(a,q,h,k)}function h(a){I&&\"function\"===\ntypeof na?c.dynCall_vi(I,a):d&&d(a)}function k(a){F&&\"function\"===typeof na?c.dynCall_vi(F,a):e&&e(a)}function m(a,d){Id(Y,a,d.response,function(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)},function(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)})}function q(a){A&&\"function\"===typeof na?c.dynCall_vi(A,a):b&&b(a)}\"undefined\"!==typeof c&&(c.noExitRuntime=!0);var r=a+112,w=H(r),A=K[r+36>>2],I=K[r+40>>2],F=K[r+44>>2],N=K[r+48>>2],W=!!(N&4),oa=!!(N&32);if(N&16&&\"EM_IDB_STORE\"!==w&&\"EM_IDB_DELETE\"!==\nw){if(oa)return 0;W?Hd(a,m,h,k):Hd(a,q,h,k)}else{if(!Y)return h(a),0;\"EM_IDB_STORE\"===w?(w=K[r+80>>2],r=G.slice(w,w+K[r+84>>2]),Id(Y,a,r,q,h)):\"EM_IDB_DELETE\"===w?Kd(Y,a,q,h):oa?Jd(Y,a,q,h):W?Jd(Y,a,q,f):Jd(Y,a,q,g)}return a},_getenv:Od,_gettimeofday:function(a){var b=Date.now();v[a>>2]=b/1E3|0;v[a+4>>2]=b%1E3*1E3|0;return 0},_glBindTexture:function(a,b){GLctx.bindTexture(a,b?Rd[b]:null)},_glGenTextures:function(a,b){for(var d=0;d<a;d++){var e=GLctx.createTexture();if(!e){for(Qd||(Qd=1282);d<a;)v[b+\n4*d++>>2]=0;break}var f=Ud(Rd);e.name=f;Rd[f]=e;v[b+4*d>>2]=f}},_glTexImage2D:function(a,b,d,e,f,g,h,k,m){var q=null;m&&(q=Yd(k,h,e,f,m));GLctx.texImage2D(a,b,d,e,f,g,h,k,q)},_glTexParameteri:function(a,b,d){GLctx.texParameteri(a,b,d)},_llvm_exp2_f32:function(a){return Math.pow(2,a)},_llvm_stackrestore:function(a){var b=Zd.l[a];Zd.l.splice(a,1);C(b)},_llvm_stacksave:Zd,_llvm_trap:function(){z(\"trap!\")},_pthread_cond_destroy:function(){return 0},_pthread_cond_init:function(){return 0},_pthread_cond_signal:function(){return 0},\n_pthread_cond_wait:function(){return 0},_pthread_create:function(){return 11},_pthread_getspecific:function(a){return $d[a]||0},_pthread_join:function(){},_pthread_key_create:function(a){if(0==a)return P.i;v[a>>2]=ae;$d[ae]=0;ae++;return 0},_pthread_mutex_destroy:function(){},_pthread_mutex_init:function(){},_pthread_once:be,_pthread_setspecific:function(a,b){if(!(a in $d))return P.i;$d[a]=b;return 0},_strftime:he,_strftime_l:function(a,b,d,e){return he(a,b,d,e)},_sysconf:function(a){switch(a){case 30:return 16384;\ncase 85:return 131068;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;\ncase 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;\ncase 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return\"object\"===typeof navigator?navigator.hardwareConcurrency||1:1}Fb(P.i);return-1},emscriptenWebGLComputeImageSize:Xd,emscriptenWebGLGetTexPixelData:Yd,DYNAMICTOP_PTR:x,tempDoublePtr:Cb,STACKTOP:Ja,STACK_MAX:Ka};var ne=c.asm(c.Aa,c.Ba,buffer);c.asm=ne;\nvar hb=c.__GLOBAL__I_000101=function(){return c.asm.__GLOBAL__I_000101.apply(null,arguments)},tb=c.__GLOBAL__sub_I_AZHighLevelEncoder_cpp=function(){return c.asm.__GLOBAL__sub_I_AZHighLevelEncoder_cpp.apply(null,arguments)},vb=c.__GLOBAL__sub_I_CameraSource_cpp=function(){return c.asm.__GLOBAL__sub_I_CameraSource_cpp.apply(null,arguments)},pb=c.__GLOBAL__sub_I_CharacterSetECI_cpp=function(){return c.asm.__GLOBAL__sub_I_CharacterSetECI_cpp.apply(null,arguments)},rb=c.__GLOBAL__sub_I_DMECEncoder_cpp=\nfunction(){return c.asm.__GLOBAL__sub_I_DMECEncoder_cpp.apply(null,arguments)},qb=c.__GLOBAL__sub_I_DMHighLevelEncoder_cpp=function(){return c.asm.__GLOBAL__sub_I_DMHighLevelEncoder_cpp.apply(null,arguments)},mb=c.__GLOBAL__sub_I_GridSampler_cpp=function(){return c.asm.__GLOBAL__sub_I_GridSampler_cpp.apply(null,arguments)},ob=c.__GLOBAL__sub_I_ODCode128Patterns_cpp=function(){return c.asm.__GLOBAL__sub_I_ODCode128Patterns_cpp.apply(null,arguments)},nb=c.__GLOBAL__sub_I_ODRSSExpandedReader_cpp=function(){return c.asm.__GLOBAL__sub_I_ODRSSExpandedReader_cpp.apply(null,\narguments)},ib=c.__GLOBAL__sub_I_PDFDetector_cpp=function(){return c.asm.__GLOBAL__sub_I_PDFDetector_cpp.apply(null,arguments)},ub=c.__GLOBAL__sub_I_StandardStatsManager_cpp=function(){return c.asm.__GLOBAL__sub_I_StandardStatsManager_cpp.apply(null,arguments)},xb=c.__GLOBAL__sub_I_barcode_finder_cpp=function(){return c.asm.__GLOBAL__sub_I_barcode_finder_cpp.apply(null,arguments)},yb=c.__GLOBAL__sub_I_face_landmark_cpp=function(){return c.asm.__GLOBAL__sub_I_face_landmark_cpp.apply(null,arguments)},\nwb=c.__GLOBAL__sub_I_face_mesh_cpp=function(){return c.asm.__GLOBAL__sub_I_face_mesh_cpp.apply(null,arguments)},zb=c.__GLOBAL__sub_I_face_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_face_tracker_cpp.apply(null,arguments)},Ab=c.__GLOBAL__sub_I_image_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_image_tracker_cpp.apply(null,arguments)},Bb=c.__GLOBAL__sub_I_instant_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_instant_tracker_cpp.apply(null,arguments)},jb=c.__GLOBAL__sub_I_iostream_cpp=\nfunction(){return c.asm.__GLOBAL__sub_I_iostream_cpp.apply(null,arguments)},sb=c.__GLOBAL__sub_I_pipeline_cpp=function(){return c.asm.__GLOBAL__sub_I_pipeline_cpp.apply(null,arguments)},lb=c.__GLOBAL__sub_I_zappar_face_tracker_cpp=function(){return c.asm.__GLOBAL__sub_I_zappar_face_tracker_cpp.apply(null,arguments)};c.__Z20zappar_face_mesh_uvsP19zappar_face_mesh_ti=function(){return c.asm.__Z20zappar_face_mesh_uvsP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z23zappar_face_mesh_updateP19zappar_face_mesh_tiPKfS2_i=function(){return c.asm.__Z23zappar_face_mesh_updateP19zappar_face_mesh_tiPKfS2_i.apply(null,arguments)};c.__Z24zappar_face_mesh_indicesP19zappar_face_mesh_ti=function(){return c.asm.__Z24zappar_face_mesh_indicesP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z24zappar_face_mesh_normalsP19zappar_face_mesh_ti=function(){return c.asm.__Z24zappar_face_mesh_normalsP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z25zappar_face_mesh_uvs_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z25zappar_face_mesh_uvs_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z25zappar_face_mesh_verticesP19zappar_face_mesh_ti=function(){return c.asm.__Z25zappar_face_mesh_verticesP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z27zappar_face_landmark_updateP23zappar_face_landmark_tiPKfS2_i=function(){return c.asm.__Z27zappar_face_landmark_updateP23zappar_face_landmark_tiPKfS2_i.apply(null,arguments)};\nc.__Z29zappar_face_mesh_indices_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z29zappar_face_mesh_indices_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z29zappar_face_mesh_normals_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z29zappar_face_mesh_normals_sizeP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z30zappar_face_mesh_vertices_sizeP19zappar_face_mesh_ti=function(){return c.asm.__Z30zappar_face_mesh_vertices_sizeP19zappar_face_mesh_ti.apply(null,arguments)};\nc.__Z31zappar_face_mesh_loaded_versionP19zappar_face_mesh_ti=function(){return c.asm.__Z31zappar_face_mesh_loaded_versionP19zappar_face_mesh_ti.apply(null,arguments)};c.__Z33zappar_face_mesh_load_from_memoryP19zappar_face_mesh_tiPKciiiii=function(){return c.asm.__Z33zappar_face_mesh_load_from_memoryP19zappar_face_mesh_tiPKciiiii.apply(null,arguments)};\nc.__Z40zappar_image_tracker_target_preview_rgbaP23zappar_image_tracker_tii=function(){return c.asm.__Z40zappar_image_tracker_target_preview_rgbaP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z42zappar_image_tracker_target_load_from_fileP23zappar_image_tracker_tiPKc=function(){return c.asm.__Z42zappar_image_tracker_target_load_from_fileP23zappar_image_tracker_tiPKc.apply(null,arguments)};\nc.__Z45zappar_image_tracker_target_preview_rgba_sizeP23zappar_image_tracker_tii=function(){return c.asm.__Z45zappar_image_tracker_target_preview_rgba_sizeP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z46zappar_image_tracker_target_preview_compressedP23zappar_image_tracker_tii=function(){return c.asm.__Z46zappar_image_tracker_target_preview_compressedP23zappar_image_tracker_tii.apply(null,arguments)};\nc.__Z46zappar_image_tracker_target_preview_rgba_widthP23zappar_image_tracker_tii=function(){return c.asm.__Z46zappar_image_tracker_target_preview_rgba_widthP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z47zappar_image_tracker_target_preview_rgba_heightP23zappar_image_tracker_tii=function(){return c.asm.__Z47zappar_image_tracker_target_preview_rgba_heightP23zappar_image_tracker_tii.apply(null,arguments)};\nc.__Z51zappar_image_tracker_target_preview_compressed_sizeP23zappar_image_tracker_tii=function(){return c.asm.__Z51zappar_image_tracker_target_preview_compressed_sizeP23zappar_image_tracker_tii.apply(null,arguments)};c.__Z55zappar_image_tracker_target_preview_compressed_mimetypeP23zappar_image_tracker_tii=function(){return c.asm.__Z55zappar_image_tracker_target_preview_compressed_mimetypeP23zappar_image_tracker_tii.apply(null,arguments)};\nvar me=c.__ZSt18uncaught_exceptionv=function(){return c.asm.__ZSt18uncaught_exceptionv.apply(null,arguments)};c.___cxa_can_catch=function(){return c.asm.___cxa_can_catch.apply(null,arguments)};c.___cxa_is_pointer_type=function(){return c.asm.___cxa_is_pointer_type.apply(null,arguments)};c.___em_js__emidentity=function(){return c.asm.___em_js__emidentity.apply(null,arguments)};c.___em_js__emlicerr=function(){return c.asm.___em_js__emlicerr.apply(null,arguments)};\nvar kb=c.___emscripten_environ_constructor=function(){return c.asm.___emscripten_environ_constructor.apply(null,arguments)};c.___errno_location=function(){return c.asm.___errno_location.apply(null,arguments)};c.__get_environ=function(){return c.asm.__get_environ.apply(null,arguments)};var Ma=c._emscripten_replace_memory=function(){return c.asm._emscripten_replace_memory.apply(null,arguments)},Lb=c._free=function(){return c.asm._free.apply(null,arguments)};\nc._llvm_bswap_i32=function(){return c.asm._llvm_bswap_i32.apply(null,arguments)};c._llvm_round_f32=function(){return c.asm._llvm_round_f32.apply(null,arguments)};c._llvm_round_f64=function(){return c.asm._llvm_round_f64.apply(null,arguments)};var M=c._malloc=function(){return c.asm._malloc.apply(null,arguments)};c._memcpy=function(){return c.asm._memcpy.apply(null,arguments)};c._memmove=function(){return c.asm._memmove.apply(null,arguments)};c._memset=function(){return c.asm._memset.apply(null,arguments)};\nc._pthread_cond_broadcast=function(){return c.asm._pthread_cond_broadcast.apply(null,arguments)};c._pthread_mutex_lock=function(){return c.asm._pthread_mutex_lock.apply(null,arguments)};c._pthread_mutex_unlock=function(){return c.asm._pthread_mutex_unlock.apply(null,arguments)};c._round=function(){return c.asm._round.apply(null,arguments)};c._sbrk=function(){return c.asm._sbrk.apply(null,arguments)};\nc._zappar_analytics_project_id_set=function(){return c.asm._zappar_analytics_project_id_set.apply(null,arguments)};c._zappar_barcode_finder_create=function(){return c.asm._zappar_barcode_finder_create.apply(null,arguments)};c._zappar_barcode_finder_destroy=function(){return c.asm._zappar_barcode_finder_destroy.apply(null,arguments)};c._zappar_barcode_finder_enabled=function(){return c.asm._zappar_barcode_finder_enabled.apply(null,arguments)};\nc._zappar_barcode_finder_enabled_set=function(){return c.asm._zappar_barcode_finder_enabled_set.apply(null,arguments)};c._zappar_barcode_finder_formats=function(){return c.asm._zappar_barcode_finder_formats.apply(null,arguments)};c._zappar_barcode_finder_formats_set=function(){return c.asm._zappar_barcode_finder_formats_set.apply(null,arguments)};c._zappar_barcode_finder_found_format=function(){return c.asm._zappar_barcode_finder_found_format.apply(null,arguments)};\nc._zappar_barcode_finder_found_number=function(){return c.asm._zappar_barcode_finder_found_number.apply(null,arguments)};c._zappar_barcode_finder_found_text=function(){return c.asm._zappar_barcode_finder_found_text.apply(null,arguments)};c._zappar_camera_default_device_id=function(){return c.asm._zappar_camera_default_device_id.apply(null,arguments)};c._zappar_camera_source_create=function(){return c.asm._zappar_camera_source_create.apply(null,arguments)};\nc._zappar_camera_source_destroy=function(){return c.asm._zappar_camera_source_destroy.apply(null,arguments)};c._zappar_camera_source_pause=function(){return c.asm._zappar_camera_source_pause.apply(null,arguments)};c._zappar_camera_source_start=function(){return c.asm._zappar_camera_source_start.apply(null,arguments)};c._zappar_face_landmark_anchor_pose=function(){return c.asm._zappar_face_landmark_anchor_pose.apply(null,arguments)};\nc._zappar_face_landmark_create=function(){return c.asm._zappar_face_landmark_create.apply(null,arguments)};c._zappar_face_landmark_destroy=function(){return c.asm._zappar_face_landmark_destroy.apply(null,arguments)};c._zappar_face_mesh_create=function(){return c.asm._zappar_face_mesh_create.apply(null,arguments)};c._zappar_face_mesh_destroy=function(){return c.asm._zappar_face_mesh_destroy.apply(null,arguments)};\nc._zappar_face_tracker_anchor_count=function(){return c.asm._zappar_face_tracker_anchor_count.apply(null,arguments)};c._zappar_face_tracker_anchor_expression_coefficients=function(){return c.asm._zappar_face_tracker_anchor_expression_coefficients.apply(null,arguments)};c._zappar_face_tracker_anchor_id=function(){return c.asm._zappar_face_tracker_anchor_id.apply(null,arguments)};\nc._zappar_face_tracker_anchor_identity_coefficients=function(){return c.asm._zappar_face_tracker_anchor_identity_coefficients.apply(null,arguments)};c._zappar_face_tracker_anchor_pose_raw=function(){return c.asm._zappar_face_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_face_tracker_create=function(){return c.asm._zappar_face_tracker_create.apply(null,arguments)};c._zappar_face_tracker_destroy=function(){return c.asm._zappar_face_tracker_destroy.apply(null,arguments)};\nc._zappar_face_tracker_enabled=function(){return c.asm._zappar_face_tracker_enabled.apply(null,arguments)};c._zappar_face_tracker_enabled_set=function(){return c.asm._zappar_face_tracker_enabled_set.apply(null,arguments)};c._zappar_face_tracker_max_faces=function(){return c.asm._zappar_face_tracker_max_faces.apply(null,arguments)};c._zappar_face_tracker_max_faces_set=function(){return c.asm._zappar_face_tracker_max_faces_set.apply(null,arguments)};\nc._zappar_face_tracker_model_load_from_memory=function(){return c.asm._zappar_face_tracker_model_load_from_memory.apply(null,arguments)};c._zappar_face_tracker_model_loaded_version=function(){return c.asm._zappar_face_tracker_model_loaded_version.apply(null,arguments)};c._zappar_has_initialized=function(){return c.asm._zappar_has_initialized.apply(null,arguments)};c._zappar_image_tracker_anchor_count=function(){return c.asm._zappar_image_tracker_anchor_count.apply(null,arguments)};\nc._zappar_image_tracker_anchor_id=function(){return c.asm._zappar_image_tracker_anchor_id.apply(null,arguments)};c._zappar_image_tracker_anchor_pose_raw=function(){return c.asm._zappar_image_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_image_tracker_create=function(){return c.asm._zappar_image_tracker_create.apply(null,arguments)};c._zappar_image_tracker_destroy=function(){return c.asm._zappar_image_tracker_destroy.apply(null,arguments)};\nc._zappar_image_tracker_enabled=function(){return c.asm._zappar_image_tracker_enabled.apply(null,arguments)};c._zappar_image_tracker_enabled_set=function(){return c.asm._zappar_image_tracker_enabled_set.apply(null,arguments)};c._zappar_image_tracker_target_count=function(){return c.asm._zappar_image_tracker_target_count.apply(null,arguments)};c._zappar_image_tracker_target_load_from_memory=function(){return c.asm._zappar_image_tracker_target_load_from_memory.apply(null,arguments)};\nc._zappar_image_tracker_target_loaded_version=function(){return c.asm._zappar_image_tracker_target_loaded_version.apply(null,arguments)};c._zappar_instant_world_tracker_anchor_pose_raw=function(){return c.asm._zappar_instant_world_tracker_anchor_pose_raw.apply(null,arguments)};c._zappar_instant_world_tracker_anchor_pose_set_from_camera_offset=function(){return c.asm._zappar_instant_world_tracker_anchor_pose_set_from_camera_offset.apply(null,arguments)};\nc._zappar_instant_world_tracker_create=function(){return c.asm._zappar_instant_world_tracker_create.apply(null,arguments)};c._zappar_instant_world_tracker_destroy=function(){return c.asm._zappar_instant_world_tracker_destroy.apply(null,arguments)};c._zappar_instant_world_tracker_enabled=function(){return c.asm._zappar_instant_world_tracker_enabled.apply(null,arguments)};c._zappar_instant_world_tracker_enabled_set=function(){return c.asm._zappar_instant_world_tracker_enabled_set.apply(null,arguments)};\nc._zappar_invert=function(){return c.asm._zappar_invert.apply(null,arguments)};c._zappar_pipeline_camera_frame_camera_attitude=function(){return c.asm._zappar_pipeline_camera_frame_camera_attitude.apply(null,arguments)};c._zappar_pipeline_camera_frame_submit=function(){return c.asm._zappar_pipeline_camera_frame_submit.apply(null,arguments)};c._zappar_pipeline_camera_frame_texture_gl=function(){return c.asm._zappar_pipeline_camera_frame_texture_gl.apply(null,arguments)};\nc._zappar_pipeline_camera_frame_texture_matrix=function(){return c.asm._zappar_pipeline_camera_frame_texture_matrix.apply(null,arguments)};c._zappar_pipeline_camera_frame_upload_gl=function(){return c.asm._zappar_pipeline_camera_frame_upload_gl.apply(null,arguments)};c._zappar_pipeline_camera_frame_user_data=function(){return c.asm._zappar_pipeline_camera_frame_user_data.apply(null,arguments)};\nc._zappar_pipeline_camera_frame_user_facing=function(){return c.asm._zappar_pipeline_camera_frame_user_facing.apply(null,arguments)};c._zappar_pipeline_camera_model=function(){return c.asm._zappar_pipeline_camera_model.apply(null,arguments)};c._zappar_pipeline_camera_pose_default=function(){return c.asm._zappar_pipeline_camera_pose_default.apply(null,arguments)};c._zappar_pipeline_camera_pose_with_attitude=function(){return c.asm._zappar_pipeline_camera_pose_with_attitude.apply(null,arguments)};\nc._zappar_pipeline_camera_pose_with_origin=function(){return c.asm._zappar_pipeline_camera_pose_with_origin.apply(null,arguments)};c._zappar_pipeline_create=function(){return c.asm._zappar_pipeline_create.apply(null,arguments)};c._zappar_pipeline_destroy=function(){return c.asm._zappar_pipeline_destroy.apply(null,arguments)};c._zappar_pipeline_frame_number=function(){return c.asm._zappar_pipeline_frame_number.apply(null,arguments)};\nc._zappar_pipeline_frame_update=function(){return c.asm._zappar_pipeline_frame_update.apply(null,arguments)};c._zappar_pipeline_motion_accelerometer_submit=function(){return c.asm._zappar_pipeline_motion_accelerometer_submit.apply(null,arguments)};c._zappar_pipeline_motion_attitude_submit=function(){return c.asm._zappar_pipeline_motion_attitude_submit.apply(null,arguments)};\nc._zappar_pipeline_motion_rotation_rate_submit=function(){return c.asm._zappar_pipeline_motion_rotation_rate_submit.apply(null,arguments)};c._zappar_pipeline_process_gl=function(){return c.asm._zappar_pipeline_process_gl.apply(null,arguments)};c.establishStackSpace=function(){return c.asm.establishStackSpace.apply(null,arguments)};c.getTempRet0=function(){return c.asm.getTempRet0.apply(null,arguments)};c.runPostSets=function(){return c.asm.runPostSets.apply(null,arguments)};\nvar Ob=c.setTempRet0=function(){return c.asm.setTempRet0.apply(null,arguments)};c.setThrew=function(){return c.asm.setThrew.apply(null,arguments)};var ra=c.stackAlloc=function(){return c.asm.stackAlloc.apply(null,arguments)},C=c.stackRestore=function(){return c.asm.stackRestore.apply(null,arguments)},B=c.stackSave=function(){return c.asm.stackSave.apply(null,arguments)};c.dynCall_i=function(){return c.asm.dynCall_i.apply(null,arguments)};\nc.dynCall_ii=function(){return c.asm.dynCall_ii.apply(null,arguments)};c.dynCall_iii=function(){return c.asm.dynCall_iii.apply(null,arguments)};c.dynCall_iiii=function(){return c.asm.dynCall_iiii.apply(null,arguments)};c.dynCall_iiiii=function(){return c.asm.dynCall_iiiii.apply(null,arguments)};c.dynCall_iiiiid=function(){return c.asm.dynCall_iiiiid.apply(null,arguments)};c.dynCall_iiiiii=function(){return c.asm.dynCall_iiiiii.apply(null,arguments)};\nc.dynCall_iiiiiid=function(){return c.asm.dynCall_iiiiiid.apply(null,arguments)};c.dynCall_iiiiiii=function(){return c.asm.dynCall_iiiiiii.apply(null,arguments)};c.dynCall_iiiiiiii=function(){return c.asm.dynCall_iiiiiiii.apply(null,arguments)};c.dynCall_iiiiiiiii=function(){return c.asm.dynCall_iiiiiiiii.apply(null,arguments)};c.dynCall_iiiiij=function(){return c.asm.dynCall_iiiiij.apply(null,arguments)};c.dynCall_iiji=function(){return c.asm.dynCall_iiji.apply(null,arguments)};\nc.dynCall_v=function(){return c.asm.dynCall_v.apply(null,arguments)};c.dynCall_vi=function(){return c.asm.dynCall_vi.apply(null,arguments)};c.dynCall_vii=function(){return c.asm.dynCall_vii.apply(null,arguments)};c.dynCall_viiffii=function(){return c.asm.dynCall_viiffii.apply(null,arguments)};c.dynCall_viii=function(){return c.asm.dynCall_viii.apply(null,arguments)};c.dynCall_viiifffii=function(){return c.asm.dynCall_viiifffii.apply(null,arguments)};\nc.dynCall_viiiffii=function(){return c.asm.dynCall_viiiffii.apply(null,arguments)};c.dynCall_viiii=function(){return c.asm.dynCall_viiii.apply(null,arguments)};c.dynCall_viiiii=function(){return c.asm.dynCall_viiiii.apply(null,arguments)};c.dynCall_viiiiiffffffffffffffff=function(){return c.asm.dynCall_viiiiiffffffffffffffff.apply(null,arguments)};c.dynCall_viiiiii=function(){return c.asm.dynCall_viiiiii.apply(null,arguments)};c.dynCall_viijii=function(){return c.asm.dynCall_viijii.apply(null,arguments)};\nc.dynCall_vij=function(){return c.asm.dynCall_vij.apply(null,arguments)};c.dynCall_viji=function(){return c.asm.dynCall_viji.apply(null,arguments)};c.dynCall_vijii=function(){return c.asm.dynCall_vijii.apply(null,arguments)};c.asm=ne;\nc.cwrap=function(a,b,d,e){d=d||[];var f=d.every(function(a){return\"number\"===a});return\"string\"!==b&&f&&!e?qa(a):function(){var e=d,f=arguments,k=qa(a),m=[],q=0;if(f)for(var r=0;r<f.length;r++){var w=ta[e[r]];w?(0===q&&(q=B()),m[r]=w(f[r])):m[r]=f[r]}e=k.apply(null,m);e=\"string\"===b?H(e):\"boolean\"===b?!!e:e;0!==q&&C(q);return e}};\nc.setValue=function(a,b,d){d=d||\"i8\";\"*\"===d.charAt(d.length-1)&&(d=\"i32\");switch(d){case \"i1\":D[a>>0]=b;break;case \"i8\":D[a>>0]=b;break;case \"i16\":Ca[a>>1]=b;break;case \"i32\":v[a>>2]=b;break;case \"i64\":tempI64=[b>>>0,(tempDouble=b,1<=+Xa(tempDouble)?0<tempDouble?($a(+Za(tempDouble/4294967296),4294967295)|0)>>>0:~~+Ya((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)];v[a>>2]=tempI64[0];v[a+4>>2]=tempI64[1];break;case \"float\":Da[a>>2]=b;break;case \"double\":Ea[a>>3]=b;break;default:z(\"invalid type for setValue: \"+\nd)}};c.getValue=function(a,b){b=b||\"i8\";\"*\"===b.charAt(b.length-1)&&(b=\"i32\");switch(b){case \"i1\":return D[a>>0];case \"i8\":return D[a>>0];case \"i16\":return Ca[a>>1];case \"i32\":return v[a>>2];case \"i64\":return v[a>>2];case \"float\":return Da[a>>2];case \"double\":return Ea[a>>3];default:z(\"invalid type for getValue: \"+b)}return null};c.UTF8ToString=ua;c.then=function(a){if(c.calledRun)a(c);else{var b=c.onRuntimeInitialized;c.onRuntimeInitialized=function(){b&&b();a(c)}}return c};\ncb=function oe(){c.calledRun||pe();c.calledRun||(cb=oe)};\nfunction pe(){function a(){if(!c.calledRun&&(c.calledRun=!0,!pa)){Va||(Va=!0,Pa(Ra));Pa(Sa);if(c.onRuntimeInitialized)c.onRuntimeInitialized();if(c.postRun)for(\"function\"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;){var a=c.postRun.shift();Ua.unshift(a)}Pa(Ua)}}if(!(0<ab)){if(c.preRun)for(\"function\"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)Wa();Pa(Qa);0<ab||c.calledRun||(c.setStatus?(c.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){c.setStatus(\"\")},\n1);a()},1)):a())}}c.run=pe;function z(a){if(c.onAbort)c.onAbort(a);void 0!==a?(ca(a),p(a),a=JSON.stringify(a)):a=\"\";pa=!0;throw\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\";}c.abort=z;if(c.preInit)for(\"function\"==typeof c.preInit&&(c.preInit=[c.preInit]);0<c.preInit.length;)c.preInit.pop()();c.noExitRuntime=!0;pe();\n\n\n  return ZCV;\n}\n);\n})();\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ZCV);\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/zcv.js?");

/***/ }),

/***/ "./node_modules/@zappar/zappar-cv/lib/zcv.wasm":
/*!*****************************************************!*\
  !*** ./node_modules/@zappar/zappar-cv/lib/zcv.wasm ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => __WEBPACK_DEFAULT_EXPORT__\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__webpack_require__.p + \"2fbc7f8148ad5ae0d06bd9b6521c49ce.wasm\");\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/@zappar/zappar-cv/lib/zcv.wasm?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/common.js":
/*!**********************************************!*\
  !*** ./node_modules/gl-matrix/esm/common.js ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"EPSILON\": () => /* binding */ EPSILON,\n/* harmony export */   \"ARRAY_TYPE\": () => /* binding */ ARRAY_TYPE,\n/* harmony export */   \"RANDOM\": () => /* binding */ RANDOM,\n/* harmony export */   \"setMatrixArrayType\": () => /* binding */ setMatrixArrayType,\n/* harmony export */   \"toRadian\": () => /* binding */ toRadian,\n/* harmony export */   \"equals\": () => /* binding */ equals\n/* harmony export */ });\n/**\r\n * Common utilities\r\n * @module glMatrix\r\n */\n// Configuration Constants\nvar EPSILON = 0.000001;\nvar ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nvar RANDOM = Math.random;\n/**\r\n * Sets the type of array used when creating new vectors and matrices\r\n *\r\n * @param {Type} type Array type, such as Float32Array or Array\r\n */\n\nfunction setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\r\n * Convert Degree To Radian\r\n *\r\n * @param {Number} a Angle in Degrees\r\n */\n\nfunction toRadian(a) {\n  return a * degree;\n}\n/**\r\n * Tests whether or not the arguments have approximately the same value, within an absolute\r\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\r\n * than or equal to 1.0, and a relative tolerance is used for larger values)\r\n *\r\n * @param {Number} a The first number to test.\r\n * @param {Number} b The second number to test.\r\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/common.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/index.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/index.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"glMatrix\": () => /* reexport module object */ _common_js__WEBPACK_IMPORTED_MODULE_0__,\n/* harmony export */   \"mat2\": () => /* reexport module object */ _mat2_js__WEBPACK_IMPORTED_MODULE_1__,\n/* harmony export */   \"mat2d\": () => /* reexport module object */ _mat2d_js__WEBPACK_IMPORTED_MODULE_2__,\n/* harmony export */   \"mat3\": () => /* reexport module object */ _mat3_js__WEBPACK_IMPORTED_MODULE_3__,\n/* harmony export */   \"mat4\": () => /* reexport module object */ _mat4_js__WEBPACK_IMPORTED_MODULE_4__,\n/* harmony export */   \"quat\": () => /* reexport module object */ _quat_js__WEBPACK_IMPORTED_MODULE_5__,\n/* harmony export */   \"quat2\": () => /* reexport module object */ _quat2_js__WEBPACK_IMPORTED_MODULE_6__,\n/* harmony export */   \"vec2\": () => /* reexport module object */ _vec2_js__WEBPACK_IMPORTED_MODULE_7__,\n/* harmony export */   \"vec3\": () => /* reexport module object */ _vec3_js__WEBPACK_IMPORTED_MODULE_8__,\n/* harmony export */   \"vec4\": () => /* reexport module object */ _vec4_js__WEBPACK_IMPORTED_MODULE_9__\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mat2.js */ \"./node_modules/gl-matrix/esm/mat2.js\");\n/* harmony import */ var _mat2d_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat2d.js */ \"./node_modules/gl-matrix/esm/mat2d.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _quat2_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./quat2.js */ \"./node_modules/gl-matrix/esm/quat2.js\");\n/* harmony import */ var _vec2_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./vec2.js */ \"./node_modules/gl-matrix/esm/vec2.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/index.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"transpose\": () => /* binding */ transpose,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"adjoint\": () => /* binding */ adjoint,\n/* harmony export */   \"determinant\": () => /* binding */ determinant,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"rotate\": () => /* binding */ rotate,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"fromRotation\": () => /* binding */ fromRotation,\n/* harmony export */   \"fromScaling\": () => /* binding */ fromScaling,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"frob\": () => /* binding */ frob,\n/* harmony export */   \"LDU\": () => /* binding */ LDU,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"multiplyScalar\": () => /* binding */ multiplyScalar,\n/* harmony export */   \"multiplyScalarAndAdd\": () => /* binding */ multiplyScalarAndAdd,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"sub\": () => /* binding */ sub\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x2 Matrix\r\n * @module mat2\r\n */\n\n/**\r\n * Creates a new identity mat2\r\n *\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2 initialized with values from an existing matrix\r\n *\r\n * @param {mat2} a matrix to clone\r\n * @returns {mat2} a new 2x2 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Copy the values from one mat2 to another\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set a mat2 to the identity matrix\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @returns {mat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Create a new mat2 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out A new 2x2 matrix\r\n */\n\nfunction fromValues(m00, m01, m10, m11) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Set the components of a mat2 to the given values\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 2)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 3)\r\n * @returns {mat2} out\r\n */\n\nfunction set(out, m00, m01, m10, m11) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m10;\n  out[3] = m11;\n  return out;\n}\n/**\r\n * Transpose the values of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache\n  // some values\n  if (out === a) {\n    var a1 = a[1];\n    out[1] = a[2];\n    out[2] = a1;\n  } else {\n    out[0] = a[0];\n    out[1] = a[2];\n    out[2] = a[1];\n    out[3] = a[3];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3]; // Calculate the determinant\n\n  var det = a0 * a3 - a2 * a1;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = a3 * det;\n  out[1] = -a1 * det;\n  out[2] = -a2 * det;\n  out[3] = a0 * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the source matrix\r\n * @returns {mat2} out\r\n */\n\nfunction adjoint(out, a) {\n  // Caching this value is nessecary if out == a\n  var a0 = a[0];\n  out[0] = a[3];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a0;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2\r\n *\r\n * @param {mat2} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[2] * a[1];\n}\n/**\r\n * Multiplies two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  return out;\n}\n/**\r\n * Rotates a mat2 by the given angle\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  return out;\n}\n/**\r\n * Scales the mat2 by the dimensions in the given vec2\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2.identity(dest);\r\n *     mat2.scale(dest, dest, vec);\r\n *\r\n * @param {mat2} out mat2 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2\r\n *\r\n * @param {mat2} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2\r\n *\r\n * @param {mat2} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3]);\n}\n/**\r\n * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix\r\n * @param {mat2} L the lower triangular matrix\r\n * @param {mat2} D the diagonal matrix\r\n * @param {mat2} U the upper triangular matrix\r\n * @param {mat2} a the input matrix to factorize\r\n */\n\nfunction LDU(L, D, U, a) {\n  L[2] = a[2] / a[0];\n  U[0] = a[0];\n  U[1] = a[1];\n  U[3] = a[3] - L[2] * U[1];\n  return [L, D, U];\n}\n/**\r\n * Adds two mat2's\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @returns {mat2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2} a The first matrix.\r\n * @param {mat2} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2} out the receiving matrix\r\n * @param {mat2} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two mat2's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2} out the receiving vector\r\n * @param {mat2} a the first operand\r\n * @param {mat2} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Alias for {@link mat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/mat2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat2d.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat2d.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"determinant\": () => /* binding */ determinant,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"rotate\": () => /* binding */ rotate,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"translate\": () => /* binding */ translate,\n/* harmony export */   \"fromRotation\": () => /* binding */ fromRotation,\n/* harmony export */   \"fromScaling\": () => /* binding */ fromScaling,\n/* harmony export */   \"fromTranslation\": () => /* binding */ fromTranslation,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"frob\": () => /* binding */ frob,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiplyScalar\": () => /* binding */ multiplyScalar,\n/* harmony export */   \"multiplyScalarAndAdd\": () => /* binding */ multiplyScalarAndAdd,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"sub\": () => /* binding */ sub\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2x3 Matrix\r\n * @module mat2d\r\n *\r\n * @description\r\n * A mat2d contains six elements defined as:\r\n * <pre>\r\n * [a, b, c,\r\n *  d, tx, ty]\r\n * </pre>\r\n * This is a short form for the 3x3 matrix:\r\n * <pre>\r\n * [a, b, 0,\r\n *  c, d, 0,\r\n *  tx, ty, 1]\r\n * </pre>\r\n * The last column is ignored so the array is shorter and operations are faster.\r\n */\n\n/**\r\n * Creates a new identity mat2d\r\n *\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[4] = 0;\n    out[5] = 0;\n  }\n\n  out[0] = 1;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat2d initialized with values from an existing matrix\r\n *\r\n * @param {mat2d} a matrix to clone\r\n * @returns {mat2d} a new 2x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Copy the values from one mat2d to another\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  return out;\n}\n/**\r\n * Set a mat2d to the identity matrix\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Create a new mat2d with the given values\r\n *\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} A new mat2d\r\n */\n\nfunction fromValues(a, b, c, d, tx, ty) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(6);\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Set the components of a mat2d to the given values\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {Number} a Component A (index 0)\r\n * @param {Number} b Component B (index 1)\r\n * @param {Number} c Component C (index 2)\r\n * @param {Number} d Component D (index 3)\r\n * @param {Number} tx Component TX (index 4)\r\n * @param {Number} ty Component TY (index 5)\r\n * @returns {mat2d} out\r\n */\n\nfunction set(out, a, b, c, d, tx, ty) {\n  out[0] = a;\n  out[1] = b;\n  out[2] = c;\n  out[3] = d;\n  out[4] = tx;\n  out[5] = ty;\n  return out;\n}\n/**\r\n * Inverts a mat2d\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the source matrix\r\n * @returns {mat2d} out\r\n */\n\nfunction invert(out, a) {\n  var aa = a[0],\n      ab = a[1],\n      ac = a[2],\n      ad = a[3];\n  var atx = a[4],\n      aty = a[5];\n  var det = aa * ad - ab * ac;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = ad * det;\n  out[1] = -ab * det;\n  out[2] = -ac * det;\n  out[3] = aa * det;\n  out[4] = (ac * aty - ad * atx) * det;\n  out[5] = (ab * atx - aa * aty) * det;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat2d\r\n *\r\n * @param {mat2d} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  return a[0] * a[3] - a[1] * a[2];\n}\n/**\r\n * Multiplies two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  out[0] = a0 * b0 + a2 * b1;\n  out[1] = a1 * b0 + a3 * b1;\n  out[2] = a0 * b2 + a2 * b3;\n  out[3] = a1 * b2 + a3 * b3;\n  out[4] = a0 * b4 + a2 * b5 + a4;\n  out[5] = a1 * b4 + a3 * b5 + a5;\n  return out;\n}\n/**\r\n * Rotates a mat2d by the given angle\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  out[0] = a0 * c + a2 * s;\n  out[1] = a1 * c + a3 * s;\n  out[2] = a0 * -s + a2 * c;\n  out[3] = a1 * -s + a3 * c;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Scales the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction scale(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0 * v0;\n  out[1] = a1 * v0;\n  out[2] = a2 * v1;\n  out[3] = a3 * v1;\n  out[4] = a4;\n  out[5] = a5;\n  return out;\n}\n/**\r\n * Translates the mat2d by the dimensions in the given vec2\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to translate\r\n * @param {vec2} v the vec2 to translate the matrix by\r\n * @returns {mat2d} out\r\n **/\n\nfunction translate(out, a, v) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var v0 = v[0],\n      v1 = v[1];\n  out[0] = a0;\n  out[1] = a1;\n  out[2] = a2;\n  out[3] = a3;\n  out[4] = a0 * v0 + a2 * v1 + a4;\n  out[5] = a1 * v0 + a3 * v1 + a5;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.rotate(dest, dest, rad);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat2d} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = -s;\n  out[3] = c;\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.scale(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = v[1];\n  out[4] = 0;\n  out[5] = 0;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat2d.identity(dest);\r\n *     mat2d.translate(dest, dest, vec);\r\n *\r\n * @param {mat2d} out mat2d receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat2d} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = v[0];\n  out[5] = v[1];\n  return out;\n}\n/**\r\n * Returns a string representation of a mat2d\r\n *\r\n * @param {mat2d} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat2d(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat2d\r\n *\r\n * @param {mat2d} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);\n}\n/**\r\n * Adds two mat2d's\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @returns {mat2d} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat2d} out the receiving matrix\r\n * @param {mat2d} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  return out;\n}\n/**\r\n * Adds two mat2d's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat2d} out the receiving vector\r\n * @param {mat2d} a the first operand\r\n * @param {mat2d} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat2d} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat2d} a The first matrix.\r\n * @param {mat2d} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));\n}\n/**\r\n * Alias for {@link mat2d.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat2d.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/mat2d.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"fromMat4\": () => /* binding */ fromMat4,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"transpose\": () => /* binding */ transpose,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"adjoint\": () => /* binding */ adjoint,\n/* harmony export */   \"determinant\": () => /* binding */ determinant,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"translate\": () => /* binding */ translate,\n/* harmony export */   \"rotate\": () => /* binding */ rotate,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"fromTranslation\": () => /* binding */ fromTranslation,\n/* harmony export */   \"fromRotation\": () => /* binding */ fromRotation,\n/* harmony export */   \"fromScaling\": () => /* binding */ fromScaling,\n/* harmony export */   \"fromMat2d\": () => /* binding */ fromMat2d,\n/* harmony export */   \"fromQuat\": () => /* binding */ fromQuat,\n/* harmony export */   \"normalFromMat4\": () => /* binding */ normalFromMat4,\n/* harmony export */   \"projection\": () => /* binding */ projection,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"frob\": () => /* binding */ frob,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiplyScalar\": () => /* binding */ multiplyScalar,\n/* harmony export */   \"multiplyScalarAndAdd\": () => /* binding */ multiplyScalarAndAdd,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"sub\": () => /* binding */ sub\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3x3 Matrix\r\n * @module mat3\r\n */\n\n/**\r\n * Creates a new identity mat3\r\n *\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the upper-left 3x3 values into the given mat3.\r\n *\r\n * @param {mat3} out the receiving 3x3 matrix\r\n * @param {mat4} a   the source 4x4 matrix\r\n * @returns {mat3} out\r\n */\n\nfunction fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\r\n * Creates a new mat3 initialized with values from an existing matrix\r\n *\r\n * @param {mat3} a matrix to clone\r\n * @returns {mat3} a new 3x3 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Copy the values from one mat3 to another\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Create a new mat3 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} A new mat3\r\n */\n\nfunction fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set the components of a mat3 to the given values\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\r\n * @returns {mat3} out\r\n */\n\nfunction set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\r\n * Set a mat3 to the identity matrix\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @returns {mat3} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the source matrix\r\n * @returns {mat3} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat3\r\n *\r\n * @param {mat3} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\r\n * Multiplies two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\r\n * Translate a mat3 by the given vector\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to translate\r\n * @param {vec2} v vector to translate by\r\n * @returns {mat3} out\r\n */\n\nfunction translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\r\n * Rotates a mat3 by the given angle\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n;\n/**\r\n * Scales the mat3 by the dimensions in the given vec2\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to rotate\r\n * @param {vec2} v the vec2 to scale the matrix by\r\n * @returns {mat3} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.translate(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Translation vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.rotate(dest, dest, rad);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat3} out\r\n */\n\nfunction fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat3.identity(dest);\r\n *     mat3.scale(dest, dest, vec);\r\n *\r\n * @param {mat3} out mat3 receiving operation result\r\n * @param {vec2} v Scaling vector\r\n * @returns {mat3} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Copies the values from a mat2d into a mat3\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat2d} a the matrix to copy\r\n * @returns {mat3} out\r\n **/\n\nfunction fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\r\n* Calculates a 3x3 matrix from the given quaternion\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {quat} q Quaternion to create matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\r\n* Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n*\r\n* @param {mat3} out mat3 receiving operation result\r\n* @param {mat4} a Mat4 to derive the normal matrix from\r\n*\r\n* @returns {mat3} out\r\n*/\n\nfunction normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\r\n * Generates a 2D projection matrix with the given bounds\r\n *\r\n * @param {mat3} out mat3 frustum matrix will be written into\r\n * @param {number} width Width of your gl context\r\n * @param {number} height Height of gl context\r\n * @returns {mat3} out\r\n */\n\nfunction projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\r\n * Returns a string representation of a mat3\r\n *\r\n * @param {mat3} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat3\r\n *\r\n * @param {mat3} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\r\n * Adds two mat3's\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @returns {mat3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat3} out the receiving matrix\r\n * @param {mat3} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\r\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat3} out the receiving vector\r\n * @param {mat3} a the first operand\r\n * @param {mat3} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat3} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat3} a The first matrix.\r\n * @param {mat3} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\r\n * Alias for {@link mat3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/mat3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/mat4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/mat4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"transpose\": () => /* binding */ transpose,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"adjoint\": () => /* binding */ adjoint,\n/* harmony export */   \"determinant\": () => /* binding */ determinant,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"translate\": () => /* binding */ translate,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"rotate\": () => /* binding */ rotate,\n/* harmony export */   \"rotateX\": () => /* binding */ rotateX,\n/* harmony export */   \"rotateY\": () => /* binding */ rotateY,\n/* harmony export */   \"rotateZ\": () => /* binding */ rotateZ,\n/* harmony export */   \"fromTranslation\": () => /* binding */ fromTranslation,\n/* harmony export */   \"fromScaling\": () => /* binding */ fromScaling,\n/* harmony export */   \"fromRotation\": () => /* binding */ fromRotation,\n/* harmony export */   \"fromXRotation\": () => /* binding */ fromXRotation,\n/* harmony export */   \"fromYRotation\": () => /* binding */ fromYRotation,\n/* harmony export */   \"fromZRotation\": () => /* binding */ fromZRotation,\n/* harmony export */   \"fromRotationTranslation\": () => /* binding */ fromRotationTranslation,\n/* harmony export */   \"fromQuat2\": () => /* binding */ fromQuat2,\n/* harmony export */   \"getTranslation\": () => /* binding */ getTranslation,\n/* harmony export */   \"getScaling\": () => /* binding */ getScaling,\n/* harmony export */   \"getRotation\": () => /* binding */ getRotation,\n/* harmony export */   \"fromRotationTranslationScale\": () => /* binding */ fromRotationTranslationScale,\n/* harmony export */   \"fromRotationTranslationScaleOrigin\": () => /* binding */ fromRotationTranslationScaleOrigin,\n/* harmony export */   \"fromQuat\": () => /* binding */ fromQuat,\n/* harmony export */   \"frustum\": () => /* binding */ frustum,\n/* harmony export */   \"perspective\": () => /* binding */ perspective,\n/* harmony export */   \"perspectiveFromFieldOfView\": () => /* binding */ perspectiveFromFieldOfView,\n/* harmony export */   \"ortho\": () => /* binding */ ortho,\n/* harmony export */   \"lookAt\": () => /* binding */ lookAt,\n/* harmony export */   \"targetTo\": () => /* binding */ targetTo,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"frob\": () => /* binding */ frob,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiplyScalar\": () => /* binding */ multiplyScalar,\n/* harmony export */   \"multiplyScalarAndAdd\": () => /* binding */ multiplyScalarAndAdd,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"sub\": () => /* binding */ sub\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\r\n * @module mat4\r\n */\n\n/**\r\n * Creates a new identity mat4\r\n *\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 initialized with values from an existing matrix\r\n *\r\n * @param {mat4} a matrix to clone\r\n * @returns {mat4} a new 4x4 matrix\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Copy the values from one mat4 to another\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Create a new mat4 with the given values\r\n *\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} A new mat4\r\n */\n\nfunction fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set the components of a mat4 to the given values\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\r\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\r\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\r\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\r\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\r\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\r\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\r\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\r\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\r\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\r\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\r\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\r\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\r\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\r\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\r\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\r\n * @returns {mat4} out\r\n */\n\nfunction set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\r\n * Set a mat4 to the identity matrix\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @returns {mat4} out\r\n */\n\nfunction identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Transpose the values of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Inverts a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\r\n * Calculates the adjugate of a mat4\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the source matrix\r\n * @returns {mat4} out\r\n */\n\nfunction adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\r\n * Calculates the determinant of a mat4\r\n *\r\n * @param {mat4} a the source matrix\r\n * @returns {Number} determinant of a\r\n */\n\nfunction determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\r\n * Multiplies two mat4s\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\r\n * Translate a mat4 by the given vector\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {mat4} out\r\n */\n\nfunction translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\r\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {vec3} v the vec3 to scale the matrix by\r\n * @returns {mat4} out\r\n **/\n\nfunction scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\r\n * Rotates a mat4 by the given angle around the given axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the X axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Y axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\r\n * Rotates a matrix by the given angle around the Z axis\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to rotate\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a vector scaling\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.scale(dest, dest, vec);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {vec3} v Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a given angle around a given axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotate(dest, dest, rad, axis);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @param {vec3} axis the axis to rotate around\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the X axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateX(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Y axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateY(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from the given angle around the Z axis\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.rotateZ(dest, dest, rad);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {Number} rad the angle to rotate the matrix by\r\n * @returns {mat4} out\r\n */\n\nfunction fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation and vector translation\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a new mat4 from a dual quat.\r\n *\r\n * @param {mat4} out Matrix\r\n * @param {quat2} a Dual Quaternion\r\n * @returns {mat4} mat4 receiving operation result\r\n */\n\nfunction fromQuat2(out, a) {\n  var translation = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\r\n * Returns the translation vector component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslation,\r\n *  the returned vector will be the same as the translation vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive translation component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\r\n * Returns the scaling factor component of a transformation\r\n *  matrix. If a matrix is built with fromRotationTranslationScale\r\n *  with a normalized Quaternion paramter, the returned vector will be\r\n *  the same as the scaling vector\r\n *  originally supplied.\r\n * @param  {vec3} out Vector to receive scaling factor component\r\n * @param  {mat4} mat Matrix to be decomposed (input)\r\n * @return {vec3} out\r\n */\n\nfunction getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\r\n * Returns a quaternion representing the rotational component\r\n *  of a transformation matrix. If a matrix is built with\r\n *  fromRotationTranslation, the returned quaternion will be the\r\n *  same as the quaternion originally supplied.\r\n * @param {quat} out Quaternion to receive the rotation component\r\n * @param {mat4} mat Matrix to be decomposed (input)\r\n * @return {quat} out\r\n */\n\nfunction getRotation(out, mat) {\n  var scaling = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n * This is equivalent to (but much faster than):\r\n *\r\n *     mat4.identity(dest);\r\n *     mat4.translate(dest, vec);\r\n *     mat4.translate(dest, origin);\r\n *     let quatMat = mat4.create();\r\n *     quat4.toMat4(quat, quatMat);\r\n *     mat4.multiply(dest, quatMat);\r\n *     mat4.scale(dest, scale)\r\n *     mat4.translate(dest, negativeOrigin);\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat4} q Rotation quaternion\r\n * @param {vec3} v Translation vector\r\n * @param {vec3} s Scaling vector\r\n * @param {vec3} o The origin vector around which to scale and rotate\r\n * @returns {mat4} out\r\n */\n\nfunction fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Calculates a 4x4 matrix from the given quaternion\r\n *\r\n * @param {mat4} out mat4 receiving operation result\r\n * @param {quat} q Quaternion to create matrix from\r\n *\r\n * @returns {mat4} out\r\n */\n\nfunction fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a frustum matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Number} left Left bound of the frustum\r\n * @param {Number} right Right bound of the frustum\r\n * @param {Number} bottom Bottom bound of the frustum\r\n * @param {Number} top Top bound of the frustum\r\n * @param {Number} near Near bound of the frustum\r\n * @param {Number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given bounds.\r\n * Passing null/undefined/no value for far will generate infinite projection matrix.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} fovy Vertical field of view in radians\r\n * @param {number} aspect Aspect ratio. typically viewport width/height\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum, can be null or Infinity\r\n * @returns {mat4} out\r\n */\n\nfunction perspective(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\r\n * Generates a perspective projection matrix with the given field of view.\r\n * This is primarily useful for generating projection matrices to be used\r\n * with the still experiemental WebVR API.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\r\n * Generates a orthogonal projection matrix with the given bounds\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {number} left Left bound of the frustum\r\n * @param {number} right Right bound of the frustum\r\n * @param {number} bottom Bottom bound of the frustum\r\n * @param {number} top Top bound of the frustum\r\n * @param {number} near Near bound of the frustum\r\n * @param {number} far Far bound of the frustum\r\n * @returns {mat4} out\r\n */\n\nfunction ortho(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\r\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyey - centery) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON && Math.abs(eyez - centerz) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\r\n * Generates a matrix that makes something look at something else.\r\n *\r\n * @param {mat4} out mat4 frustum matrix will be written into\r\n * @param {vec3} eye Position of the viewer\r\n * @param {vec3} center Point the viewer is looking at\r\n * @param {vec3} up vec3 pointing up\r\n * @returns {mat4} out\r\n */\n\nfunction targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n;\n/**\r\n * Returns a string representation of a mat4\r\n *\r\n * @param {mat4} a matrix to represent as a string\r\n * @returns {String} string representation of the matrix\r\n */\n\nfunction str(a) {\n  return 'mat4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ', ' + a[8] + ', ' + a[9] + ', ' + a[10] + ', ' + a[11] + ', ' + a[12] + ', ' + a[13] + ', ' + a[14] + ', ' + a[15] + ')';\n}\n/**\r\n * Returns Frobenius norm of a mat4\r\n *\r\n * @param {mat4} a the matrix to calculate Frobenius norm of\r\n * @returns {Number} Frobenius norm\r\n */\n\nfunction frob(a) {\n  return Math.hypot(a[0], a[1], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\r\n * Adds two mat4's\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\r\n * Subtracts matrix b from matrix a\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @returns {mat4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\r\n * Multiply each element of the matrix by a scalar.\r\n *\r\n * @param {mat4} out the receiving matrix\r\n * @param {mat4} a the matrix to scale\r\n * @param {Number} b amount to scale the matrix's elements by\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\r\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n *\r\n * @param {mat4} out the receiving vector\r\n * @param {mat4} a the first operand\r\n * @param {mat4} b the second operand\r\n * @param {Number} scale the amount to scale b's elements by before adding\r\n * @returns {mat4} out\r\n */\n\nfunction multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\r\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\r\n * Returns whether or not the matrices have approximately the same elements in the same position.\r\n *\r\n * @param {mat4} a The first matrix.\r\n * @param {mat4} b The second matrix.\r\n * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\r\n * Alias for {@link mat4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link mat4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/mat4.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"setAxisAngle\": () => /* binding */ setAxisAngle,\n/* harmony export */   \"getAxisAngle\": () => /* binding */ getAxisAngle,\n/* harmony export */   \"getAngle\": () => /* binding */ getAngle,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"rotateX\": () => /* binding */ rotateX,\n/* harmony export */   \"rotateY\": () => /* binding */ rotateY,\n/* harmony export */   \"rotateZ\": () => /* binding */ rotateZ,\n/* harmony export */   \"calculateW\": () => /* binding */ calculateW,\n/* harmony export */   \"exp\": () => /* binding */ exp,\n/* harmony export */   \"ln\": () => /* binding */ ln,\n/* harmony export */   \"pow\": () => /* binding */ pow,\n/* harmony export */   \"slerp\": () => /* binding */ slerp,\n/* harmony export */   \"random\": () => /* binding */ random,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"conjugate\": () => /* binding */ conjugate,\n/* harmony export */   \"fromMat3\": () => /* binding */ fromMat3,\n/* harmony export */   \"fromEuler\": () => /* binding */ fromEuler,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"dot\": () => /* binding */ dot,\n/* harmony export */   \"lerp\": () => /* binding */ lerp,\n/* harmony export */   \"length\": () => /* binding */ length,\n/* harmony export */   \"len\": () => /* binding */ len,\n/* harmony export */   \"squaredLength\": () => /* binding */ squaredLength,\n/* harmony export */   \"sqrLen\": () => /* binding */ sqrLen,\n/* harmony export */   \"normalize\": () => /* binding */ normalize,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"rotationTo\": () => /* binding */ rotationTo,\n/* harmony export */   \"sqlerp\": () => /* binding */ sqlerp,\n/* harmony export */   \"setAxes\": () => /* binding */ setAxes\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _mat3_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mat3.js */ \"./node_modules/gl-matrix/esm/mat3.js\");\n/* harmony import */ var _vec3_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./vec3.js */ \"./node_modules/gl-matrix/esm/vec3.js\");\n/* harmony import */ var _vec4_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./vec4.js */ \"./node_modules/gl-matrix/esm/vec4.js\");\n\n\n\n\n/**\r\n * Quaternion\r\n * @module quat\r\n */\n\n/**\r\n * Creates a new identity quat\r\n *\r\n * @returns {quat} a new quaternion\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Set a quat to the identity quaternion\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  return out;\n}\n/**\r\n * Sets a quat from the given angle and rotation axis,\r\n * then returns it.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {vec3} axis the axis around which to rotate\r\n * @param {Number} rad the angle in radians\r\n * @returns {quat} out\r\n **/\n\nfunction setAxisAngle(out, axis, rad) {\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  out[0] = s * axis[0];\n  out[1] = s * axis[1];\n  out[2] = s * axis[2];\n  out[3] = Math.cos(rad);\n  return out;\n}\n/**\r\n * Gets the rotation axis and angle for a given\r\n *  quaternion. If a quaternion is created with\r\n *  setAxisAngle, this method will return the same\r\n *  values as providied in the original parameter list\r\n *  OR functionally equivalent values.\r\n * Example: The quaternion formed by axis [0, 0, 1] and\r\n *  angle -90 is the same as the quaternion formed by\r\n *  [0, 0, 1] and 270. This method favors the latter.\r\n * @param  {vec3} out_axis  Vector receiving the axis of rotation\r\n * @param  {quat} q     Quaternion to be decomposed\r\n * @return {Number}     Angle, in radians, of the rotation\r\n */\n\nfunction getAxisAngle(out_axis, q) {\n  var rad = Math.acos(q[3]) * 2.0;\n  var s = Math.sin(rad / 2.0);\n\n  if (s > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    out_axis[0] = q[0] / s;\n    out_axis[1] = q[1] / s;\n    out_axis[2] = q[2] / s;\n  } else {\n    // If s is zero, return any axis (no rotation - axis does not matter)\n    out_axis[0] = 1;\n    out_axis[1] = 0;\n    out_axis[2] = 0;\n  }\n\n  return rad;\n}\n/**\r\n * Gets the angular distance between two unit quaternions\r\n *\r\n * @param  {quat} a     Origin unit quaternion \r\n * @param  {quat} b     Destination unit quaternion\r\n * @return {Number}     Angle, in radians, between the two quaternions\r\n */\n\nfunction getAngle(a, b) {\n  var dotproduct = dot(a, b);\n  return Math.acos(2 * dotproduct * dotproduct - 1);\n}\n/**\r\n * Multiplies two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  out[0] = ax * bw + aw * bx + ay * bz - az * by;\n  out[1] = ay * bw + aw * by + az * bx - ax * bz;\n  out[2] = az * bw + aw * bz + ax * by - ay * bx;\n  out[3] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the X axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + aw * bx;\n  out[1] = ay * bw + az * bx;\n  out[2] = az * bw - ay * bx;\n  out[3] = aw * bw - ax * bx;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Y axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var by = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw - az * by;\n  out[1] = ay * bw + aw * by;\n  out[2] = az * bw + ax * by;\n  out[3] = aw * bw - ay * by;\n  return out;\n}\n/**\r\n * Rotates a quaternion by the given angle about the Z axis\r\n *\r\n * @param {quat} out quat receiving operation result\r\n * @param {quat} a quat to rotate\r\n * @param {number} rad angle (in radians) to rotate\r\n * @returns {quat} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  rad *= 0.5;\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bz = Math.sin(rad),\n      bw = Math.cos(rad);\n  out[0] = ax * bw + ay * bz;\n  out[1] = ay * bw - ax * bz;\n  out[2] = az * bw + aw * bz;\n  out[3] = aw * bw - az * bz;\n  return out;\n}\n/**\r\n * Calculates the W component of a quat from the X, Y, and Z components.\r\n * Assumes that quaternion is 1 unit in length.\r\n * Any existing W component will be ignored.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate W component of\r\n * @returns {quat} out\r\n */\n\nfunction calculateW(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\n  return out;\n}\n/**\r\n * Calculate the exponential of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction exp(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var et = Math.exp(w);\n  var s = r > 0 ? et * Math.sin(r) / r : 0;\n  out[0] = x * s;\n  out[1] = y * s;\n  out[2] = z * s;\n  out[3] = et * Math.cos(r);\n  return out;\n}\n/**\r\n * Calculate the natural logarithm of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @returns {quat} out\r\n */\n\nfunction ln(out, a) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  var r = Math.sqrt(x * x + y * y + z * z);\n  var t = r > 0 ? Math.atan2(r, w) / r : 0;\n  out[0] = x * t;\n  out[1] = y * t;\n  out[2] = z * t;\n  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);\n  return out;\n}\n/**\r\n * Calculate the scalar power of a unit quaternion.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate the exponential of\r\n * @param {Number} b amount to scale the quaternion by\r\n * @returns {quat} out\r\n */\n\nfunction pow(out, a, b) {\n  ln(out, a);\n  scale(out, out, b);\n  exp(out, out);\n  return out;\n}\n/**\r\n * Performs a spherical linear interpolation between two quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nfunction slerp(out, a, b, t) {\n  // benchmarks:\n  //    http://jsperf.com/quaternion-slerp-implementations\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2],\n      bw = b[3];\n  var omega, cosom, sinom, scale0, scale1; // calc cosine\n\n  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)\n\n  if (cosom < 0.0) {\n    cosom = -cosom;\n    bx = -bx;\n    by = -by;\n    bz = -bz;\n    bw = -bw;\n  } // calculate coefficients\n\n\n  if (1.0 - cosom > _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    // standard case (slerp)\n    omega = Math.acos(cosom);\n    sinom = Math.sin(omega);\n    scale0 = Math.sin((1.0 - t) * omega) / sinom;\n    scale1 = Math.sin(t * omega) / sinom;\n  } else {\n    // \"from\" and \"to\" quaternions are very close\n    //  ... so we can do a linear interpolation\n    scale0 = 1.0 - t;\n    scale1 = t;\n  } // calculate final values\n\n\n  out[0] = scale0 * ax + scale1 * bx;\n  out[1] = scale0 * ay + scale1 * by;\n  out[2] = scale0 * az + scale1 * bz;\n  out[3] = scale0 * aw + scale1 * bw;\n  return out;\n}\n/**\r\n * Generates a random unit quaternion\r\n * \r\n * @param {quat} out the receiving quaternion\r\n * @returns {quat} out\r\n */\n\nfunction random(out) {\n  // Implementation of http://planning.cs.uiuc.edu/node198.html\n  // TODO: Calling random 3 times is probably not the fastest solution\n  var u1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var u3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM();\n  var sqrt1MinusU1 = Math.sqrt(1 - u1);\n  var sqrtU1 = Math.sqrt(u1);\n  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);\n  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);\n  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);\n  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);\n  return out;\n}\n/**\r\n * Calculates the inverse of a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate inverse of\r\n * @returns {quat} out\r\n */\n\nfunction invert(out, a) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n  out[0] = -a0 * invDot;\n  out[1] = -a1 * invDot;\n  out[2] = -a2 * invDot;\n  out[3] = a3 * invDot;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a quat\r\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quat to calculate conjugate of\r\n * @returns {quat} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a quaternion from the given 3x3 rotation matrix.\r\n *\r\n * NOTE: The resultant quaternion is not normalized, so you should be sure\r\n * to renormalize the quaternion yourself where necessary.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {mat3} m rotation matrix\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromMat3(out, m) {\n  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n  // article \"Quaternion Calculus and Fast Animation\".\n  var fTrace = m[0] + m[4] + m[8];\n  var fRoot;\n\n  if (fTrace > 0.0) {\n    // |w| > 1/2, may as well choose w > 1/2\n    fRoot = Math.sqrt(fTrace + 1.0); // 2w\n\n    out[3] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot; // 1/(4w)\n\n    out[0] = (m[5] - m[7]) * fRoot;\n    out[1] = (m[6] - m[2]) * fRoot;\n    out[2] = (m[1] - m[3]) * fRoot;\n  } else {\n    // |w| <= 1/2\n    var i = 0;\n    if (m[4] > m[0]) i = 1;\n    if (m[8] > m[i * 3 + i]) i = 2;\n    var j = (i + 1) % 3;\n    var k = (i + 2) % 3;\n    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n    out[i] = 0.5 * fRoot;\n    fRoot = 0.5 / fRoot;\n    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n  }\n\n  return out;\n}\n/**\r\n * Creates a quaternion from the given euler angle x, y, z.\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {x} Angle to rotate around X axis in degrees.\r\n * @param {y} Angle to rotate around Y axis in degrees.\r\n * @param {z} Angle to rotate around Z axis in degrees.\r\n * @returns {quat} out\r\n * @function\r\n */\n\nfunction fromEuler(out, x, y, z) {\n  var halfToRad = 0.5 * Math.PI / 180.0;\n  x *= halfToRad;\n  y *= halfToRad;\n  z *= halfToRad;\n  var sx = Math.sin(x);\n  var cx = Math.cos(x);\n  var sy = Math.sin(y);\n  var cy = Math.cos(y);\n  var sz = Math.sin(z);\n  var cz = Math.cos(z);\n  out[0] = sx * cy * cz - cx * sy * sz;\n  out[1] = cx * sy * cz + sx * cy * sz;\n  out[2] = cx * cy * sz - sx * sy * cz;\n  out[3] = cx * cy * cz + sx * sy * sz;\n  return out;\n}\n/**\r\n * Returns a string representation of a quatenion\r\n *\r\n * @param {quat} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'quat(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat} a quaternion to clone\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar clone = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.clone;\n/**\r\n * Creates a new quat initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} a new quaternion\r\n * @function\r\n */\n\nvar fromValues = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.fromValues;\n/**\r\n * Copy the values from one quat to another\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the source quaternion\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar copy = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Set the components of a quat to the given values\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar set = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.set;\n/**\r\n * Adds two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar add = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.add;\n/**\r\n * Alias for {@link quat.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a quat by a scalar number\r\n *\r\n * @param {quat} out the receiving vector\r\n * @param {quat} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar scale = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.scale;\n/**\r\n * Calculates the dot product of two quat's\r\n *\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.dot;\n/**\r\n * Performs a linear interpolation between two quat's\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar lerp = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.lerp;\n/**\r\n * Calculates the length of a quat\r\n *\r\n * @param {quat} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nvar length = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.length;\n/**\r\n * Alias for {@link quat.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a quat\r\n *\r\n * @param {quat} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\n/**\r\n * Alias for {@link quat.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a quat\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a quaternion to normalize\r\n * @returns {quat} out\r\n * @function\r\n */\n\nvar normalize = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.normalize;\n/**\r\n * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat} a The first quaternion.\r\n * @param {quat} b The second quaternion.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar exactEquals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.exactEquals;\n/**\r\n * Returns whether or not the quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat} a The first vector.\r\n * @param {quat} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nvar equals = _vec4_js__WEBPACK_IMPORTED_MODULE_1__.equals;\n/**\r\n * Sets a quaternion to represent the shortest rotation from one\r\n * vector to another.\r\n *\r\n * Both vectors are assumed to be unit length.\r\n *\r\n * @param {quat} out the receiving quaternion.\r\n * @param {vec3} a the initial vector\r\n * @param {vec3} b the destination vector\r\n * @returns {quat} out\r\n */\n\nvar rotationTo = function () {\n  var tmpvec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.create();\n  var xUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(1, 0, 0);\n  var yUnitVec3 = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.fromValues(0, 1, 0);\n  return function (out, a, b) {\n    var dot = _vec3_js__WEBPACK_IMPORTED_MODULE_2__.dot(a, b);\n\n    if (dot < -0.999999) {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, xUnitVec3, a);\n      if (_vec3_js__WEBPACK_IMPORTED_MODULE_2__.len(tmpvec3) < 0.000001) _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, yUnitVec3, a);\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.normalize(tmpvec3, tmpvec3);\n      setAxisAngle(out, tmpvec3, Math.PI);\n      return out;\n    } else if (dot > 0.999999) {\n      out[0] = 0;\n      out[1] = 0;\n      out[2] = 0;\n      out[3] = 1;\n      return out;\n    } else {\n      _vec3_js__WEBPACK_IMPORTED_MODULE_2__.cross(tmpvec3, a, b);\n      out[0] = tmpvec3[0];\n      out[1] = tmpvec3[1];\n      out[2] = tmpvec3[2];\n      out[3] = 1 + dot;\n      return normalize(out, out);\n    }\n  };\n}();\n/**\r\n * Performs a spherical linear interpolation with two control points\r\n *\r\n * @param {quat} out the receiving quaternion\r\n * @param {quat} a the first operand\r\n * @param {quat} b the second operand\r\n * @param {quat} c the third operand\r\n * @param {quat} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat} out\r\n */\n\nvar sqlerp = function () {\n  var temp1 = create();\n  var temp2 = create();\n  return function (out, a, b, c, d, t) {\n    slerp(temp1, a, d, t);\n    slerp(temp2, b, c, t);\n    slerp(out, temp1, temp2, 2 * t * (1 - t));\n    return out;\n  };\n}();\n/**\r\n * Sets the specified quaternion with values corresponding to the given\r\n * axes. Each axis is a vec3 and is expected to be unit length and\r\n * perpendicular to all other specified axes.\r\n *\r\n * @param {vec3} view  the vector representing the viewing direction\r\n * @param {vec3} right the vector representing the local \"right\" direction\r\n * @param {vec3} up    the vector representing the local \"up\" direction\r\n * @returns {quat} out\r\n */\n\nvar setAxes = function () {\n  var matr = _mat3_js__WEBPACK_IMPORTED_MODULE_3__.create();\n  return function (out, view, right, up) {\n    matr[0] = right[0];\n    matr[3] = right[1];\n    matr[6] = right[2];\n    matr[1] = up[0];\n    matr[4] = up[1];\n    matr[7] = up[2];\n    matr[2] = -view[0];\n    matr[5] = -view[1];\n    matr[8] = -view[2];\n    return normalize(out, fromMat3(out, matr));\n  };\n}();\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/quat.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/quat2.js":
/*!*********************************************!*\
  !*** ./node_modules/gl-matrix/esm/quat2.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"fromRotationTranslationValues\": () => /* binding */ fromRotationTranslationValues,\n/* harmony export */   \"fromRotationTranslation\": () => /* binding */ fromRotationTranslation,\n/* harmony export */   \"fromTranslation\": () => /* binding */ fromTranslation,\n/* harmony export */   \"fromRotation\": () => /* binding */ fromRotation,\n/* harmony export */   \"fromMat4\": () => /* binding */ fromMat4,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"identity\": () => /* binding */ identity,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"getReal\": () => /* binding */ getReal,\n/* harmony export */   \"getDual\": () => /* binding */ getDual,\n/* harmony export */   \"setReal\": () => /* binding */ setReal,\n/* harmony export */   \"setDual\": () => /* binding */ setDual,\n/* harmony export */   \"getTranslation\": () => /* binding */ getTranslation,\n/* harmony export */   \"translate\": () => /* binding */ translate,\n/* harmony export */   \"rotateX\": () => /* binding */ rotateX,\n/* harmony export */   \"rotateY\": () => /* binding */ rotateY,\n/* harmony export */   \"rotateZ\": () => /* binding */ rotateZ,\n/* harmony export */   \"rotateByQuatAppend\": () => /* binding */ rotateByQuatAppend,\n/* harmony export */   \"rotateByQuatPrepend\": () => /* binding */ rotateByQuatPrepend,\n/* harmony export */   \"rotateAroundAxis\": () => /* binding */ rotateAroundAxis,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"dot\": () => /* binding */ dot,\n/* harmony export */   \"lerp\": () => /* binding */ lerp,\n/* harmony export */   \"invert\": () => /* binding */ invert,\n/* harmony export */   \"conjugate\": () => /* binding */ conjugate,\n/* harmony export */   \"length\": () => /* binding */ length,\n/* harmony export */   \"len\": () => /* binding */ len,\n/* harmony export */   \"squaredLength\": () => /* binding */ squaredLength,\n/* harmony export */   \"sqrLen\": () => /* binding */ sqrLen,\n/* harmony export */   \"normalize\": () => /* binding */ normalize,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n/* harmony import */ var _quat_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./quat.js */ \"./node_modules/gl-matrix/esm/quat.js\");\n/* harmony import */ var _mat4_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mat4.js */ \"./node_modules/gl-matrix/esm/mat4.js\");\n\n\n\n/**\r\n * Dual Quaternion<br>\r\n * Format: [real, dual]<br>\r\n * Quaternion format: XYZW<br>\r\n * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>\r\n * @module quat2\r\n */\n\n/**\r\n * Creates a new identity dual quat\r\n *\r\n * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]\r\n */\n\nfunction create() {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    dq[0] = 0;\n    dq[1] = 0;\n    dq[2] = 0;\n    dq[4] = 0;\n    dq[5] = 0;\n    dq[6] = 0;\n    dq[7] = 0;\n  }\n\n  dq[3] = 1;\n  return dq;\n}\n/**\r\n * Creates a new quat initialized with values from an existing quaternion\r\n *\r\n * @param {quat2} a dual quaternion to clone\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction clone(a) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = a[0];\n  dq[1] = a[1];\n  dq[2] = a[2];\n  dq[3] = a[3];\n  dq[4] = a[4];\n  dq[5] = a[5];\n  dq[6] = a[6];\n  dq[7] = a[7];\n  return dq;\n}\n/**\r\n * Creates a new dual quat initialized with the given values\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromValues(x1, y1, z1, w1, x2, y2, z2, w2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  dq[4] = x2;\n  dq[5] = y2;\n  dq[6] = z2;\n  dq[7] = w2;\n  return dq;\n}\n/**\r\n * Creates a new dual quat from the given values (quat and translation)\r\n *\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component (translation)\r\n * @param {Number} y2 Y component (translation)\r\n * @param {Number} z2 Z component (translation)\r\n * @returns {quat2} new dual quaternion\r\n * @function\r\n */\n\nfunction fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {\n  var dq = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(8);\n  dq[0] = x1;\n  dq[1] = y1;\n  dq[2] = z1;\n  dq[3] = w1;\n  var ax = x2 * 0.5,\n      ay = y2 * 0.5,\n      az = z2 * 0.5;\n  dq[4] = ax * w1 + ay * z1 - az * y1;\n  dq[5] = ay * w1 + az * x1 - ax * z1;\n  dq[6] = az * w1 + ax * y1 - ay * x1;\n  dq[7] = -ax * x1 - ay * y1 - az * z1;\n  return dq;\n}\n/**\r\n * Creates a dual quat from a quaternion and a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q a normalized quaternion\r\n * @param {vec3} t tranlation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotationTranslation(out, q, t) {\n  var ax = t[0] * 0.5,\n      ay = t[1] * 0.5,\n      az = t[2] * 0.5,\n      bx = q[0],\n      by = q[1],\n      bz = q[2],\n      bw = q[3];\n  out[0] = bx;\n  out[1] = by;\n  out[2] = bz;\n  out[3] = bw;\n  out[4] = ax * bw + ay * bz - az * by;\n  out[5] = ay * bw + az * bx - ax * bz;\n  out[6] = az * bw + ax * by - ay * bx;\n  out[7] = -ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Creates a dual quat from a translation\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {vec3} t translation vector\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromTranslation(out, t) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = t[0] * 0.5;\n  out[5] = t[1] * 0.5;\n  out[6] = t[2] * 0.5;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a dual quat from a quaternion\r\n *\r\n * @param {quat2} dual quaternion receiving operation result\r\n * @param {quat} q the quaternion\r\n * @returns {quat2} dual quaternion receiving operation result\r\n * @function\r\n */\n\nfunction fromRotation(out, q) {\n  out[0] = q[0];\n  out[1] = q[1];\n  out[2] = q[2];\n  out[3] = q[3];\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Creates a new dual quat from a matrix (4x4)\r\n *\r\n * @param {quat2} out the dual quaternion\r\n * @param {mat4} a the matrix\r\n * @returns {quat2} dual quat receiving operation result\r\n * @function\r\n */\n\nfunction fromMat4(out, a) {\n  //TODO Optimize this\n  var outer = _quat_js__WEBPACK_IMPORTED_MODULE_1__.create();\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__.getRotation(outer, a);\n  var t = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  _mat4_js__WEBPACK_IMPORTED_MODULE_2__.getTranslation(t, a);\n  fromRotationTranslation(out, outer, t);\n  return out;\n}\n/**\r\n * Copy the values from one dual quat to another\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the source dual quaternion\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Set a dual quat to the identity dual quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @returns {quat2} out\r\n */\n\nfunction identity(out) {\n  out[0] = 0;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 1;\n  out[4] = 0;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  return out;\n}\n/**\r\n * Set the components of a dual quat to the given values\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {Number} x1 X component\r\n * @param {Number} y1 Y component\r\n * @param {Number} z1 Z component\r\n * @param {Number} w1 W component\r\n * @param {Number} x2 X component\r\n * @param {Number} y2 Y component\r\n * @param {Number} z2 Z component\r\n * @param {Number} w2 W component\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction set(out, x1, y1, z1, w1, x2, y2, z2, w2) {\n  out[0] = x1;\n  out[1] = y1;\n  out[2] = z1;\n  out[3] = w1;\n  out[4] = x2;\n  out[5] = y2;\n  out[6] = z2;\n  out[7] = w2;\n  return out;\n}\n/**\r\n * Gets the real part of a dual quat\r\n * @param  {quat} out real part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} real part\r\n */\n\nvar getReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Gets the dual part of a dual quat\r\n * @param  {quat} out dual part\r\n * @param  {quat2} a Dual Quaternion\r\n * @return {quat} dual part\r\n */\n\nfunction getDual(out, a) {\n  out[0] = a[4];\n  out[1] = a[5];\n  out[2] = a[6];\n  out[3] = a[7];\n  return out;\n}\n/**\r\n * Set the real component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the real part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nvar setReal = _quat_js__WEBPACK_IMPORTED_MODULE_1__.copy;\n/**\r\n * Set the dual component of a dual quat to the given quaternion\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat} q a quaternion representing the dual part\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction setDual(out, q) {\n  out[4] = q[0];\n  out[5] = q[1];\n  out[6] = q[2];\n  out[7] = q[3];\n  return out;\n}\n/**\r\n * Gets the translation of a normalized dual quat\r\n * @param  {vec3} out translation\r\n * @param  {quat2} a Dual Quaternion to be decomposed\r\n * @return {vec3} translation\r\n */\n\nfunction getTranslation(out, a) {\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3];\n  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  return out;\n}\n/**\r\n * Translates a dual quat by the given vector\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to translate\r\n * @param {vec3} v vector to translate by\r\n * @returns {quat2} out\r\n */\n\nfunction translate(out, a, v) {\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3],\n      bx1 = v[0] * 0.5,\n      by1 = v[1] * 0.5,\n      bz1 = v[2] * 0.5,\n      ax2 = a[4],\n      ay2 = a[5],\n      az2 = a[6],\n      aw2 = a[7];\n  out[0] = ax1;\n  out[1] = ay1;\n  out[2] = az1;\n  out[3] = aw1;\n  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;\n  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;\n  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;\n  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the X axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateX(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateX(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Y axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateY(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateY(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around the Z axis\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {number} rad how far should the rotation be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateZ(out, a, rad) {\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7],\n      ax1 = ax * bw + aw * bx + ay * bz - az * by,\n      ay1 = ay * bw + aw * by + az * bx - ax * bz,\n      az1 = az * bw + aw * bz + ax * by - ay * bx,\n      aw1 = aw * bw - ax * bx - ay * by - az * bz;\n  _quat_js__WEBPACK_IMPORTED_MODULE_1__.rotateZ(out, a, rad);\n  bx = out[0];\n  by = out[1];\n  bz = out[2];\n  bw = out[3];\n  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (a * q)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {quat} q quaternion to rotate by\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatAppend(out, a, q) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      ax = a[0],\n      ay = a[1],\n      az = a[2],\n      aw = a[3];\n  out[0] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[1] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[2] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[3] = aw * qw - ax * qx - ay * qy - az * qz;\n  ax = a[4];\n  ay = a[5];\n  az = a[6];\n  aw = a[7];\n  out[4] = ax * qw + aw * qx + ay * qz - az * qy;\n  out[5] = ay * qw + aw * qy + az * qx - ax * qz;\n  out[6] = az * qw + aw * qz + ax * qy - ay * qx;\n  out[7] = aw * qw - ax * qx - ay * qy - az * qz;\n  return out;\n}\n/**\r\n * Rotates a dual quat by a given quaternion (q * a)\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat} q quaternion to rotate by\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @returns {quat2} out\r\n */\n\nfunction rotateByQuatPrepend(out, q, a) {\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3],\n      bx = a[0],\n      by = a[1],\n      bz = a[2],\n      bw = a[3];\n  out[0] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[1] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[2] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[3] = qw * bw - qx * bx - qy * by - qz * bz;\n  bx = a[4];\n  by = a[5];\n  bz = a[6];\n  bw = a[7];\n  out[4] = qx * bw + qw * bx + qy * bz - qz * by;\n  out[5] = qy * bw + qw * by + qz * bx - qx * bz;\n  out[6] = qz * bw + qw * bz + qx * by - qy * bx;\n  out[7] = qw * bw - qx * bx - qy * by - qz * bz;\n  return out;\n}\n/**\r\n * Rotates a dual quat around a given axis. Does the normalisation automatically\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the dual quaternion to rotate\r\n * @param {vec3} axis the axis to rotate around\r\n * @param {Number} rad how far the rotation should be\r\n * @returns {quat2} out\r\n */\n\nfunction rotateAroundAxis(out, a, axis, rad) {\n  //Special case for rad = 0\n  if (Math.abs(rad) < _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON) {\n    return copy(out, a);\n  }\n\n  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);\n  rad = rad * 0.5;\n  var s = Math.sin(rad);\n  var bx = s * axis[0] / axisLength;\n  var by = s * axis[1] / axisLength;\n  var bz = s * axis[2] / axisLength;\n  var bw = Math.cos(rad);\n  var ax1 = a[0],\n      ay1 = a[1],\n      az1 = a[2],\n      aw1 = a[3];\n  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;\n  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;\n  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;\n  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;\n  var ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  out[4] = ax * bw + aw * bx + ay * bz - az * by;\n  out[5] = ay * bw + aw * by + az * bx - ax * bz;\n  out[6] = az * bw + aw * bz + ax * by - ay * bx;\n  out[7] = aw * bw - ax * bx - ay * by - az * bz;\n  return out;\n}\n/**\r\n * Adds two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  return out;\n}\n/**\r\n * Multiplies two dual quat's\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {quat2} out\r\n */\n\nfunction multiply(out, a, b) {\n  var ax0 = a[0],\n      ay0 = a[1],\n      az0 = a[2],\n      aw0 = a[3],\n      bx1 = b[4],\n      by1 = b[5],\n      bz1 = b[6],\n      bw1 = b[7],\n      ax1 = a[4],\n      ay1 = a[5],\n      az1 = a[6],\n      aw1 = a[7],\n      bx0 = b[0],\n      by0 = b[1],\n      bz0 = b[2],\n      bw0 = b[3];\n  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;\n  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;\n  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;\n  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;\n  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;\n  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;\n  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;\n  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;\n  return out;\n}\n/**\r\n * Alias for {@link quat2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Scales a dual quat by a scalar number\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the dual quat to scale\r\n * @param {Number} b amount to scale the dual quat by\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  return out;\n}\n/**\r\n * Calculates the dot product of two dual quat's (The dot product of the real parts)\r\n *\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n * @function\r\n */\n\nvar dot = _quat_js__WEBPACK_IMPORTED_MODULE_1__.dot;\n/**\r\n * Performs a linear interpolation between two dual quats's\r\n * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)\r\n *\r\n * @param {quat2} out the receiving dual quat\r\n * @param {quat2} a the first operand\r\n * @param {quat2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {quat2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var mt = 1 - t;\n  if (dot(a, b) < 0) t = -t;\n  out[0] = a[0] * mt + b[0] * t;\n  out[1] = a[1] * mt + b[1] * t;\n  out[2] = a[2] * mt + b[2] * t;\n  out[3] = a[3] * mt + b[3] * t;\n  out[4] = a[4] * mt + b[4] * t;\n  out[5] = a[5] * mt + b[5] * t;\n  out[6] = a[6] * mt + b[6] * t;\n  out[7] = a[7] * mt + b[7] * t;\n  return out;\n}\n/**\r\n * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quat to calculate inverse of\r\n * @returns {quat2} out\r\n */\n\nfunction invert(out, a) {\n  var sqlen = squaredLength(a);\n  out[0] = -a[0] / sqlen;\n  out[1] = -a[1] / sqlen;\n  out[2] = -a[2] / sqlen;\n  out[3] = a[3] / sqlen;\n  out[4] = -a[4] / sqlen;\n  out[5] = -a[5] / sqlen;\n  out[6] = -a[6] / sqlen;\n  out[7] = a[7] / sqlen;\n  return out;\n}\n/**\r\n * Calculates the conjugate of a dual quat\r\n * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.\r\n *\r\n * @param {quat2} out the receiving quaternion\r\n * @param {quat2} a quat to calculate conjugate of\r\n * @returns {quat2} out\r\n */\n\nfunction conjugate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = a[3];\n  out[4] = -a[4];\n  out[5] = -a[5];\n  out[6] = -a[6];\n  out[7] = a[7];\n  return out;\n}\n/**\r\n * Calculates the length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate length of\r\n * @returns {Number} length of a\r\n * @function\r\n */\n\nvar length = _quat_js__WEBPACK_IMPORTED_MODULE_1__.length;\n/**\r\n * Alias for {@link quat2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Calculates the squared length of a dual quat\r\n *\r\n * @param {quat2} a dual quat to calculate squared length of\r\n * @returns {Number} squared length of a\r\n * @function\r\n */\n\nvar squaredLength = _quat_js__WEBPACK_IMPORTED_MODULE_1__.squaredLength;\n/**\r\n * Alias for {@link quat2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Normalize a dual quat\r\n *\r\n * @param {quat2} out the receiving dual quaternion\r\n * @param {quat2} a dual quaternion to normalize\r\n * @returns {quat2} out\r\n * @function\r\n */\n\nfunction normalize(out, a) {\n  var magnitude = squaredLength(a);\n\n  if (magnitude > 0) {\n    magnitude = Math.sqrt(magnitude);\n    var a0 = a[0] / magnitude;\n    var a1 = a[1] / magnitude;\n    var a2 = a[2] / magnitude;\n    var a3 = a[3] / magnitude;\n    var b0 = a[4];\n    var b1 = a[5];\n    var b2 = a[6];\n    var b3 = a[7];\n    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;\n    out[0] = a0;\n    out[1] = a1;\n    out[2] = a2;\n    out[3] = a3;\n    out[4] = (b0 - a0 * a_dot_b) / magnitude;\n    out[5] = (b1 - a1 * a_dot_b) / magnitude;\n    out[6] = (b2 - a2 * a_dot_b) / magnitude;\n    out[7] = (b3 - a3 * a_dot_b) / magnitude;\n  }\n\n  return out;\n}\n/**\r\n * Returns a string representation of a dual quatenion\r\n *\r\n * @param {quat2} a dual quaternion to represent as a string\r\n * @returns {String} string representation of the dual quat\r\n */\n\nfunction str(a) {\n  return 'quat2(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ', ' + a[4] + ', ' + a[5] + ', ' + a[6] + ', ' + a[7] + ')';\n}\n/**\r\n * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {quat2} a the first dual quaternion.\r\n * @param {quat2} b the second dual quaternion.\r\n * @returns {Boolean} true if the dual quaternions are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];\n}\n/**\r\n * Returns whether or not the dual quaternions have approximately the same elements in the same position.\r\n *\r\n * @param {quat2} a the first dual quat.\r\n * @param {quat2} b the second dual quat.\r\n * @returns {Boolean} true if the dual quats are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));\n}\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/quat2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec2.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec2.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"divide\": () => /* binding */ divide,\n/* harmony export */   \"ceil\": () => /* binding */ ceil,\n/* harmony export */   \"floor\": () => /* binding */ floor,\n/* harmony export */   \"min\": () => /* binding */ min,\n/* harmony export */   \"max\": () => /* binding */ max,\n/* harmony export */   \"round\": () => /* binding */ round,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"scaleAndAdd\": () => /* binding */ scaleAndAdd,\n/* harmony export */   \"distance\": () => /* binding */ distance,\n/* harmony export */   \"squaredDistance\": () => /* binding */ squaredDistance,\n/* harmony export */   \"length\": () => /* binding */ length,\n/* harmony export */   \"squaredLength\": () => /* binding */ squaredLength,\n/* harmony export */   \"negate\": () => /* binding */ negate,\n/* harmony export */   \"inverse\": () => /* binding */ inverse,\n/* harmony export */   \"normalize\": () => /* binding */ normalize,\n/* harmony export */   \"dot\": () => /* binding */ dot,\n/* harmony export */   \"cross\": () => /* binding */ cross,\n/* harmony export */   \"lerp\": () => /* binding */ lerp,\n/* harmony export */   \"random\": () => /* binding */ random,\n/* harmony export */   \"transformMat2\": () => /* binding */ transformMat2,\n/* harmony export */   \"transformMat2d\": () => /* binding */ transformMat2d,\n/* harmony export */   \"transformMat3\": () => /* binding */ transformMat3,\n/* harmony export */   \"transformMat4\": () => /* binding */ transformMat4,\n/* harmony export */   \"rotate\": () => /* binding */ rotate,\n/* harmony export */   \"angle\": () => /* binding */ angle,\n/* harmony export */   \"zero\": () => /* binding */ zero,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"len\": () => /* binding */ len,\n/* harmony export */   \"sub\": () => /* binding */ sub,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"div\": () => /* binding */ div,\n/* harmony export */   \"dist\": () => /* binding */ dist,\n/* harmony export */   \"sqrDist\": () => /* binding */ sqrDist,\n/* harmony export */   \"sqrLen\": () => /* binding */ sqrLen,\n/* harmony export */   \"forEach\": () => /* binding */ forEach\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 2 Dimensional Vector\r\n * @module vec2\r\n */\n\n/**\r\n * Creates a new, empty vec2\r\n *\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with values from an existing vector\r\n *\r\n * @param {vec2} a vector to clone\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Creates a new vec2 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} a new 2D vector\r\n */\n\nfunction fromValues(x, y) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Copy the values from one vec2 to another\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the source vector\r\n * @returns {vec2} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n/**\r\n * Set the components of a vec2 to the given values\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @returns {vec2} out\r\n */\n\nfunction set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n/**\r\n * Adds two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n/**\r\n * Multiplies two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n/**\r\n * Divides two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to ceil\r\n * @returns {vec2} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to floor\r\n * @returns {vec2} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec2} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to round\r\n * @returns {vec2} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n/**\r\n * Scales a vec2 by a scalar number\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec2} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n/**\r\n * Adds two vec2's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec2} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0],\n      y = b[1] - a[1];\n  return x * x + y * y;\n}\n/**\r\n * Calculates the length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0],\n      y = a[1];\n  return Math.hypot(x, y);\n}\n/**\r\n * Calculates the squared length of a vec2\r\n *\r\n * @param {vec2} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0],\n      y = a[1];\n  return x * x + y * y;\n}\n/**\r\n * Negates the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to negate\r\n * @returns {vec2} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to invert\r\n * @returns {vec2} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n/**\r\n * Normalize a vec2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a vector to normalize\r\n * @returns {vec2} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0],\n      y = a[1];\n  var len = x * x + y * y;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec2's\r\n *\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n/**\r\n * Computes the cross product of two vec2's\r\n * Note that the cross product must by definition produce a 3D vector\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec2's\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the first operand\r\n * @param {vec2} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec2} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0],\n      ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec2} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat2d\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat2d} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat2d(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat3\r\n * 3rd vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat3} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n/**\r\n * Transforms the vec2 with a mat4\r\n * 3rd vector component is implicitly '0'\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @param {vec2} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec2} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0];\n  var y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n/**\r\n * Rotate a 2D vector\r\n * @param {vec2} out The receiving vec2\r\n * @param {vec2} a The vec2 point to rotate\r\n * @param {vec2} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec2} out\r\n */\n\nfunction rotate(out, a, b, c) {\n  //Translate point to the origin\n  var p0 = a[0] - b[0],\n      p1 = a[1] - b[1],\n      sinC = Math.sin(c),\n      cosC = Math.cos(c); //perform rotation and translate to correct position\n\n  out[0] = p0 * cosC - p1 * sinC + b[0];\n  out[1] = p0 * sinC + p1 * cosC + b[1];\n  return out;\n}\n/**\r\n * Get the angle between two 2D vectors\r\n * @param {vec2} a The first operand\r\n * @param {vec2} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var x1 = a[0],\n      y1 = a[1],\n      x2 = b[0],\n      y2 = b[1];\n  var len1 = x1 * x1 + y1 * y1;\n\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n\n  var len2 = x2 * x2 + y2 * y2;\n\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n\n  var cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec2 to zero\r\n *\r\n * @param {vec2} out the receiving vector\r\n * @returns {vec2} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec2} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n/**\r\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec2} a The first vector.\r\n * @param {vec2} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1];\n  var b0 = b[0],\n      b1 = b[1];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));\n}\n/**\r\n * Alias for {@link vec2.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec2.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec2.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec2.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec2.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec2.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec2.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec2s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 2;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/vec2.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec3.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec3.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"length\": () => /* binding */ length,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"divide\": () => /* binding */ divide,\n/* harmony export */   \"ceil\": () => /* binding */ ceil,\n/* harmony export */   \"floor\": () => /* binding */ floor,\n/* harmony export */   \"min\": () => /* binding */ min,\n/* harmony export */   \"max\": () => /* binding */ max,\n/* harmony export */   \"round\": () => /* binding */ round,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"scaleAndAdd\": () => /* binding */ scaleAndAdd,\n/* harmony export */   \"distance\": () => /* binding */ distance,\n/* harmony export */   \"squaredDistance\": () => /* binding */ squaredDistance,\n/* harmony export */   \"squaredLength\": () => /* binding */ squaredLength,\n/* harmony export */   \"negate\": () => /* binding */ negate,\n/* harmony export */   \"inverse\": () => /* binding */ inverse,\n/* harmony export */   \"normalize\": () => /* binding */ normalize,\n/* harmony export */   \"dot\": () => /* binding */ dot,\n/* harmony export */   \"cross\": () => /* binding */ cross,\n/* harmony export */   \"lerp\": () => /* binding */ lerp,\n/* harmony export */   \"hermite\": () => /* binding */ hermite,\n/* harmony export */   \"bezier\": () => /* binding */ bezier,\n/* harmony export */   \"random\": () => /* binding */ random,\n/* harmony export */   \"transformMat4\": () => /* binding */ transformMat4,\n/* harmony export */   \"transformMat3\": () => /* binding */ transformMat3,\n/* harmony export */   \"transformQuat\": () => /* binding */ transformQuat,\n/* harmony export */   \"rotateX\": () => /* binding */ rotateX,\n/* harmony export */   \"rotateY\": () => /* binding */ rotateY,\n/* harmony export */   \"rotateZ\": () => /* binding */ rotateZ,\n/* harmony export */   \"angle\": () => /* binding */ angle,\n/* harmony export */   \"zero\": () => /* binding */ zero,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"sub\": () => /* binding */ sub,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"div\": () => /* binding */ div,\n/* harmony export */   \"dist\": () => /* binding */ dist,\n/* harmony export */   \"sqrDist\": () => /* binding */ sqrDist,\n/* harmony export */   \"len\": () => /* binding */ len,\n/* harmony export */   \"sqrLen\": () => /* binding */ sqrLen,\n/* harmony export */   \"forEach\": () => /* binding */ forEach\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 3 Dimensional Vector\r\n * @module vec3\r\n */\n\n/**\r\n * Creates a new, empty vec3\r\n *\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec3 initialized with values from an existing vector\r\n *\r\n * @param {vec3} a vector to clone\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Calculates the length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Creates a new vec3 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} a new 3D vector\r\n */\n\nfunction fromValues(x, y, z) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Copy the values from one vec3 to another\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the source vector\r\n * @returns {vec3} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\r\n * Set the components of a vec3 to the given values\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @returns {vec3} out\r\n */\n\nfunction set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\r\n * Adds two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\r\n * Multiplies two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\r\n * Divides two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to ceil\r\n * @returns {vec3} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to floor\r\n * @returns {vec3} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to round\r\n * @returns {vec3} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\r\n * Scales a vec3 by a scalar number\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec3} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\r\n * Adds two vec3's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec3} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Calculates the squared length of a vec3\r\n *\r\n * @param {vec3} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\r\n * Negates the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to negate\r\n * @returns {vec3} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to invert\r\n * @returns {vec3} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\r\n * Normalize a vec3\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a vector to normalize\r\n * @returns {vec3} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec3's\r\n *\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\r\n * Computes the cross product of two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @returns {vec3} out\r\n */\n\nfunction cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\r\n * Performs a linear interpolation between two vec3's\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\r\n * Performs a hermite interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Performs a bezier interpolation with two control points\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the first operand\r\n * @param {vec3} b the second operand\r\n * @param {vec3} c the third operand\r\n * @param {vec3} d the fourth operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec3} out\r\n */\n\nfunction bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec3} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0;\n  var r = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 * Math.PI;\n  var z = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat4.\r\n * 4th vector component is implicitly '1'\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\r\n * Transforms the vec3 with a mat3.\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {mat3} m the 3x3 matrix to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\r\n * Transforms the vec3 with a quat\r\n * Can also be used for dual quaternions. (Multiply it with the real part)\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @param {vec3} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec3} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the x-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateX(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\n  r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the y-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateY(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Rotate a 3D vector around the z-axis\r\n * @param {vec3} out The receiving vec3\r\n * @param {vec3} a The vec3 point to rotate\r\n * @param {vec3} b The origin of the rotation\r\n * @param {Number} c The angle of rotation\r\n * @returns {vec3} out\r\n */\n\nfunction rotateZ(out, a, b, c) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\n  r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\r\n * Get the angle between two 3D vectors\r\n * @param {vec3} a The first operand\r\n * @param {vec3} b The second operand\r\n * @returns {Number} The angle in radians\r\n */\n\nfunction angle(a, b) {\n  var tempA = fromValues(a[0], a[1], a[2]);\n  var tempB = fromValues(b[0], b[1], b[2]);\n  normalize(tempA, tempA);\n  normalize(tempB, tempB);\n  var cosine = dot(tempA, tempB);\n\n  if (cosine > 1.0) {\n    return 0;\n  } else if (cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n/**\r\n * Set the components of a vec3 to zero\r\n *\r\n * @param {vec3} out the receiving vector\r\n * @returns {vec3} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec3} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec3(' + a[0] + ', ' + a[1] + ', ' + a[2] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec3} a The first vector.\r\n * @param {vec3} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\r\n * Alias for {@link vec3.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec3.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec3.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec3.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec3.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec3.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec3.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec3s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/vec3.js?");

/***/ }),

/***/ "./node_modules/gl-matrix/esm/vec4.js":
/*!********************************************!*\
  !*** ./node_modules/gl-matrix/esm/vec4.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"create\": () => /* binding */ create,\n/* harmony export */   \"clone\": () => /* binding */ clone,\n/* harmony export */   \"fromValues\": () => /* binding */ fromValues,\n/* harmony export */   \"copy\": () => /* binding */ copy,\n/* harmony export */   \"set\": () => /* binding */ set,\n/* harmony export */   \"add\": () => /* binding */ add,\n/* harmony export */   \"subtract\": () => /* binding */ subtract,\n/* harmony export */   \"multiply\": () => /* binding */ multiply,\n/* harmony export */   \"divide\": () => /* binding */ divide,\n/* harmony export */   \"ceil\": () => /* binding */ ceil,\n/* harmony export */   \"floor\": () => /* binding */ floor,\n/* harmony export */   \"min\": () => /* binding */ min,\n/* harmony export */   \"max\": () => /* binding */ max,\n/* harmony export */   \"round\": () => /* binding */ round,\n/* harmony export */   \"scale\": () => /* binding */ scale,\n/* harmony export */   \"scaleAndAdd\": () => /* binding */ scaleAndAdd,\n/* harmony export */   \"distance\": () => /* binding */ distance,\n/* harmony export */   \"squaredDistance\": () => /* binding */ squaredDistance,\n/* harmony export */   \"length\": () => /* binding */ length,\n/* harmony export */   \"squaredLength\": () => /* binding */ squaredLength,\n/* harmony export */   \"negate\": () => /* binding */ negate,\n/* harmony export */   \"inverse\": () => /* binding */ inverse,\n/* harmony export */   \"normalize\": () => /* binding */ normalize,\n/* harmony export */   \"dot\": () => /* binding */ dot,\n/* harmony export */   \"cross\": () => /* binding */ cross,\n/* harmony export */   \"lerp\": () => /* binding */ lerp,\n/* harmony export */   \"random\": () => /* binding */ random,\n/* harmony export */   \"transformMat4\": () => /* binding */ transformMat4,\n/* harmony export */   \"transformQuat\": () => /* binding */ transformQuat,\n/* harmony export */   \"zero\": () => /* binding */ zero,\n/* harmony export */   \"str\": () => /* binding */ str,\n/* harmony export */   \"exactEquals\": () => /* binding */ exactEquals,\n/* harmony export */   \"equals\": () => /* binding */ equals,\n/* harmony export */   \"sub\": () => /* binding */ sub,\n/* harmony export */   \"mul\": () => /* binding */ mul,\n/* harmony export */   \"div\": () => /* binding */ div,\n/* harmony export */   \"dist\": () => /* binding */ dist,\n/* harmony export */   \"sqrDist\": () => /* binding */ sqrDist,\n/* harmony export */   \"len\": () => /* binding */ len,\n/* harmony export */   \"sqrLen\": () => /* binding */ sqrLen,\n/* harmony export */   \"forEach\": () => /* binding */ forEach\n/* harmony export */ });\n/* harmony import */ var _common_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common.js */ \"./node_modules/gl-matrix/esm/common.js\");\n\n/**\r\n * 4 Dimensional Vector\r\n * @module vec4\r\n */\n\n/**\r\n * Creates a new, empty vec4\r\n *\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction create() {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n\n  if (_common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n  }\n\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with values from an existing vector\r\n *\r\n * @param {vec4} a vector to clone\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction clone(a) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Creates a new vec4 initialized with the given values\r\n *\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} a new 4D vector\r\n */\n\nfunction fromValues(x, y, z, w) {\n  var out = new _common_js__WEBPACK_IMPORTED_MODULE_0__.ARRAY_TYPE(4);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Copy the values from one vec4 to another\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the source vector\r\n * @returns {vec4} out\r\n */\n\nfunction copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to the given values\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} x X component\r\n * @param {Number} y Y component\r\n * @param {Number} z Z component\r\n * @param {Number} w W component\r\n * @returns {vec4} out\r\n */\n\nfunction set(out, x, y, z, w) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  out[3] = w;\n  return out;\n}\n/**\r\n * Adds two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  return out;\n}\n/**\r\n * Subtracts vector b from vector a\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  return out;\n}\n/**\r\n * Multiplies two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  out[3] = a[3] * b[3];\n  return out;\n}\n/**\r\n * Divides two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  out[3] = a[3] / b[3];\n  return out;\n}\n/**\r\n * Math.ceil the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to ceil\r\n * @returns {vec4} out\r\n */\n\nfunction ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  out[3] = Math.ceil(a[3]);\n  return out;\n}\n/**\r\n * Math.floor the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to floor\r\n * @returns {vec4} out\r\n */\n\nfunction floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  out[3] = Math.floor(a[3]);\n  return out;\n}\n/**\r\n * Returns the minimum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  out[3] = Math.min(a[3], b[3]);\n  return out;\n}\n/**\r\n * Returns the maximum of two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {vec4} out\r\n */\n\nfunction max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  out[3] = Math.max(a[3], b[3]);\n  return out;\n}\n/**\r\n * Math.round the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to round\r\n * @returns {vec4} out\r\n */\n\nfunction round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  out[3] = Math.round(a[3]);\n  return out;\n}\n/**\r\n * Scales a vec4 by a scalar number\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to scale\r\n * @param {Number} b amount to scale the vector by\r\n * @returns {vec4} out\r\n */\n\nfunction scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  return out;\n}\n/**\r\n * Adds two vec4's after scaling the second operand by a scalar value\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} scale the amount to scale b by before adding\r\n * @returns {vec4} out\r\n */\n\nfunction scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  return out;\n}\n/**\r\n * Calculates the euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} distance between a and b\r\n */\n\nfunction distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared euclidian distance between two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} squared distance between a and b\r\n */\n\nfunction squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  var w = b[3] - a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Calculates the length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate length of\r\n * @returns {Number} length of a\r\n */\n\nfunction length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return Math.hypot(x, y, z, w);\n}\n/**\r\n * Calculates the squared length of a vec4\r\n *\r\n * @param {vec4} a vector to calculate squared length of\r\n * @returns {Number} squared length of a\r\n */\n\nfunction squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  return x * x + y * y + z * z + w * w;\n}\n/**\r\n * Negates the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to negate\r\n * @returns {vec4} out\r\n */\n\nfunction negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  out[3] = -a[3];\n  return out;\n}\n/**\r\n * Returns the inverse of the components of a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to invert\r\n * @returns {vec4} out\r\n */\n\nfunction inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  out[3] = 1.0 / a[3];\n  return out;\n}\n/**\r\n * Normalize a vec4\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a vector to normalize\r\n * @returns {vec4} out\r\n */\n\nfunction normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var w = a[3];\n  var len = x * x + y * y + z * z + w * w;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = x * len;\n  out[1] = y * len;\n  out[2] = z * len;\n  out[3] = w * len;\n  return out;\n}\n/**\r\n * Calculates the dot product of two vec4's\r\n *\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @returns {Number} dot product of a and b\r\n */\n\nfunction dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n/**\r\n * Returns the cross-product of three vectors in a 4-dimensional space\r\n *\r\n * @param {vec4} result the receiving vector\r\n * @param {vec4} U the first vector\r\n * @param {vec4} V the second vector\r\n * @param {vec4} W the third vector\r\n * @returns {vec4} result\r\n */\n\nfunction cross(out, u, v, w) {\n  var A = v[0] * w[1] - v[1] * w[0],\n      B = v[0] * w[2] - v[2] * w[0],\n      C = v[0] * w[3] - v[3] * w[0],\n      D = v[1] * w[2] - v[2] * w[1],\n      E = v[1] * w[3] - v[3] * w[1],\n      F = v[2] * w[3] - v[3] * w[2];\n  var G = u[0];\n  var H = u[1];\n  var I = u[2];\n  var J = u[3];\n  out[0] = H * F - I * E + J * D;\n  out[1] = -(G * F) + I * C - J * B;\n  out[2] = G * E - H * C + J * A;\n  out[3] = -(G * D) + H * B - I * A;\n  return out;\n}\n;\n/**\r\n * Performs a linear interpolation between two vec4's\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the first operand\r\n * @param {vec4} b the second operand\r\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n * @returns {vec4} out\r\n */\n\nfunction lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  var aw = a[3];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  out[3] = aw + t * (b[3] - aw);\n  return out;\n}\n/**\r\n * Generates a random vector with the given scale\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n * @returns {vec4} out\r\n */\n\nfunction random(out, scale) {\n  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a\n  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.\n  // http://projecteuclid.org/euclid.aoms/1177692644;\n\n  var v1, v2, v3, v4;\n  var s1, s2;\n\n  do {\n    v1 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v2 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s1 = v1 * v1 + v2 * v2;\n  } while (s1 >= 1);\n\n  do {\n    v3 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    v4 = _common_js__WEBPACK_IMPORTED_MODULE_0__.RANDOM() * 2 - 1;\n    s2 = v3 * v3 + v4 * v4;\n  } while (s2 >= 1);\n\n  var d = Math.sqrt((1 - s1) / s2);\n  out[0] = scale * v1;\n  out[1] = scale * v2;\n  out[2] = scale * v3 * d;\n  out[3] = scale * v4 * d;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a mat4.\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {mat4} m matrix to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2],\n      w = a[3];\n  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\n  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\n  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\n  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\n  return out;\n}\n/**\r\n * Transforms the vec4 with a quat\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @param {vec4} a the vector to transform\r\n * @param {quat} q quaternion to transform with\r\n * @returns {vec4} out\r\n */\n\nfunction transformQuat(out, a, q) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3]; // calculate quat * vec\n\n  var ix = qw * x + qy * z - qz * y;\n  var iy = qw * y + qz * x - qx * z;\n  var iz = qw * z + qx * y - qy * x;\n  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n  out[3] = a[3];\n  return out;\n}\n/**\r\n * Set the components of a vec4 to zero\r\n *\r\n * @param {vec4} out the receiving vector\r\n * @returns {vec4} out\r\n */\n\nfunction zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  return out;\n}\n/**\r\n * Returns a string representation of a vector\r\n *\r\n * @param {vec4} a vector to represent as a string\r\n * @returns {String} string representation of the vector\r\n */\n\nfunction str(a) {\n  return 'vec4(' + a[0] + ', ' + a[1] + ', ' + a[2] + ', ' + a[3] + ')';\n}\n/**\r\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\n}\n/**\r\n * Returns whether or not the vectors have approximately the same elements in the same position.\r\n *\r\n * @param {vec4} a The first vector.\r\n * @param {vec4} b The second vector.\r\n * @returns {Boolean} True if the vectors are equal, false otherwise.\r\n */\n\nfunction equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  return Math.abs(a0 - b0) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= _common_js__WEBPACK_IMPORTED_MODULE_0__.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\n}\n/**\r\n * Alias for {@link vec4.subtract}\r\n * @function\r\n */\n\nvar sub = subtract;\n/**\r\n * Alias for {@link vec4.multiply}\r\n * @function\r\n */\n\nvar mul = multiply;\n/**\r\n * Alias for {@link vec4.divide}\r\n * @function\r\n */\n\nvar div = divide;\n/**\r\n * Alias for {@link vec4.distance}\r\n * @function\r\n */\n\nvar dist = distance;\n/**\r\n * Alias for {@link vec4.squaredDistance}\r\n * @function\r\n */\n\nvar sqrDist = squaredDistance;\n/**\r\n * Alias for {@link vec4.length}\r\n * @function\r\n */\n\nvar len = length;\n/**\r\n * Alias for {@link vec4.squaredLength}\r\n * @function\r\n */\n\nvar sqrLen = squaredLength;\n/**\r\n * Perform some operation over an array of vec4s.\r\n *\r\n * @param {Array} a the array of vectors to iterate over\r\n * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n * @param {Number} offset Number of elements to skip at the beginning of the array\r\n * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array\r\n * @param {Function} fn Function to call for each vector in the array\r\n * @param {Object} [arg] additional argument to pass to fn\r\n * @returns {Array} a\r\n * @function\r\n */\n\nvar forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 4;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      vec[3] = a[i + 3];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n      a[i + 3] = vec[3];\n    }\n\n    return a;\n  };\n}();\n\n//# sourceURL=webpack://zappar-threejs-examples/./node_modules/gl-matrix/esm/vec4.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		if(__webpack_module_cache__[moduleId]) {
/******/ 			return __webpack_module_cache__[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/publicPath */
/******/ 	(() => {
/******/ 		var scriptUrl;
/******/ 		if (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + "";
/******/ 		var document = __webpack_require__.g.document;
/******/ 		if (!scriptUrl && document) {
/******/ 			if (document.currentScript)
/******/ 				scriptUrl = document.currentScript.src
/******/ 			if (!scriptUrl) {
/******/ 				var scripts = document.getElementsByTagName("script");
/******/ 				if(scripts.length) scriptUrl = scripts[scripts.length - 1].src
/******/ 			}
/******/ 		}
/******/ 		// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration
/******/ 		// or pass an empty string ("") and set the __webpack_public_path__ variable from your code to use your own logic.
/******/ 		if (!scriptUrl) throw new Error("Automatic publicPath is not supported in this browser");
/******/ 		scriptUrl = scriptUrl.replace(/#.*$/, "").replace(/\?.*$/, "").replace(/\/[^\/]+$/, "/");
/******/ 		__webpack_require__.p = scriptUrl;
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	// startup
/******/ 	// Load entry module
/******/ 	__webpack_require__("./node_modules/@zappar/zappar-cv/lib/worker.js");
/******/ 	// This entry module used 'exports' so it can't be inlined
/******/ })()
;